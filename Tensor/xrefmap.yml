### YamlMime:XRefMap
sorted: true
references:
- uid: Tensor
  name: Tensor
  href: api/Tensor.html
  commentId: N:Tensor
  fullName: Tensor
  nameWithType: Tensor
- uid: Tensor.Algorithm
  name: Tensor.Algorithm
  href: api/Tensor.Algorithm.html
  commentId: N:Tensor.Algorithm
  fullName: Tensor.Algorithm
  nameWithType: Tensor.Algorithm
- uid: Tensor.Algorithm.BigIntegerExtensions
  name: BigIntegerExtensions (mod)
  href: api/Tensor.Algorithm.BigIntegerExtensions.html
  commentId: T:Tensor.Algorithm.BigIntegerExtensions
  fullName: Tensor.Algorithm.BigIntegerExtensions
  nameWithType: Tensor.Algorithm.BigIntegerExtensions
- uid: Tensor.Algorithm.BigIntegerExtensions.___System.Numerics.BigInteger.BigInteger.Bezout.Static(bigint * bigint)
  name: 'extension System.Numerics.BigInteger.Bezout: bigint * bigint -> bigint * bigint * bigint'
  href: api/Tensor.Algorithm.BigIntegerExtensions.___System.Numerics.BigInteger.BigInteger.Bezout.Static.html#Tensor_Algorithm_BigIntegerExtensions____System_Numerics_BigInteger_BigInteger_Bezout_Static_bigint___bigint_
  commentId: M:Tensor.Algorithm.BigInteger.Bezout.Static(System.Numerics.BigInteger,System.Numerics.BigInteger)
  fullName: 'extension Tensor.Algorithm.BigIntegerExtensions.Bezout: bigint * bigint -> bigint * bigint * bigint'
  nameWithType: 'extension System.Numerics.BigInteger.Bezout: bigint * bigint -> bigint * bigint * bigint'
- uid: Tensor.Algorithm.BigIntegerExtensions.___System.Numerics.BigInteger.BigInteger.Bezout.Static*
  name: Bezout
  href: api/Tensor.Algorithm.BigIntegerExtensions.___System.Numerics.BigInteger.BigInteger.Bezout.Static.html
  commentId: Overload:Tensor.Algorithm.BigIntegerExtensions.___System.Numerics.BigInteger.BigInteger.Bezout.Static*
  fullName: Tensor.Algorithm.BigIntegerExtensions.Bezout
  nameWithType: BigIntegerExtensions.Bezout
- uid: Tensor.Algorithm.Decomposition.PCA
  name: Decomposition.PCA
  href: api/Tensor.Algorithm.Decomposition.PCA.html
  commentId: T:Tensor.Algorithm.Decomposition.PCA
  fullName: Tensor.Algorithm.Decomposition.PCA
  nameWithType: Tensor.Algorithm.Decomposition.PCA
- uid: Tensor.Algorithm.Decomposition.PCA.#ctor(unit)
  name: 'new: unit -> PCA'
  href: api/Tensor.Algorithm.Decomposition.PCA.-ctor.html#Tensor_Algorithm_Decomposition_PCA__ctor_unit_
  commentId: M:Tensor.Algorithm.Decomposition.PCA.#ctor
  fullName: 'new: unit -> Tensor.Algorithm.Decomposition.PCA'
  nameWithType: 'new: unit -> PCA'
- uid: Tensor.Algorithm.Decomposition.PCA.#ctor*
  name: ( .ctor )
  href: api/Tensor.Algorithm.Decomposition.PCA.-ctor.html
  commentId: Overload:Tensor.Algorithm.Decomposition.PCA.#ctor*
  fullName: Tensor.Algorithm.Decomposition.PCA
  nameWithType: PCA.( .ctor )
- uid: Tensor.Algorithm.Decomposition.PCA.Perform(Tensor.Tensor<'T> * int64 option)
  name: "static member Perform: Tensor<'T> * int64 option -> Tensor<'T> * PCAInfo<'T>"
  href: api/Tensor.Algorithm.Decomposition.PCA.Perform.html#Tensor_Algorithm_Decomposition_PCA_Perform_Tensor_Tensor__T____int64_option_
  commentId: M:Tensor.Algorithm.Decomposition.PCA.Perform``1(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpOption{System.Int64})
  fullName: "static member Tensor.Algorithm.Decomposition.PCA.Perform: Tensor.Tensor<'T> * int64 option -> Tensor.Tensor<'T> * Tensor.Algorithm.Decomposition.PCAInfo<'T>"
  nameWithType: "static member PCA.Perform: Tensor<'T> * int64 option -> Tensor<'T> * PCAInfo<'T>"
- uid: Tensor.Algorithm.Decomposition.PCA.Perform*
  name: Perform
  href: api/Tensor.Algorithm.Decomposition.PCA.Perform.html
  commentId: Overload:Tensor.Algorithm.Decomposition.PCA.Perform*
  fullName: Tensor.Algorithm.Decomposition.PCA.Perform
  nameWithType: PCA.Perform
- uid: Tensor.Algorithm.Decomposition.PCA.Reverse(Tensor.Tensor<'T> * Tensor.Algorithm.Decomposition.PCAInfo<'T>)
  name: "static member Reverse: Tensor<'T> * PCAInfo<'T> -> Tensor<'T>"
  href: api/Tensor.Algorithm.Decomposition.PCA.Reverse.html#Tensor_Algorithm_Decomposition_PCA_Reverse_Tensor_Tensor__T____Tensor_Algorithm_Decomposition_PCAInfo__T__
  commentId: M:Tensor.Algorithm.Decomposition.PCA.Reverse``1(Tensor.Tensor{``0},Tensor.Algorithm.Decomposition.PCAInfo{``0})
  fullName: "static member Tensor.Algorithm.Decomposition.PCA.Reverse: Tensor.Tensor<'T> * Tensor.Algorithm.Decomposition.PCAInfo<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member PCA.Reverse: Tensor<'T> * PCAInfo<'T> -> Tensor<'T>"
- uid: Tensor.Algorithm.Decomposition.PCA.Reverse*
  name: Reverse
  href: api/Tensor.Algorithm.Decomposition.PCA.Reverse.html
  commentId: Overload:Tensor.Algorithm.Decomposition.PCA.Reverse*
  fullName: Tensor.Algorithm.Decomposition.PCA.Reverse
  nameWithType: PCA.Reverse
- uid: Tensor.Algorithm.Decomposition.PCAInfo`1
  name: Decomposition.PCAInfo<'T> (rec)
  href: api/Tensor.Algorithm.Decomposition.PCAInfo-1.html
  commentId: T:Tensor.Algorithm.Decomposition.PCAInfo`1
  fullName: Tensor.Algorithm.Decomposition.PCAInfo`1
  nameWithType: Tensor.Algorithm.Decomposition.PCAInfo`1
- uid: Tensor.Algorithm.Decomposition.PCAInfo`1.Axes
  name: "val Axes: Tensor<'T>"
  href: api/Tensor.Algorithm.Decomposition.PCAInfo-1.Axes.html
  commentId: P:Tensor.Algorithm.Decomposition.PCAInfo`1.Axes
  fullName: "val Tensor.Algorithm.Decomposition.PCAInfo<_>.Axes: Tensor.Tensor<'T>"
  nameWithType: "val PCAInfo.Axes: Tensor<'T>"
- uid: Tensor.Algorithm.Decomposition.PCAInfo`1.Means
  name: "val Means: Tensor<'T>"
  href: api/Tensor.Algorithm.Decomposition.PCAInfo-1.Means.html
  commentId: P:Tensor.Algorithm.Decomposition.PCAInfo`1.Means
  fullName: "val Tensor.Algorithm.Decomposition.PCAInfo<_>.Means: Tensor.Tensor<'T>"
  nameWithType: "val PCAInfo.Means: Tensor<'T>"
- uid: Tensor.Algorithm.Decomposition.PCAInfo`1.Variances
  name: "val Variances: Tensor<'T>"
  href: api/Tensor.Algorithm.Decomposition.PCAInfo-1.Variances.html
  commentId: P:Tensor.Algorithm.Decomposition.PCAInfo`1.Variances
  fullName: "val Tensor.Algorithm.Decomposition.PCAInfo<_>.Variances: Tensor.Tensor<'T>"
  nameWithType: "val PCAInfo.Variances: Tensor<'T>"
- uid: Tensor.Algorithm.Decomposition.ZCA
  name: Decomposition.ZCA
  href: api/Tensor.Algorithm.Decomposition.ZCA.html
  commentId: T:Tensor.Algorithm.Decomposition.ZCA
  fullName: Tensor.Algorithm.Decomposition.ZCA
  nameWithType: Tensor.Algorithm.Decomposition.ZCA
- uid: Tensor.Algorithm.Decomposition.ZCA.#ctor(unit)
  name: 'new: unit -> ZCA'
  href: api/Tensor.Algorithm.Decomposition.ZCA.-ctor.html#Tensor_Algorithm_Decomposition_ZCA__ctor_unit_
  commentId: M:Tensor.Algorithm.Decomposition.ZCA.#ctor
  fullName: 'new: unit -> Tensor.Algorithm.Decomposition.ZCA'
  nameWithType: 'new: unit -> ZCA'
- uid: Tensor.Algorithm.Decomposition.ZCA.#ctor*
  name: ( .ctor )
  href: api/Tensor.Algorithm.Decomposition.ZCA.-ctor.html
  commentId: Overload:Tensor.Algorithm.Decomposition.ZCA.#ctor*
  fullName: Tensor.Algorithm.Decomposition.ZCA
  nameWithType: ZCA.( .ctor )
- uid: Tensor.Algorithm.Decomposition.ZCA.Perform(Tensor.Tensor<'T>)
  name: "static member Perform: Tensor<'T> -> Tensor<'T> * PCAInfo<'T>"
  href: api/Tensor.Algorithm.Decomposition.ZCA.Perform.html#Tensor_Algorithm_Decomposition_ZCA_Perform_Tensor_Tensor__T__
  commentId: M:Tensor.Algorithm.Decomposition.ZCA.Perform``1(Tensor.Tensor{``0})
  fullName: "static member Tensor.Algorithm.Decomposition.ZCA.Perform: Tensor.Tensor<'T> -> Tensor.Tensor<'T> * Tensor.Algorithm.Decomposition.PCAInfo<'T>"
  nameWithType: "static member ZCA.Perform: Tensor<'T> -> Tensor<'T> * PCAInfo<'T>"
- uid: Tensor.Algorithm.Decomposition.ZCA.Perform*
  name: Perform
  href: api/Tensor.Algorithm.Decomposition.ZCA.Perform.html
  commentId: Overload:Tensor.Algorithm.Decomposition.ZCA.Perform*
  fullName: Tensor.Algorithm.Decomposition.ZCA.Perform
  nameWithType: ZCA.Perform
- uid: Tensor.Algorithm.Decomposition.ZCA.Reverse(Tensor.Tensor<'T> * Tensor.Algorithm.Decomposition.PCAInfo<'T>)
  name: "static member Reverse: Tensor<'T> * PCAInfo<'T> -> Tensor<'T>"
  href: api/Tensor.Algorithm.Decomposition.ZCA.Reverse.html#Tensor_Algorithm_Decomposition_ZCA_Reverse_Tensor_Tensor__T____Tensor_Algorithm_Decomposition_PCAInfo__T__
  commentId: M:Tensor.Algorithm.Decomposition.ZCA.Reverse``1(Tensor.Tensor{``0},Tensor.Algorithm.Decomposition.PCAInfo{``0})
  fullName: "static member Tensor.Algorithm.Decomposition.ZCA.Reverse: Tensor.Tensor<'T> * Tensor.Algorithm.Decomposition.PCAInfo<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member ZCA.Reverse: Tensor<'T> * PCAInfo<'T> -> Tensor<'T>"
- uid: Tensor.Algorithm.Decomposition.ZCA.Reverse*
  name: Reverse
  href: api/Tensor.Algorithm.Decomposition.ZCA.Reverse.html
  commentId: Overload:Tensor.Algorithm.Decomposition.ZCA.Reverse*
  fullName: Tensor.Algorithm.Decomposition.ZCA.Reverse
  nameWithType: ZCA.Reverse
- uid: Tensor.Algorithm.LinAlg
  name: LinAlg (mod)
  href: api/Tensor.Algorithm.LinAlg.html
  commentId: T:Tensor.Algorithm.LinAlg
  fullName: Tensor.Algorithm.LinAlg
  nameWithType: Tensor.Algorithm.LinAlg
- uid: Tensor.Algorithm.LinAlg.generalInverse(Tensor.Tensor<'T>)
  name: "val generalInverse: Tensor<'T> -> Tensor<'T> * Tensor<'T> * Tensor<'T>"
  href: api/Tensor.Algorithm.LinAlg.generalInverse.html#Tensor_Algorithm_LinAlg_generalInverse_Tensor_Tensor__T__
  commentId: M:Tensor.Algorithm.generalInverse``1(Tensor.Tensor{``0})
  fullName: "val Tensor.Algorithm.LinAlg.generalInverse: Tensor.Tensor<'T> -> Tensor.Tensor<'T> * Tensor.Tensor<'T> * Tensor.Tensor<'T>"
  nameWithType: "val LinAlg.generalInverse: Tensor<'T> -> Tensor<'T> * Tensor<'T> * Tensor<'T>"
- uid: Tensor.Algorithm.LinAlg.generalInverse*
  name: generalInverse
  href: api/Tensor.Algorithm.LinAlg.generalInverse.html
  commentId: Overload:Tensor.Algorithm.LinAlg.generalInverse*
  fullName: Tensor.Algorithm.LinAlg.generalInverse
  nameWithType: LinAlg.generalInverse
- uid: Tensor.Algorithm.LinAlg.integerInverse(Tensor.Tensor<bigint>)
  name: 'val integerInverse: Tensor<bigint> -> Tensor<Rat> * Tensor<bigint> * Tensor<bigint>'
  href: api/Tensor.Algorithm.LinAlg.integerInverse.html#Tensor_Algorithm_LinAlg_integerInverse_Tensor_Tensor_bigint__
  commentId: M:Tensor.Algorithm.integerInverse(Tensor.Tensor{System.Numerics.BigInteger})
  fullName: 'val Tensor.Algorithm.LinAlg.integerInverse: Tensor.Tensor<bigint> -> Tensor.Tensor<Tensor.Algorithm.Rat> * Tensor.Tensor<bigint> * Tensor.Tensor<bigint>'
  nameWithType: 'val LinAlg.integerInverse: Tensor<bigint> -> Tensor<Rat> * Tensor<bigint> * Tensor<bigint>'
- uid: Tensor.Algorithm.LinAlg.integerInverse*
  name: integerInverse
  href: api/Tensor.Algorithm.LinAlg.integerInverse.html
  commentId: Overload:Tensor.Algorithm.LinAlg.integerInverse*
  fullName: Tensor.Algorithm.LinAlg.integerInverse
  nameWithType: LinAlg.integerInverse
- uid: Tensor.Algorithm.LinAlg.rowEchelon(Tensor.Tensor<'T>)
  name: "val rowEchelon: Tensor<'T> -> Tensor<'T> * int64 * int64 list"
  href: api/Tensor.Algorithm.LinAlg.rowEchelon.html#Tensor_Algorithm_LinAlg_rowEchelon_Tensor_Tensor__T__
  commentId: M:Tensor.Algorithm.rowEchelon``1(Tensor.Tensor{``0})
  fullName: "val Tensor.Algorithm.LinAlg.rowEchelon: Tensor.Tensor<'T> -> Tensor.Tensor<'T> * int64 * int64 list"
  nameWithType: "val LinAlg.rowEchelon: Tensor<'T> -> Tensor<'T> * int64 * int64 list"
- uid: Tensor.Algorithm.LinAlg.rowEchelon*
  name: rowEchelon
  href: api/Tensor.Algorithm.LinAlg.rowEchelon.html
  commentId: Overload:Tensor.Algorithm.LinAlg.rowEchelon*
  fullName: Tensor.Algorithm.LinAlg.rowEchelon
  nameWithType: LinAlg.rowEchelon
- uid: Tensor.Algorithm.LinAlg.rowEchelonAugmented(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "val rowEchelonAugmented: Tensor<'T> -> Tensor<'T> -> Tensor<'T> * int64 * int64 list * Tensor<'T>"
  href: api/Tensor.Algorithm.LinAlg.rowEchelonAugmented.html#Tensor_Algorithm_LinAlg_rowEchelonAugmented_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Algorithm.rowEchelonAugmented``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "val Tensor.Algorithm.LinAlg.rowEchelonAugmented: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> * int64 * int64 list * Tensor.Tensor<'T>"
  nameWithType: "val LinAlg.rowEchelonAugmented: Tensor<'T> -> Tensor<'T> -> Tensor<'T> * int64 * int64 list * Tensor<'T>"
- uid: Tensor.Algorithm.LinAlg.rowEchelonAugmented*
  name: rowEchelonAugmented
  href: api/Tensor.Algorithm.LinAlg.rowEchelonAugmented.html
  commentId: Overload:Tensor.Algorithm.LinAlg.rowEchelonAugmented*
  fullName: Tensor.Algorithm.LinAlg.rowEchelonAugmented
  nameWithType: LinAlg.rowEchelonAugmented
- uid: Tensor.Algorithm.LinAlg.smithNormalForm(Tensor.Tensor<bigint>)
  name: 'val smithNormalForm: Tensor<bigint> -> Tensor<bigint> * Tensor<bigint> * Tensor<bigint>'
  href: api/Tensor.Algorithm.LinAlg.smithNormalForm.html#Tensor_Algorithm_LinAlg_smithNormalForm_Tensor_Tensor_bigint__
  commentId: M:Tensor.Algorithm.smithNormalForm(Tensor.Tensor{System.Numerics.BigInteger})
  fullName: 'val Tensor.Algorithm.LinAlg.smithNormalForm: Tensor.Tensor<bigint> -> Tensor.Tensor<bigint> * Tensor.Tensor<bigint> * Tensor.Tensor<bigint>'
  nameWithType: 'val LinAlg.smithNormalForm: Tensor<bigint> -> Tensor<bigint> * Tensor<bigint> * Tensor<bigint>'
- uid: Tensor.Algorithm.LinAlg.smithNormalForm*
  name: smithNormalForm
  href: api/Tensor.Algorithm.LinAlg.smithNormalForm.html
  commentId: Overload:Tensor.Algorithm.LinAlg.smithNormalForm*
  fullName: Tensor.Algorithm.LinAlg.smithNormalForm
  nameWithType: LinAlg.smithNormalForm
- uid: Tensor.Algorithm.NPYFile
  name: NPYFile (mod)
  href: api/Tensor.Algorithm.NPYFile.html
  commentId: T:Tensor.Algorithm.NPYFile
  fullName: Tensor.Algorithm.NPYFile
  nameWithType: Tensor.Algorithm.NPYFile
- uid: Tensor.Algorithm.NPYFile.load(string)
  name: "val load: string -> Tensor<'?19684>"
  href: api/Tensor.Algorithm.NPYFile.load.html#Tensor_Algorithm_NPYFile_load_string_
  commentId: M:Tensor.Algorithm.load``1(System.String)
  fullName: "val Tensor.Algorithm.NPYFile.load: string -> Tensor.Tensor<'?19684>"
  nameWithType: "val NPYFile.load: string -> Tensor<'?19684>"
- uid: Tensor.Algorithm.NPYFile.load*
  name: load
  href: api/Tensor.Algorithm.NPYFile.load.html
  commentId: Overload:Tensor.Algorithm.NPYFile.load*
  fullName: Tensor.Algorithm.NPYFile.load
  nameWithType: NPYFile.load
- uid: Tensor.Algorithm.NPYFile.loadFromStream(System.IO.Stream -> string)
  name: "val loadFromStream: Stream -> string -> Tensor<'T>"
  href: api/Tensor.Algorithm.NPYFile.loadFromStream.html#Tensor_Algorithm_NPYFile_loadFromStream_System_IO_Stream____string_
  commentId: M:Tensor.Algorithm.loadFromStream``1(System.IO.Stream,System.String)
  fullName: "val Tensor.Algorithm.NPYFile.loadFromStream: System.IO.Stream -> string -> Tensor.Tensor<'T>"
  nameWithType: "val NPYFile.loadFromStream: Stream -> string -> Tensor<'T>"
- uid: Tensor.Algorithm.NPYFile.loadFromStream*
  name: loadFromStream
  href: api/Tensor.Algorithm.NPYFile.loadFromStream.html
  commentId: Overload:Tensor.Algorithm.NPYFile.loadFromStream*
  fullName: Tensor.Algorithm.NPYFile.loadFromStream
  nameWithType: NPYFile.loadFromStream
- uid: Tensor.Algorithm.NPZFile
  name: NPZFile
  href: api/Tensor.Algorithm.NPZFile.html
  commentId: T:Tensor.Algorithm.NPZFile
  fullName: Tensor.Algorithm.NPZFile
  nameWithType: Tensor.Algorithm.NPZFile
- uid: Tensor.Algorithm.NPZFile.#ctor(string)
  name: 'new: string -> NPZFile'
  href: api/Tensor.Algorithm.NPZFile.-ctor.html#Tensor_Algorithm_NPZFile__ctor_string_
  commentId: M:Tensor.Algorithm.NPZFile.#ctor(System.String)
  fullName: 'new: string -> Tensor.Algorithm.NPZFile'
  nameWithType: 'new: string -> NPZFile'
- uid: Tensor.Algorithm.NPZFile.#ctor*
  name: ( .ctor )
  href: api/Tensor.Algorithm.NPZFile.-ctor.html
  commentId: Overload:Tensor.Algorithm.NPZFile.#ctor*
  fullName: Tensor.Algorithm.NPZFile
  nameWithType: NPZFile.( .ctor )
- uid: Tensor.Algorithm.NPZFile.Get(string)
  name: "member Get: string -> Tensor<'?19678>"
  href: api/Tensor.Algorithm.NPZFile.Get.html#Tensor_Algorithm_NPZFile_Get_string_
  commentId: M:Tensor.Algorithm.NPZFile.Get``1(System.String)
  fullName: "member Tensor.Algorithm.NPZFile.Get: string -> Tensor.Tensor<'?19678>"
  nameWithType: "member NPZFile.Get: string -> Tensor<'?19678>"
- uid: Tensor.Algorithm.NPZFile.Get*
  name: Get
  href: api/Tensor.Algorithm.NPZFile.Get.html
  commentId: Overload:Tensor.Algorithm.NPZFile.Get*
  fullName: Tensor.Algorithm.NPZFile.Get
  nameWithType: NPZFile.Get
- uid: Tensor.Algorithm.NPZFile.Names(unit)
  name: 'property Names: string list'
  href: api/Tensor.Algorithm.NPZFile.Names.html#Tensor_Algorithm_NPZFile_Names_unit_
  commentId: P:Tensor.Algorithm.NPZFile.Names
  fullName: 'property Tensor.Algorithm.NPZFile.Names: string list'
  nameWithType: 'property NPZFile.Names: string list'
- uid: Tensor.Algorithm.NPZFile.Names*
  name: Names
  href: api/Tensor.Algorithm.NPZFile.Names.html
  commentId: Overload:Tensor.Algorithm.NPZFile.Names*
  fullName: Tensor.Algorithm.NPZFile.Names
  nameWithType: NPZFile.Names
- uid: Tensor.Algorithm.NPZFile.Open(string)
  name: 'static member Open: string -> NPZFile'
  href: api/Tensor.Algorithm.NPZFile.Open.html#Tensor_Algorithm_NPZFile_Open_string_
  commentId: M:Tensor.Algorithm.NPZFile.Open(System.String)
  fullName: 'static member Tensor.Algorithm.NPZFile.Open: string -> Tensor.Algorithm.NPZFile'
  nameWithType: 'static member NPZFile.Open: string -> NPZFile'
- uid: Tensor.Algorithm.NPZFile.Open*
  name: Open
  href: api/Tensor.Algorithm.NPZFile.Open.html
  commentId: Overload:Tensor.Algorithm.NPZFile.Open*
  fullName: Tensor.Algorithm.NPZFile.Open
  nameWithType: NPZFile.Open
- uid: Tensor.Algorithm.NPZFile.Path(unit)
  name: 'property Path: string'
  href: api/Tensor.Algorithm.NPZFile.Path.html#Tensor_Algorithm_NPZFile_Path_unit_
  commentId: P:Tensor.Algorithm.NPZFile.Path
  fullName: 'property Tensor.Algorithm.NPZFile.Path: string'
  nameWithType: 'property NPZFile.Path: string'
- uid: Tensor.Algorithm.NPZFile.Path*
  name: Path
  href: api/Tensor.Algorithm.NPZFile.Path.html
  commentId: Overload:Tensor.Algorithm.NPZFile.Path*
  fullName: Tensor.Algorithm.NPZFile.Path
  nameWithType: NPZFile.Path
- uid: Tensor.Algorithm.NPZFile.System-IDisposable-Dispose(unit)
  name: 'interface IDisposable with member Dispose: unit -> unit'
  href: api/Tensor.Algorithm.NPZFile.System-IDisposable-Dispose.html#Tensor_Algorithm_NPZFile_System_IDisposable_Dispose_unit_
  commentId: M:Tensor.Algorithm.NPZFile.System-IDisposable-Dispose
  fullName: 'interface System.IDisposable with member Tensor.Algorithm.NPZFile.Dispose: unit -> unit'
  nameWithType: 'interface IDisposable with member NPZFile.Dispose: unit -> unit'
- uid: Tensor.Algorithm.NPZFile.System-IDisposable-Dispose*
  name: Dispose
  href: api/Tensor.Algorithm.NPZFile.System-IDisposable-Dispose.html
  commentId: Overload:Tensor.Algorithm.NPZFile.System-IDisposable-Dispose*
  fullName: Tensor.Algorithm.NPZFile.Dispose
  nameWithType: NPZFile.Dispose
- uid: Tensor.Algorithm.Rat
  name: Rat
  href: api/Tensor.Algorithm.Rat.html
  commentId: T:Tensor.Algorithm.Rat
  fullName: Tensor.Algorithm.Rat
  nameWithType: Tensor.Algorithm.Rat
- uid: Tensor.Algorithm.Rat.#ctor(int32 * int32)
  name: 'new: int32 * int32 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_int32___int32_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.Int32,System.Int32)
  fullName: 'new: int32 * int32 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: int32 * int32 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(int32)
  name: 'new: int32 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_int32_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.Int32)
  fullName: 'new: int32 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: int32 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(int64 * int64)
  name: 'new: int64 * int64 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_int64___int64_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.Int64,System.Int64)
  fullName: 'new: int64 * int64 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: int64 * int64 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(int64)
  name: 'new: int64 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_int64_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.Int64)
  fullName: 'new: int64 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: int64 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(System.Numerics.BigInteger * System.Numerics.BigInteger)
  name: 'new: BigInteger * BigInteger -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_System_Numerics_BigInteger___System_Numerics_BigInteger_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.Numerics.BigInteger,System.Numerics.BigInteger)
  fullName: 'new: System.Numerics.BigInteger * System.Numerics.BigInteger -> Tensor.Algorithm.Rat'
  nameWithType: 'new: BigInteger * BigInteger -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(System.Numerics.BigInteger)
  name: 'new: BigInteger -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_System_Numerics_BigInteger_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.Numerics.BigInteger)
  fullName: 'new: System.Numerics.BigInteger -> Tensor.Algorithm.Rat'
  nameWithType: 'new: BigInteger -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(uint32 * uint32)
  name: 'new: uint32 * uint32 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_uint32___uint32_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.UInt32,System.UInt32)
  fullName: 'new: uint32 * uint32 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: uint32 * uint32 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(uint32)
  name: 'new: uint32 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_uint32_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.UInt32)
  fullName: 'new: uint32 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: uint32 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(uint64 * uint64)
  name: 'new: uint64 * uint64 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_uint64___uint64_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.UInt64,System.UInt64)
  fullName: 'new: uint64 * uint64 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: uint64 * uint64 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor(uint64)
  name: 'new: uint64 -> Rat'
  href: api/Tensor.Algorithm.Rat.-ctor.html#Tensor_Algorithm_Rat__ctor_uint64_
  commentId: M:Tensor.Algorithm.Rat.#ctor(System.UInt64)
  fullName: 'new: uint64 -> Tensor.Algorithm.Rat'
  nameWithType: 'new: uint64 -> Rat'
- uid: Tensor.Algorithm.Rat.#ctor*
  name: ( .ctor )
  href: api/Tensor.Algorithm.Rat.-ctor.html
  commentId: Overload:Tensor.Algorithm.Rat.#ctor*
  fullName: Tensor.Algorithm.Rat
  nameWithType: Rat.( .ctor )
- uid: Tensor.Algorithm.Rat.Abs(Tensor.Algorithm.Rat)
  name: 'static member Abs: Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.Abs.html#Tensor_Algorithm_Rat_Abs_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.Abs(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.Abs: Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.Abs: Rat -> Rat'
- uid: Tensor.Algorithm.Rat.Abs*
  name: Abs
  href: api/Tensor.Algorithm.Rat.Abs.html
  commentId: Overload:Tensor.Algorithm.Rat.Abs*
  fullName: Tensor.Algorithm.Rat.Abs
  nameWithType: Rat.Abs
- uid: Tensor.Algorithm.Rat.Ceiling(Tensor.Algorithm.Rat)
  name: 'static member Ceiling: Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.Ceiling.html#Tensor_Algorithm_Rat_Ceiling_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.Ceiling(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.Ceiling: Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.Ceiling: Rat -> Rat'
- uid: Tensor.Algorithm.Rat.Ceiling*
  name: Ceiling
  href: api/Tensor.Algorithm.Rat.Ceiling.html
  commentId: Overload:Tensor.Algorithm.Rat.Ceiling*
  fullName: Tensor.Algorithm.Rat.Ceiling
  nameWithType: Rat.Ceiling
- uid: Tensor.Algorithm.Rat.dnm(Tensor.Algorithm.Rat)
  name: 'static member dnm: Rat -> bigint'
  href: api/Tensor.Algorithm.Rat.dnm.html#Tensor_Algorithm_Rat_dnm_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.dnm(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.dnm: Tensor.Algorithm.Rat -> bigint'
  nameWithType: 'static member Rat.dnm: Rat -> bigint'
- uid: Tensor.Algorithm.Rat.Dnm(unit)
  name: 'property Dnm: bigint'
  href: api/Tensor.Algorithm.Rat.Dnm.html#Tensor_Algorithm_Rat_Dnm_unit_
  commentId: P:Tensor.Algorithm.Rat.Dnm
  fullName: 'property Tensor.Algorithm.Rat.Dnm: bigint'
  nameWithType: 'property Rat.Dnm: bigint'
- uid: Tensor.Algorithm.Rat.dnm*
  name: dnm
  href: api/Tensor.Algorithm.Rat.dnm.html
  commentId: Overload:Tensor.Algorithm.Rat.dnm*
  fullName: Tensor.Algorithm.Rat.dnm
  nameWithType: Rat.dnm
- uid: Tensor.Algorithm.Rat.Dnm*
  name: Dnm
  href: api/Tensor.Algorithm.Rat.Dnm.html
  commentId: Overload:Tensor.Algorithm.Rat.Dnm*
  fullName: Tensor.Algorithm.Rat.Dnm
  nameWithType: Rat.Dnm
- uid: Tensor.Algorithm.Rat.Equals(obj)
  name: 'override member Equals: obj -> bool'
  href: api/Tensor.Algorithm.Rat.Equals.html#Tensor_Algorithm_Rat_Equals_obj_
  commentId: M:Tensor.Algorithm.Rat.Equals(System.Object)
  fullName: 'override member Tensor.Algorithm.Rat.Equals: obj -> bool'
  nameWithType: 'override member Rat.Equals: obj -> bool'
- uid: Tensor.Algorithm.Rat.Equals*
  name: Equals
  href: api/Tensor.Algorithm.Rat.Equals.html
  commentId: Overload:Tensor.Algorithm.Rat.Equals*
  fullName: Tensor.Algorithm.Rat.Equals
  nameWithType: Rat.Equals
- uid: Tensor.Algorithm.Rat.Floor(Tensor.Algorithm.Rat)
  name: 'static member Floor: Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.Floor.html#Tensor_Algorithm_Rat_Floor_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.Floor(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.Floor: Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.Floor: Rat -> Rat'
- uid: Tensor.Algorithm.Rat.Floor*
  name: Floor
  href: api/Tensor.Algorithm.Rat.Floor.html
  commentId: Overload:Tensor.Algorithm.Rat.Floor*
  fullName: Tensor.Algorithm.Rat.Floor
  nameWithType: Rat.Floor
- uid: Tensor.Algorithm.Rat.get_Sign(Tensor.Algorithm.Rat)
  name: 'static member get_Sign: Rat -> int'
  href: api/Tensor.Algorithm.Rat.get_Sign.html#Tensor_Algorithm_Rat_get_Sign_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.get_Sign(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.get_Sign: Tensor.Algorithm.Rat -> int'
  nameWithType: 'static member Rat.get_Sign: Rat -> int'
- uid: Tensor.Algorithm.Rat.get_Sign*
  name: get_Sign
  href: api/Tensor.Algorithm.Rat.get_Sign.html
  commentId: Overload:Tensor.Algorithm.Rat.get_Sign*
  fullName: Tensor.Algorithm.Rat.get_Sign
  nameWithType: Rat.get_Sign
- uid: Tensor.Algorithm.Rat.GetHashCode(unit)
  name: 'override member GetHashCode: unit -> int'
  href: api/Tensor.Algorithm.Rat.GetHashCode.html#Tensor_Algorithm_Rat_GetHashCode_unit_
  commentId: M:Tensor.Algorithm.Rat.GetHashCode
  fullName: 'override member Tensor.Algorithm.Rat.GetHashCode: unit -> int'
  nameWithType: 'override member Rat.GetHashCode: unit -> int'
- uid: Tensor.Algorithm.Rat.GetHashCode*
  name: GetHashCode
  href: api/Tensor.Algorithm.Rat.GetHashCode.html
  commentId: Overload:Tensor.Algorithm.Rat.GetHashCode*
  fullName: Tensor.Algorithm.Rat.GetHashCode
  nameWithType: Rat.GetHashCode
- uid: Tensor.Algorithm.Rat.isFinite(Tensor.Algorithm.Rat)
  name: 'static member isFinite: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.isFinite.html#Tensor_Algorithm_Rat_isFinite_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.isFinite(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.isFinite: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'static member Rat.isFinite: Rat -> bool'
- uid: Tensor.Algorithm.Rat.IsFinite(unit)
  name: 'property IsFinite: bool'
  href: api/Tensor.Algorithm.Rat.IsFinite.html#Tensor_Algorithm_Rat_IsFinite_unit_
  commentId: P:Tensor.Algorithm.Rat.IsFinite
  fullName: 'property Tensor.Algorithm.Rat.IsFinite: bool'
  nameWithType: 'property Rat.IsFinite: bool'
- uid: Tensor.Algorithm.Rat.isFinite*
  name: isFinite
  href: api/Tensor.Algorithm.Rat.isFinite.html
  commentId: Overload:Tensor.Algorithm.Rat.isFinite*
  fullName: Tensor.Algorithm.Rat.isFinite
  nameWithType: Rat.isFinite
- uid: Tensor.Algorithm.Rat.IsFinite*
  name: IsFinite
  href: api/Tensor.Algorithm.Rat.IsFinite.html
  commentId: Overload:Tensor.Algorithm.Rat.IsFinite*
  fullName: Tensor.Algorithm.Rat.IsFinite
  nameWithType: Rat.IsFinite
- uid: Tensor.Algorithm.Rat.isInf(Tensor.Algorithm.Rat)
  name: 'static member isInf: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.isInf.html#Tensor_Algorithm_Rat_isInf_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.isInf(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.isInf: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'static member Rat.isInf: Rat -> bool'
- uid: Tensor.Algorithm.Rat.IsInf(unit)
  name: 'property IsInf: bool'
  href: api/Tensor.Algorithm.Rat.IsInf.html#Tensor_Algorithm_Rat_IsInf_unit_
  commentId: P:Tensor.Algorithm.Rat.IsInf
  fullName: 'property Tensor.Algorithm.Rat.IsInf: bool'
  nameWithType: 'property Rat.IsInf: bool'
- uid: Tensor.Algorithm.Rat.isInf*
  name: isInf
  href: api/Tensor.Algorithm.Rat.isInf.html
  commentId: Overload:Tensor.Algorithm.Rat.isInf*
  fullName: Tensor.Algorithm.Rat.isInf
  nameWithType: Rat.isInf
- uid: Tensor.Algorithm.Rat.IsInf*
  name: IsInf
  href: api/Tensor.Algorithm.Rat.IsInf.html
  commentId: Overload:Tensor.Algorithm.Rat.IsInf*
  fullName: Tensor.Algorithm.Rat.IsInf
  nameWithType: Rat.IsInf
- uid: Tensor.Algorithm.Rat.IsInt(unit)
  name: 'property IsInt: bool'
  href: api/Tensor.Algorithm.Rat.IsInt.html#Tensor_Algorithm_Rat_IsInt_unit_
  commentId: P:Tensor.Algorithm.Rat.IsInt
  fullName: 'property Tensor.Algorithm.Rat.IsInt: bool'
  nameWithType: 'property Rat.IsInt: bool'
- uid: Tensor.Algorithm.Rat.IsInt*
  name: IsInt
  href: api/Tensor.Algorithm.Rat.IsInt.html
  commentId: Overload:Tensor.Algorithm.Rat.IsInt*
  fullName: Tensor.Algorithm.Rat.IsInt
  nameWithType: Rat.IsInt
- uid: Tensor.Algorithm.Rat.isInteger(Tensor.Algorithm.Rat)
  name: 'static member isInteger: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.isInteger.html#Tensor_Algorithm_Rat_isInteger_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.isInteger(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.isInteger: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'static member Rat.isInteger: Rat -> bool'
- uid: Tensor.Algorithm.Rat.isInteger*
  name: isInteger
  href: api/Tensor.Algorithm.Rat.isInteger.html
  commentId: Overload:Tensor.Algorithm.Rat.isInteger*
  fullName: Tensor.Algorithm.Rat.isInteger
  nameWithType: Rat.isInteger
- uid: Tensor.Algorithm.Rat.isNaN(Tensor.Algorithm.Rat)
  name: 'static member isNaN: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.isNaN.html#Tensor_Algorithm_Rat_isNaN_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.isNaN(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.isNaN: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'static member Rat.isNaN: Rat -> bool'
- uid: Tensor.Algorithm.Rat.IsNaN(unit)
  name: 'property IsNaN: bool'
  href: api/Tensor.Algorithm.Rat.IsNaN.html#Tensor_Algorithm_Rat_IsNaN_unit_
  commentId: P:Tensor.Algorithm.Rat.IsNaN
  fullName: 'property Tensor.Algorithm.Rat.IsNaN: bool'
  nameWithType: 'property Rat.IsNaN: bool'
- uid: Tensor.Algorithm.Rat.isNaN*
  name: isNaN
  href: api/Tensor.Algorithm.Rat.isNaN.html
  commentId: Overload:Tensor.Algorithm.Rat.isNaN*
  fullName: Tensor.Algorithm.Rat.isNaN
  nameWithType: Rat.isNaN
- uid: Tensor.Algorithm.Rat.IsNaN*
  name: IsNaN
  href: api/Tensor.Algorithm.Rat.IsNaN.html
  commentId: Overload:Tensor.Algorithm.Rat.IsNaN*
  fullName: Tensor.Algorithm.Rat.IsNaN
  nameWithType: Rat.IsNaN
- uid: Tensor.Algorithm.Rat.isNegInf(Tensor.Algorithm.Rat)
  name: 'static member isNegInf: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.isNegInf.html#Tensor_Algorithm_Rat_isNegInf_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.isNegInf(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.isNegInf: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'static member Rat.isNegInf: Rat -> bool'
- uid: Tensor.Algorithm.Rat.IsNegInf(unit)
  name: 'property IsNegInf: bool'
  href: api/Tensor.Algorithm.Rat.IsNegInf.html#Tensor_Algorithm_Rat_IsNegInf_unit_
  commentId: P:Tensor.Algorithm.Rat.IsNegInf
  fullName: 'property Tensor.Algorithm.Rat.IsNegInf: bool'
  nameWithType: 'property Rat.IsNegInf: bool'
- uid: Tensor.Algorithm.Rat.isNegInf*
  name: isNegInf
  href: api/Tensor.Algorithm.Rat.isNegInf.html
  commentId: Overload:Tensor.Algorithm.Rat.isNegInf*
  fullName: Tensor.Algorithm.Rat.isNegInf
  nameWithType: Rat.isNegInf
- uid: Tensor.Algorithm.Rat.IsNegInf*
  name: IsNegInf
  href: api/Tensor.Algorithm.Rat.IsNegInf.html
  commentId: Overload:Tensor.Algorithm.Rat.IsNegInf*
  fullName: Tensor.Algorithm.Rat.IsNegInf
  nameWithType: Rat.IsNegInf
- uid: Tensor.Algorithm.Rat.isPosInf(Tensor.Algorithm.Rat)
  name: 'static member isPosInf: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.isPosInf.html#Tensor_Algorithm_Rat_isPosInf_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.isPosInf(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.isPosInf: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'static member Rat.isPosInf: Rat -> bool'
- uid: Tensor.Algorithm.Rat.IsPosInf(unit)
  name: 'property IsPosInf: bool'
  href: api/Tensor.Algorithm.Rat.IsPosInf.html#Tensor_Algorithm_Rat_IsPosInf_unit_
  commentId: P:Tensor.Algorithm.Rat.IsPosInf
  fullName: 'property Tensor.Algorithm.Rat.IsPosInf: bool'
  nameWithType: 'property Rat.IsPosInf: bool'
- uid: Tensor.Algorithm.Rat.isPosInf*
  name: isPosInf
  href: api/Tensor.Algorithm.Rat.isPosInf.html
  commentId: Overload:Tensor.Algorithm.Rat.isPosInf*
  fullName: Tensor.Algorithm.Rat.isPosInf
  nameWithType: Rat.isPosInf
- uid: Tensor.Algorithm.Rat.IsPosInf*
  name: IsPosInf
  href: api/Tensor.Algorithm.Rat.IsPosInf.html
  commentId: Overload:Tensor.Algorithm.Rat.IsPosInf*
  fullName: Tensor.Algorithm.Rat.IsPosInf
  nameWithType: Rat.IsPosInf
- uid: Tensor.Algorithm.Rat.MaxValue(unit)
  name: 'static property MaxValue: Rat'
  href: api/Tensor.Algorithm.Rat.MaxValue.html#Tensor_Algorithm_Rat_MaxValue_unit_
  commentId: P:Tensor.Algorithm.Rat.MaxValue
  fullName: 'static property Tensor.Algorithm.Rat.MaxValue: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.MaxValue: Rat'
- uid: Tensor.Algorithm.Rat.MaxValue*
  name: MaxValue
  href: api/Tensor.Algorithm.Rat.MaxValue.html
  commentId: Overload:Tensor.Algorithm.Rat.MaxValue*
  fullName: Tensor.Algorithm.Rat.MaxValue
  nameWithType: Rat.MaxValue
- uid: Tensor.Algorithm.Rat.MinusOne(unit)
  name: 'static property MinusOne: Rat'
  href: api/Tensor.Algorithm.Rat.MinusOne.html#Tensor_Algorithm_Rat_MinusOne_unit_
  commentId: P:Tensor.Algorithm.Rat.MinusOne
  fullName: 'static property Tensor.Algorithm.Rat.MinusOne: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.MinusOne: Rat'
- uid: Tensor.Algorithm.Rat.MinusOne*
  name: MinusOne
  href: api/Tensor.Algorithm.Rat.MinusOne.html
  commentId: Overload:Tensor.Algorithm.Rat.MinusOne*
  fullName: Tensor.Algorithm.Rat.MinusOne
  nameWithType: Rat.MinusOne
- uid: Tensor.Algorithm.Rat.MinValue(unit)
  name: 'static property MinValue: Rat'
  href: api/Tensor.Algorithm.Rat.MinValue.html#Tensor_Algorithm_Rat_MinValue_unit_
  commentId: P:Tensor.Algorithm.Rat.MinValue
  fullName: 'static property Tensor.Algorithm.Rat.MinValue: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.MinValue: Rat'
- uid: Tensor.Algorithm.Rat.MinValue*
  name: MinValue
  href: api/Tensor.Algorithm.Rat.MinValue.html
  commentId: Overload:Tensor.Algorithm.Rat.MinValue*
  fullName: Tensor.Algorithm.Rat.MinValue
  nameWithType: Rat.MinValue
- uid: Tensor.Algorithm.Rat.NaN(unit)
  name: 'static property NaN: Rat'
  href: api/Tensor.Algorithm.Rat.NaN.html#Tensor_Algorithm_Rat_NaN_unit_
  commentId: P:Tensor.Algorithm.Rat.NaN
  fullName: 'static property Tensor.Algorithm.Rat.NaN: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.NaN: Rat'
- uid: Tensor.Algorithm.Rat.NaN*
  name: NaN
  href: api/Tensor.Algorithm.Rat.NaN.html
  commentId: Overload:Tensor.Algorithm.Rat.NaN*
  fullName: Tensor.Algorithm.Rat.NaN
  nameWithType: Rat.NaN
- uid: Tensor.Algorithm.Rat.NegInf(unit)
  name: 'static property NegInf: Rat'
  href: api/Tensor.Algorithm.Rat.NegInf.html#Tensor_Algorithm_Rat_NegInf_unit_
  commentId: P:Tensor.Algorithm.Rat.NegInf
  fullName: 'static property Tensor.Algorithm.Rat.NegInf: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.NegInf: Rat'
- uid: Tensor.Algorithm.Rat.NegInf*
  name: NegInf
  href: api/Tensor.Algorithm.Rat.NegInf.html
  commentId: Overload:Tensor.Algorithm.Rat.NegInf*
  fullName: Tensor.Algorithm.Rat.NegInf
  nameWithType: Rat.NegInf
- uid: Tensor.Algorithm.Rat.Num
  name: 'val Num: bigint'
  href: api/Tensor.Algorithm.Rat.Num.html
  commentId: P:Tensor.Algorithm.Rat.Num
  fullName: 'val Tensor.Algorithm.Rat.Num: bigint'
  nameWithType: 'val Rat.Num: bigint'
- uid: Tensor.Algorithm.Rat.num(Tensor.Algorithm.Rat)
  name: 'static member num: Rat -> bigint'
  href: api/Tensor.Algorithm.Rat.num.html#Tensor_Algorithm_Rat_num_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.num(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.num: Tensor.Algorithm.Rat -> bigint'
  nameWithType: 'static member Rat.num: Rat -> bigint'
- uid: Tensor.Algorithm.Rat.num*
  name: num
  href: api/Tensor.Algorithm.Rat.num.html
  commentId: Overload:Tensor.Algorithm.Rat.num*
  fullName: Tensor.Algorithm.Rat.num
  nameWithType: Rat.num
- uid: Tensor.Algorithm.Rat.One(unit)
  name: 'static property One: Rat'
  href: api/Tensor.Algorithm.Rat.One.html#Tensor_Algorithm_Rat_One_unit_
  commentId: P:Tensor.Algorithm.Rat.One
  fullName: 'static property Tensor.Algorithm.Rat.One: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.One: Rat'
- uid: Tensor.Algorithm.Rat.One*
  name: One
  href: api/Tensor.Algorithm.Rat.One.html
  commentId: Overload:Tensor.Algorithm.Rat.One*
  fullName: Tensor.Algorithm.Rat.One
  nameWithType: Rat.One
- uid: Tensor.Algorithm.Rat.op_Addition(Tensor.Algorithm.Rat * Tensor.Algorithm.Rat)
  name: 'static member ( + ): Rat * Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Addition.html#Tensor_Algorithm_Rat_op_Addition_Tensor_Algorithm_Rat___Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Addition(Tensor.Algorithm.Rat,Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( + ): Tensor.Algorithm.Rat * Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( + ): Rat * Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_Addition*
  name: ( + )
  href: api/Tensor.Algorithm.Rat.op_Addition.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Addition*
  fullName: Tensor.Algorithm.Rat.( + )
  nameWithType: Rat.( + )
- uid: Tensor.Algorithm.Rat.op_Division(Tensor.Algorithm.Rat * Tensor.Algorithm.Rat)
  name: 'static member ( / ): Rat * Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Division.html#Tensor_Algorithm_Rat_op_Division_Tensor_Algorithm_Rat___Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Division(Tensor.Algorithm.Rat,Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( / ): Tensor.Algorithm.Rat * Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( / ): Rat * Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_Division*
  name: ( / )
  href: api/Tensor.Algorithm.Rat.op_Division.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Division*
  fullName: Tensor.Algorithm.Rat.( / )
  nameWithType: Rat.( / )
- uid: Tensor.Algorithm.Rat.op_Explicit_bigint(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> bigint'
  href: api/Tensor.Algorithm.Rat.op_Explicit_bigint.html#Tensor_Algorithm_Rat_op_Explicit_bigint_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> bigint'
  nameWithType: 'static member Rat.op_Explicit: Rat -> bigint'
- uid: Tensor.Algorithm.Rat.op_Explicit_bigint*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_bigint.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_bigint*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Explicit_double(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> double'
  href: api/Tensor.Algorithm.Rat.op_Explicit_double.html#Tensor_Algorithm_Rat_op_Explicit_double_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> double'
  nameWithType: 'static member Rat.op_Explicit: Rat -> double'
- uid: Tensor.Algorithm.Rat.op_Explicit_double*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_double.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_double*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Explicit_int32(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> int32'
  href: api/Tensor.Algorithm.Rat.op_Explicit_int32.html#Tensor_Algorithm_Rat_op_Explicit_int32_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> int32'
  nameWithType: 'static member Rat.op_Explicit: Rat -> int32'
- uid: Tensor.Algorithm.Rat.op_Explicit_int32*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_int32.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_int32*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Explicit_int64(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> int64'
  href: api/Tensor.Algorithm.Rat.op_Explicit_int64.html#Tensor_Algorithm_Rat_op_Explicit_int64_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> int64'
  nameWithType: 'static member Rat.op_Explicit: Rat -> int64'
- uid: Tensor.Algorithm.Rat.op_Explicit_int64*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_int64.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_int64*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Explicit_single(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> single'
  href: api/Tensor.Algorithm.Rat.op_Explicit_single.html#Tensor_Algorithm_Rat_op_Explicit_single_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> single'
  nameWithType: 'static member Rat.op_Explicit: Rat -> single'
- uid: Tensor.Algorithm.Rat.op_Explicit_single*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_single.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_single*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Explicit_uint32(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> uint32'
  href: api/Tensor.Algorithm.Rat.op_Explicit_uint32.html#Tensor_Algorithm_Rat_op_Explicit_uint32_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> uint32'
  nameWithType: 'static member Rat.op_Explicit: Rat -> uint32'
- uid: Tensor.Algorithm.Rat.op_Explicit_uint32*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_uint32.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_uint32*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Explicit_uint64(Tensor.Algorithm.Rat)
  name: 'static member op_Explicit: Rat -> uint64'
  href: api/Tensor.Algorithm.Rat.op_Explicit_uint64.html#Tensor_Algorithm_Rat_op_Explicit_uint64_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Explicit(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.op_Explicit: Tensor.Algorithm.Rat -> uint64'
  nameWithType: 'static member Rat.op_Explicit: Rat -> uint64'
- uid: Tensor.Algorithm.Rat.op_Explicit_uint64*
  name: op_Explicit
  href: api/Tensor.Algorithm.Rat.op_Explicit_uint64.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Explicit_uint64*
  fullName: Tensor.Algorithm.Rat.op_Explicit
  nameWithType: Rat.op_Explicit
- uid: Tensor.Algorithm.Rat.op_Implicit(bigint)
  name: 'static member op_Implicit: bigint -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Implicit.html#Tensor_Algorithm_Rat_op_Implicit_bigint_
  commentId: M:Tensor.Algorithm.Rat.op_Implicit(System.Numerics.BigInteger)
  fullName: 'static member Tensor.Algorithm.Rat.op_Implicit: bigint -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.op_Implicit: bigint -> Rat'
- uid: Tensor.Algorithm.Rat.op_Implicit(int32)
  name: 'static member op_Implicit: int32 -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Implicit.html#Tensor_Algorithm_Rat_op_Implicit_int32_
  commentId: M:Tensor.Algorithm.Rat.op_Implicit(System.Int32)
  fullName: 'static member Tensor.Algorithm.Rat.op_Implicit: int32 -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.op_Implicit: int32 -> Rat'
- uid: Tensor.Algorithm.Rat.op_Implicit(int64)
  name: 'static member op_Implicit: int64 -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Implicit.html#Tensor_Algorithm_Rat_op_Implicit_int64_
  commentId: M:Tensor.Algorithm.Rat.op_Implicit(System.Int64)
  fullName: 'static member Tensor.Algorithm.Rat.op_Implicit: int64 -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.op_Implicit: int64 -> Rat'
- uid: Tensor.Algorithm.Rat.op_Implicit(uint32)
  name: 'static member op_Implicit: uint32 -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Implicit.html#Tensor_Algorithm_Rat_op_Implicit_uint32_
  commentId: M:Tensor.Algorithm.Rat.op_Implicit(System.UInt32)
  fullName: 'static member Tensor.Algorithm.Rat.op_Implicit: uint32 -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.op_Implicit: uint32 -> Rat'
- uid: Tensor.Algorithm.Rat.op_Implicit(uint64)
  name: 'static member op_Implicit: uint64 -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Implicit.html#Tensor_Algorithm_Rat_op_Implicit_uint64_
  commentId: M:Tensor.Algorithm.Rat.op_Implicit(System.UInt64)
  fullName: 'static member Tensor.Algorithm.Rat.op_Implicit: uint64 -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.op_Implicit: uint64 -> Rat'
- uid: Tensor.Algorithm.Rat.op_Implicit*
  name: op_Implicit
  href: api/Tensor.Algorithm.Rat.op_Implicit.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Implicit*
  fullName: Tensor.Algorithm.Rat.op_Implicit
  nameWithType: Rat.op_Implicit
- uid: Tensor.Algorithm.Rat.op_Modulus(Tensor.Algorithm.Rat * Tensor.Algorithm.Rat)
  name: 'static member ( % ): Rat * Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Modulus.html#Tensor_Algorithm_Rat_op_Modulus_Tensor_Algorithm_Rat___Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Modulus(Tensor.Algorithm.Rat,Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( % ): Tensor.Algorithm.Rat * Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( % ): Rat * Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_Modulus*
  name: ( % )
  href: api/Tensor.Algorithm.Rat.op_Modulus.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Modulus*
  fullName: Tensor.Algorithm.Rat.( % )
  nameWithType: Rat.( % )
- uid: Tensor.Algorithm.Rat.op_Multiply(Tensor.Algorithm.Rat * Tensor.Algorithm.Rat)
  name: 'static member ( * ): Rat * Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Multiply.html#Tensor_Algorithm_Rat_op_Multiply_Tensor_Algorithm_Rat___Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Multiply(Tensor.Algorithm.Rat,Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( * ): Tensor.Algorithm.Rat * Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( * ): Rat * Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_Multiply*
  name: ( * )
  href: api/Tensor.Algorithm.Rat.op_Multiply.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Multiply*
  fullName: Tensor.Algorithm.Rat.( * )
  nameWithType: Rat.( * )
- uid: Tensor.Algorithm.Rat.op_Subtraction(Tensor.Algorithm.Rat * Tensor.Algorithm.Rat)
  name: 'static member ( - ): Rat * Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_Subtraction.html#Tensor_Algorithm_Rat_op_Subtraction_Tensor_Algorithm_Rat___Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_Subtraction(Tensor.Algorithm.Rat,Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( - ): Tensor.Algorithm.Rat * Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( - ): Rat * Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_Subtraction*
  name: ( - )
  href: api/Tensor.Algorithm.Rat.op_Subtraction.html
  commentId: Overload:Tensor.Algorithm.Rat.op_Subtraction*
  fullName: Tensor.Algorithm.Rat.( - )
  nameWithType: Rat.( - )
- uid: Tensor.Algorithm.Rat.op_UnaryNegation(Tensor.Algorithm.Rat)
  name: 'static member ( ~- ): Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_UnaryNegation.html#Tensor_Algorithm_Rat_op_UnaryNegation_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_UnaryNegation(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( ~- ): Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( ~- ): Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_UnaryNegation*
  name: ( ~- )
  href: api/Tensor.Algorithm.Rat.op_UnaryNegation.html
  commentId: Overload:Tensor.Algorithm.Rat.op_UnaryNegation*
  fullName: Tensor.Algorithm.Rat.( ~- )
  nameWithType: Rat.( ~- )
- uid: Tensor.Algorithm.Rat.op_UnaryPlus(Tensor.Algorithm.Rat)
  name: 'static member ( ~+ ): Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.op_UnaryPlus.html#Tensor_Algorithm_Rat_op_UnaryPlus_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.op_UnaryPlus(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.( ~+ ): Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.( ~+ ): Rat -> Rat'
- uid: Tensor.Algorithm.Rat.op_UnaryPlus*
  name: ( ~+ )
  href: api/Tensor.Algorithm.Rat.op_UnaryPlus.html
  commentId: Overload:Tensor.Algorithm.Rat.op_UnaryPlus*
  fullName: Tensor.Algorithm.Rat.( ~+ )
  nameWithType: Rat.( ~+ )
- uid: Tensor.Algorithm.Rat.PosInf(unit)
  name: 'static property PosInf: Rat'
  href: api/Tensor.Algorithm.Rat.PosInf.html#Tensor_Algorithm_Rat_PosInf_unit_
  commentId: P:Tensor.Algorithm.Rat.PosInf
  fullName: 'static property Tensor.Algorithm.Rat.PosInf: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.PosInf: Rat'
- uid: Tensor.Algorithm.Rat.PosInf*
  name: PosInf
  href: api/Tensor.Algorithm.Rat.PosInf.html
  commentId: Overload:Tensor.Algorithm.Rat.PosInf*
  fullName: Tensor.Algorithm.Rat.PosInf
  nameWithType: Rat.PosInf
- uid: Tensor.Algorithm.Rat.Pretty(unit)
  name: 'property Pretty: string'
  href: api/Tensor.Algorithm.Rat.Pretty.html#Tensor_Algorithm_Rat_Pretty_unit_
  commentId: P:Tensor.Algorithm.Rat.Pretty
  fullName: 'property Tensor.Algorithm.Rat.Pretty: string'
  nameWithType: 'property Rat.Pretty: string'
- uid: Tensor.Algorithm.Rat.Pretty*
  name: Pretty
  href: api/Tensor.Algorithm.Rat.Pretty.html
  commentId: Overload:Tensor.Algorithm.Rat.Pretty*
  fullName: Tensor.Algorithm.Rat.Pretty
  nameWithType: Rat.Pretty
- uid: Tensor.Algorithm.Rat.System-IComparable`1-CompareTo(Tensor.Algorithm.Rat)
  name: 'interface IComparable<Rat> with member CompareTo: Rat -> int'
  href: api/Tensor.Algorithm.Rat.System-IComparable-1-CompareTo.html#Tensor_Algorithm_Rat_System_IComparable_1_CompareTo_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.System-IComparable`1-CompareTo(Tensor.Algorithm.Rat)
  fullName: 'interface System.IComparable<Tensor.Algorithm.Rat> with member Tensor.Algorithm.Rat.CompareTo: Tensor.Algorithm.Rat -> int'
  nameWithType: 'interface IComparable<Rat> with member Rat.CompareTo: Rat -> int'
- uid: Tensor.Algorithm.Rat.System-IComparable`1-CompareTo*
  name: CompareTo
  href: api/Tensor.Algorithm.Rat.System-IComparable-1-CompareTo.html
  commentId: Overload:Tensor.Algorithm.Rat.System-IComparable`1-CompareTo*
  fullName: Tensor.Algorithm.Rat.CompareTo
  nameWithType: Rat.CompareTo
- uid: Tensor.Algorithm.Rat.System-IComparable-CompareTo(obj)
  name: 'interface IComparable with member CompareTo: obj -> int'
  href: api/Tensor.Algorithm.Rat.System-IComparable-CompareTo.html#Tensor_Algorithm_Rat_System_IComparable_CompareTo_obj_
  commentId: M:Tensor.Algorithm.Rat.System-IComparable-CompareTo(System.Object)
  fullName: 'interface System.IComparable with member Tensor.Algorithm.Rat.CompareTo: obj -> int'
  nameWithType: 'interface IComparable with member Rat.CompareTo: obj -> int'
- uid: Tensor.Algorithm.Rat.System-IComparable-CompareTo*
  name: CompareTo
  href: api/Tensor.Algorithm.Rat.System-IComparable-CompareTo.html
  commentId: Overload:Tensor.Algorithm.Rat.System-IComparable-CompareTo*
  fullName: Tensor.Algorithm.Rat.CompareTo
  nameWithType: Rat.CompareTo
- uid: Tensor.Algorithm.Rat.System-IEquatable`1-Equals(Tensor.Algorithm.Rat)
  name: 'interface IEquatable<Rat> with member Equals: Rat -> bool'
  href: api/Tensor.Algorithm.Rat.System-IEquatable-1-Equals.html#Tensor_Algorithm_Rat_System_IEquatable_1_Equals_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.System-IEquatable`1-Equals(Tensor.Algorithm.Rat)
  fullName: 'interface System.IEquatable<Tensor.Algorithm.Rat> with member Tensor.Algorithm.Rat.Equals: Tensor.Algorithm.Rat -> bool'
  nameWithType: 'interface IEquatable<Rat> with member Rat.Equals: Rat -> bool'
- uid: Tensor.Algorithm.Rat.System-IEquatable`1-Equals*
  name: Equals
  href: api/Tensor.Algorithm.Rat.System-IEquatable-1-Equals.html
  commentId: Overload:Tensor.Algorithm.Rat.System-IEquatable`1-Equals*
  fullName: Tensor.Algorithm.Rat.Equals
  nameWithType: Rat.Equals
- uid: Tensor.Algorithm.Rat.ToString(unit)
  name: 'override member ToString: unit -> string'
  href: api/Tensor.Algorithm.Rat.ToString.html#Tensor_Algorithm_Rat_ToString_unit_
  commentId: M:Tensor.Algorithm.Rat.ToString
  fullName: 'override member Tensor.Algorithm.Rat.ToString: unit -> string'
  nameWithType: 'override member Rat.ToString: unit -> string'
- uid: Tensor.Algorithm.Rat.ToString*
  name: ToString
  href: api/Tensor.Algorithm.Rat.ToString.html
  commentId: Overload:Tensor.Algorithm.Rat.ToString*
  fullName: Tensor.Algorithm.Rat.ToString
  nameWithType: Rat.ToString
- uid: Tensor.Algorithm.Rat.Truncate(Tensor.Algorithm.Rat)
  name: 'static member Truncate: Rat -> Rat'
  href: api/Tensor.Algorithm.Rat.Truncate.html#Tensor_Algorithm_Rat_Truncate_Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.Rat.Truncate(Tensor.Algorithm.Rat)
  fullName: 'static member Tensor.Algorithm.Rat.Truncate: Tensor.Algorithm.Rat -> Tensor.Algorithm.Rat'
  nameWithType: 'static member Rat.Truncate: Rat -> Rat'
- uid: Tensor.Algorithm.Rat.Truncate*
  name: Truncate
  href: api/Tensor.Algorithm.Rat.Truncate.html
  commentId: Overload:Tensor.Algorithm.Rat.Truncate*
  fullName: Tensor.Algorithm.Rat.Truncate
  nameWithType: Rat.Truncate
- uid: Tensor.Algorithm.Rat.Zero(unit)
  name: 'static property Zero: Rat'
  href: api/Tensor.Algorithm.Rat.Zero.html#Tensor_Algorithm_Rat_Zero_unit_
  commentId: P:Tensor.Algorithm.Rat.Zero
  fullName: 'static property Tensor.Algorithm.Rat.Zero: Tensor.Algorithm.Rat'
  nameWithType: 'static property Rat.Zero: Rat'
- uid: Tensor.Algorithm.Rat.Zero*
  name: Zero
  href: api/Tensor.Algorithm.Rat.Zero.html
  commentId: Overload:Tensor.Algorithm.Rat.Zero*
  fullName: Tensor.Algorithm.Rat.Zero
  nameWithType: Rat.Zero
- uid: Tensor.Algorithm.RatRecognizers
  name: RatRecognizers (mod)
  href: api/Tensor.Algorithm.RatRecognizers.html
  commentId: T:Tensor.Algorithm.RatRecognizers
  fullName: Tensor.Algorithm.RatRecognizers
  nameWithType: Tensor.Algorithm.RatRecognizers
- uid: Tensor.Algorithm.RatRecognizers.|Rat|(Tensor.Algorithm.Rat)
  name: 'val ( |Rat| ): Rat -> bigint * bigint'
  href: api/Tensor.Algorithm.RatRecognizers.-Rat-.html#Tensor_Algorithm_RatRecognizers__Rat__Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.|Rat|(Tensor.Algorithm.Rat)
  fullName: 'val Tensor.Algorithm.RatRecognizers.( |Rat| ): Tensor.Algorithm.Rat -> bigint * bigint'
  nameWithType: 'val RatRecognizers.( |Rat| ): Rat -> bigint * bigint'
- uid: Tensor.Algorithm.RatRecognizers.|Rat|*
  name: ( |Rat| )
  href: api/Tensor.Algorithm.RatRecognizers.-Rat-.html
  commentId: Overload:Tensor.Algorithm.RatRecognizers.|Rat|*
  fullName: Tensor.Algorithm.RatRecognizers.( |Rat| )
  nameWithType: RatRecognizers.( |Rat| )
- uid: Tensor.Algorithm.RatRecognizers.|RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN|(Tensor.Algorithm.Rat)
  name: 'val ( |RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN| ): Rat'
  href: api/Tensor.Algorithm.RatRecognizers.-RatFrac-RatInt-RatPosInf-RatNegInf-RatNaN-.html#Tensor_Algorithm_RatRecognizers__RatFrac_RatInt_RatPosInf_RatNegInf_RatNaN__Tensor_Algorithm_Rat_
  commentId: M:Tensor.Algorithm.|RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN|(Tensor.Algorithm.Rat)
  fullName: 'val Tensor.Algorithm.RatRecognizers.( |RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN| ): Tensor.Algorithm.Rat'
  nameWithType: 'val RatRecognizers.( |RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN| ): Rat'
- uid: Tensor.Algorithm.RatRecognizers.|RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN|*
  name: ( |RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN| )
  href: api/Tensor.Algorithm.RatRecognizers.-RatFrac-RatInt-RatPosInf-RatNegInf-RatNaN-.html
  commentId: Overload:Tensor.Algorithm.RatRecognizers.|RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN|*
  fullName: Tensor.Algorithm.RatRecognizers.( |RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN| )
  nameWithType: RatRecognizers.( |RatFrac|RatInt|RatPosInf|RatNegInf|RatNaN| )
- uid: Tensor.Backend
  name: Tensor.Backend
  href: api/Tensor.Backend.html
  commentId: N:Tensor.Backend
  fullName: Tensor.Backend
  nameWithType: Tensor.Backend
- uid: Tensor.Backend.BaseTensorDevice
  name: BaseTensorDevice
  href: api/Tensor.Backend.BaseTensorDevice.html
  commentId: T:Tensor.Backend.BaseTensorDevice
  fullName: Tensor.Backend.BaseTensorDevice
  nameWithType: Tensor.Backend.BaseTensorDevice
- uid: Tensor.Backend.BaseTensorDevice.#ctor(unit)
  name: 'new: unit -> BaseTensorDevice'
  href: api/Tensor.Backend.BaseTensorDevice.-ctor.html#Tensor_Backend_BaseTensorDevice__ctor_unit_
  commentId: M:Tensor.Backend.BaseTensorDevice.#ctor
  fullName: 'new: unit -> Tensor.Backend.BaseTensorDevice'
  nameWithType: 'new: unit -> BaseTensorDevice'
- uid: Tensor.Backend.BaseTensorDevice.#ctor*
  name: ( .ctor )
  href: api/Tensor.Backend.BaseTensorDevice.-ctor.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.#ctor*
  fullName: Tensor.Backend.BaseTensorDevice
  nameWithType: BaseTensorDevice.( .ctor )
- uid: Tensor.Backend.BaseTensorDevice.Create(int64)
  name: "abstract member Create: int64 -> ITensorStorage<'T>"
  href: api/Tensor.Backend.BaseTensorDevice.Create.html#Tensor_Backend_BaseTensorDevice_Create_int64_
  commentId: M:Tensor.Backend.BaseTensorDevice.Create``1(System.Int64)
  fullName: "abstract member Tensor.Backend.BaseTensorDevice.Create: int64 -> Tensor.Backend.ITensorStorage<'T>"
  nameWithType: "abstract member BaseTensorDevice.Create: int64 -> ITensorStorage<'T>"
- uid: Tensor.Backend.BaseTensorDevice.Create*
  name: Create
  href: api/Tensor.Backend.BaseTensorDevice.Create.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.Create*
  fullName: Tensor.Backend.BaseTensorDevice.Create
  nameWithType: BaseTensorDevice.Create
- uid: Tensor.Backend.BaseTensorDevice.Equals(obj)
  name: 'override member Equals: obj -> bool'
  href: api/Tensor.Backend.BaseTensorDevice.Equals.html#Tensor_Backend_BaseTensorDevice_Equals_obj_
  commentId: M:Tensor.Backend.BaseTensorDevice.Equals(System.Object)
  fullName: 'override member Tensor.Backend.BaseTensorDevice.Equals: obj -> bool'
  nameWithType: 'override member BaseTensorDevice.Equals: obj -> bool'
- uid: Tensor.Backend.BaseTensorDevice.Equals*
  name: Equals
  href: api/Tensor.Backend.BaseTensorDevice.Equals.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.Equals*
  fullName: Tensor.Backend.BaseTensorDevice.Equals
  nameWithType: BaseTensorDevice.Equals
- uid: Tensor.Backend.BaseTensorDevice.GetHashCode(unit)
  name: 'override member GetHashCode: unit -> int'
  href: api/Tensor.Backend.BaseTensorDevice.GetHashCode.html#Tensor_Backend_BaseTensorDevice_GetHashCode_unit_
  commentId: M:Tensor.Backend.BaseTensorDevice.GetHashCode
  fullName: 'override member Tensor.Backend.BaseTensorDevice.GetHashCode: unit -> int'
  nameWithType: 'override member BaseTensorDevice.GetHashCode: unit -> int'
- uid: Tensor.Backend.BaseTensorDevice.GetHashCode*
  name: GetHashCode
  href: api/Tensor.Backend.BaseTensorDevice.GetHashCode.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.GetHashCode*
  fullName: Tensor.Backend.BaseTensorDevice.GetHashCode
  nameWithType: BaseTensorDevice.GetHashCode
- uid: Tensor.Backend.BaseTensorDevice.Id(unit)
  name: 'abstract property Id: string'
  href: api/Tensor.Backend.BaseTensorDevice.Id.html#Tensor_Backend_BaseTensorDevice_Id_unit_
  commentId: P:Tensor.Backend.BaseTensorDevice.Id
  fullName: 'abstract property Tensor.Backend.BaseTensorDevice.Id: string'
  nameWithType: 'abstract property BaseTensorDevice.Id: string'
- uid: Tensor.Backend.BaseTensorDevice.Id*
  name: Id
  href: api/Tensor.Backend.BaseTensorDevice.Id.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.Id*
  fullName: Tensor.Backend.BaseTensorDevice.Id
  nameWithType: BaseTensorDevice.Id
- uid: Tensor.Backend.BaseTensorDevice.System-IComparable`1-CompareTo(Tensor.Backend.ITensorDevice)
  name: 'interface IComparable<ITensorDevice> with member CompareTo: ITensorDevice -> int'
  href: api/Tensor.Backend.BaseTensorDevice.System-IComparable-1-CompareTo.html#Tensor_Backend_BaseTensorDevice_System_IComparable_1_CompareTo_Tensor_Backend_ITensorDevice_
  commentId: M:Tensor.Backend.BaseTensorDevice.System-IComparable`1-CompareTo(Tensor.Backend.ITensorDevice)
  fullName: 'interface System.IComparable<Tensor.Backend.ITensorDevice> with member Tensor.Backend.BaseTensorDevice.CompareTo: Tensor.Backend.ITensorDevice -> int'
  nameWithType: 'interface IComparable<ITensorDevice> with member BaseTensorDevice.CompareTo: ITensorDevice -> int'
- uid: Tensor.Backend.BaseTensorDevice.System-IComparable`1-CompareTo*
  name: CompareTo
  href: api/Tensor.Backend.BaseTensorDevice.System-IComparable-1-CompareTo.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.System-IComparable`1-CompareTo*
  fullName: Tensor.Backend.BaseTensorDevice.CompareTo
  nameWithType: BaseTensorDevice.CompareTo
- uid: Tensor.Backend.BaseTensorDevice.System-IComparable-CompareTo(obj)
  name: 'interface IComparable with member CompareTo: obj -> int'
  href: api/Tensor.Backend.BaseTensorDevice.System-IComparable-CompareTo.html#Tensor_Backend_BaseTensorDevice_System_IComparable_CompareTo_obj_
  commentId: M:Tensor.Backend.BaseTensorDevice.System-IComparable-CompareTo(System.Object)
  fullName: 'interface System.IComparable with member Tensor.Backend.BaseTensorDevice.CompareTo: obj -> int'
  nameWithType: 'interface IComparable with member BaseTensorDevice.CompareTo: obj -> int'
- uid: Tensor.Backend.BaseTensorDevice.System-IComparable-CompareTo*
  name: CompareTo
  href: api/Tensor.Backend.BaseTensorDevice.System-IComparable-CompareTo.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.System-IComparable-CompareTo*
  fullName: Tensor.Backend.BaseTensorDevice.CompareTo
  nameWithType: BaseTensorDevice.CompareTo
- uid: Tensor.Backend.BaseTensorDevice.System-IEquatable`1-Equals(Tensor.Backend.ITensorDevice)
  name: 'interface IEquatable<ITensorDevice> with member Equals: ITensorDevice -> bool'
  href: api/Tensor.Backend.BaseTensorDevice.System-IEquatable-1-Equals.html#Tensor_Backend_BaseTensorDevice_System_IEquatable_1_Equals_Tensor_Backend_ITensorDevice_
  commentId: M:Tensor.Backend.BaseTensorDevice.System-IEquatable`1-Equals(Tensor.Backend.ITensorDevice)
  fullName: 'interface System.IEquatable<Tensor.Backend.ITensorDevice> with member Tensor.Backend.BaseTensorDevice.Equals: Tensor.Backend.ITensorDevice -> bool'
  nameWithType: 'interface IEquatable<ITensorDevice> with member BaseTensorDevice.Equals: ITensorDevice -> bool'
- uid: Tensor.Backend.BaseTensorDevice.System-IEquatable`1-Equals*
  name: Equals
  href: api/Tensor.Backend.BaseTensorDevice.System-IEquatable-1-Equals.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.System-IEquatable`1-Equals*
  fullName: Tensor.Backend.BaseTensorDevice.Equals
  nameWithType: BaseTensorDevice.Equals
- uid: Tensor.Backend.BaseTensorDevice.Tensor-Backend-ITensorDevice-Create(int64)
  name: "interface ITensorDevice with member Create: int64 -> ITensorStorage<'?40621>"
  href: api/Tensor.Backend.BaseTensorDevice.Tensor-Backend-ITensorDevice-Create.html#Tensor_Backend_BaseTensorDevice_Tensor_Backend_ITensorDevice_Create_int64_
  commentId: M:Tensor.Backend.BaseTensorDevice.Tensor-Backend-ITensorDevice-Create``1(System.Int64)
  fullName: "interface Tensor.Backend.ITensorDevice with member Tensor.Backend.BaseTensorDevice.Create: int64 -> Tensor.Backend.ITensorStorage<'?40621>"
  nameWithType: "interface ITensorDevice with member BaseTensorDevice.Create: int64 -> ITensorStorage<'?40621>"
- uid: Tensor.Backend.BaseTensorDevice.Tensor-Backend-ITensorDevice-Create*
  name: Create
  href: api/Tensor.Backend.BaseTensorDevice.Tensor-Backend-ITensorDevice-Create.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.Tensor-Backend-ITensorDevice-Create*
  fullName: Tensor.Backend.BaseTensorDevice.Create
  nameWithType: BaseTensorDevice.Create
- uid: Tensor.Backend.BaseTensorDevice.ToString(unit)
  name: 'override member ToString: unit -> string'
  href: api/Tensor.Backend.BaseTensorDevice.ToString.html#Tensor_Backend_BaseTensorDevice_ToString_unit_
  commentId: M:Tensor.Backend.BaseTensorDevice.ToString
  fullName: 'override member Tensor.Backend.BaseTensorDevice.ToString: unit -> string'
  nameWithType: 'override member BaseTensorDevice.ToString: unit -> string'
- uid: Tensor.Backend.BaseTensorDevice.ToString*
  name: ToString
  href: api/Tensor.Backend.BaseTensorDevice.ToString.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.ToString*
  fullName: Tensor.Backend.BaseTensorDevice.ToString
  nameWithType: BaseTensorDevice.ToString
- uid: Tensor.Backend.BaseTensorDevice.Zeroed(unit)
  name: 'abstract property Zeroed: bool'
  href: api/Tensor.Backend.BaseTensorDevice.Zeroed.html#Tensor_Backend_BaseTensorDevice_Zeroed_unit_
  commentId: P:Tensor.Backend.BaseTensorDevice.Zeroed
  fullName: 'abstract property Tensor.Backend.BaseTensorDevice.Zeroed: bool'
  nameWithType: 'abstract property BaseTensorDevice.Zeroed: bool'
- uid: Tensor.Backend.BaseTensorDevice.Zeroed*
  name: Zeroed
  href: api/Tensor.Backend.BaseTensorDevice.Zeroed.html
  commentId: Overload:Tensor.Backend.BaseTensorDevice.Zeroed*
  fullName: Tensor.Backend.BaseTensorDevice.Zeroed
  nameWithType: BaseTensorDevice.Zeroed
- uid: Tensor.Backend.ITensorBackend`1
  name: ITensorBackend<'T>
  href: api/Tensor.Backend.ITensorBackend-1.html
  commentId: T:Tensor.Backend.ITensorBackend`1
  fullName: Tensor.Backend.ITensorBackend`1
  nameWithType: Tensor.Backend.ITensorBackend`1
- uid: Tensor.Backend.ITensorBackend`1.Abs(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Abs: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Abs.html#Tensor_Backend_ITensorBackend_1_Abs_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Abs(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Abs: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Abs: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Abs*
  name: Abs
  href: api/Tensor.Backend.ITensorBackend-1.Abs.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Abs*
  fullName: Tensor.Backend.ITensorBackend.Abs
  nameWithType: ITensorBackend.Abs
- uid: Tensor.Backend.ITensorBackend`1.Acos(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Acos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Acos.html#Tensor_Backend_ITensorBackend_1_Acos_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Acos(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Acos: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Acos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Acos*
  name: Acos
  href: api/Tensor.Backend.ITensorBackend-1.Acos.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Acos*
  fullName: Tensor.Backend.ITensorBackend.Acos
  nameWithType: ITensorBackend.Acos
- uid: Tensor.Backend.ITensorBackend`1.Add(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Add: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Add.html#Tensor_Backend_ITensorBackend_1_Add_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Add(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Add: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Add: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Add*
  name: Add
  href: api/Tensor.Backend.ITensorBackend-1.Add.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Add*
  fullName: Tensor.Backend.ITensorBackend.Add
  nameWithType: ITensorBackend.Add
- uid: Tensor.Backend.ITensorBackend`1.AllLastAxis(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member AllLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.AllLastAxis.html#Tensor_Backend_ITensorBackend_1_AllLastAxis_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.AllLastAxis(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.AllLastAxis: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.AllLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.AllLastAxis*
  name: AllLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.AllLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.AllLastAxis*
  fullName: Tensor.Backend.ITensorBackend.AllLastAxis
  nameWithType: ITensorBackend.AllLastAxis
- uid: Tensor.Backend.ITensorBackend`1.And(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member And: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.And.html#Tensor_Backend_ITensorBackend_1_And_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.And(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.And: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.And: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.And*
  name: And
  href: api/Tensor.Backend.ITensorBackend-1.And.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.And*
  fullName: Tensor.Backend.ITensorBackend.And
  nameWithType: ITensorBackend.And
- uid: Tensor.Backend.ITensorBackend`1.AnyLastAxis(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member AnyLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.AnyLastAxis.html#Tensor_Backend_ITensorBackend_1_AnyLastAxis_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.AnyLastAxis(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.AnyLastAxis: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.AnyLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.AnyLastAxis*
  name: AnyLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.AnyLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.AnyLastAxis*
  fullName: Tensor.Backend.ITensorBackend.AnyLastAxis
  nameWithType: ITensorBackend.AnyLastAxis
- uid: Tensor.Backend.ITensorBackend`1.ArgMaxLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member ArgMaxLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.ArgMaxLastAxis.html#Tensor_Backend_ITensorBackend_1_ArgMaxLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.ArgMaxLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.ArgMaxLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.ArgMaxLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.ArgMaxLastAxis*
  name: ArgMaxLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.ArgMaxLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.ArgMaxLastAxis*
  fullName: Tensor.Backend.ITensorBackend.ArgMaxLastAxis
  nameWithType: ITensorBackend.ArgMaxLastAxis
- uid: Tensor.Backend.ITensorBackend`1.ArgMinLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member ArgMinLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.ArgMinLastAxis.html#Tensor_Backend_ITensorBackend_1_ArgMinLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.ArgMinLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.ArgMinLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.ArgMinLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.ArgMinLastAxis*
  name: ArgMinLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.ArgMinLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.ArgMinLastAxis*
  fullName: Tensor.Backend.ITensorBackend.ArgMinLastAxis
  nameWithType: ITensorBackend.ArgMinLastAxis
- uid: Tensor.Backend.ITensorBackend`1.Asin(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Asin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Asin.html#Tensor_Backend_ITensorBackend_1_Asin_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Asin(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Asin: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Asin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Asin*
  name: Asin
  href: api/Tensor.Backend.ITensorBackend-1.Asin.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Asin*
  fullName: Tensor.Backend.ITensorBackend.Asin
  nameWithType: ITensorBackend.Asin
- uid: Tensor.Backend.ITensorBackend`1.Atan(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Atan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Atan.html#Tensor_Backend_ITensorBackend_1_Atan_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Atan(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Atan: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Atan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Atan*
  name: Atan
  href: api/Tensor.Backend.ITensorBackend-1.Atan.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Atan*
  fullName: Tensor.Backend.ITensorBackend.Atan
  nameWithType: ITensorBackend.Atan
- uid: Tensor.Backend.ITensorBackend`1.BatchedInvert(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member BatchedInvert: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.BatchedInvert.html#Tensor_Backend_ITensorBackend_1_BatchedInvert_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.BatchedInvert(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.BatchedInvert: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.BatchedInvert: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.BatchedInvert*
  name: BatchedInvert
  href: api/Tensor.Backend.ITensorBackend-1.BatchedInvert.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.BatchedInvert*
  fullName: Tensor.Backend.ITensorBackend.BatchedInvert
  nameWithType: ITensorBackend.BatchedInvert
- uid: Tensor.Backend.ITensorBackend`1.BatchedMatMatDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member BatchedMatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.BatchedMatMatDot.html#Tensor_Backend_ITensorBackend_1_BatchedMatMatDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.BatchedMatMatDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.BatchedMatMatDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.BatchedMatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.BatchedMatMatDot*
  name: BatchedMatMatDot
  href: api/Tensor.Backend.ITensorBackend-1.BatchedMatMatDot.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.BatchedMatMatDot*
  fullName: Tensor.Backend.ITensorBackend.BatchedMatMatDot
  nameWithType: ITensorBackend.BatchedMatMatDot
- uid: Tensor.Backend.ITensorBackend`1.BatchedSVD(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> option * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member BatchedSVD: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> option * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.BatchedSVD.html#Tensor_Backend_ITensorBackend_1_BatchedSVD_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__option___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.BatchedSVD(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{System.Tuple{Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.BatchedSVD: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> option * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.BatchedSVD: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> option * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.BatchedSVD*
  name: BatchedSVD
  href: api/Tensor.Backend.ITensorBackend-1.BatchedSVD.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.BatchedSVD*
  fullName: Tensor.Backend.ITensorBackend.BatchedSVD
  nameWithType: ITensorBackend.BatchedSVD
- uid: Tensor.Backend.ITensorBackend`1.Ceiling(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Ceiling: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Ceiling.html#Tensor_Backend_ITensorBackend_1_Ceiling_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Ceiling(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Ceiling: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Ceiling: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Ceiling*
  name: Ceiling
  href: api/Tensor.Backend.ITensorBackend-1.Ceiling.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Ceiling*
  fullName: Tensor.Backend.ITensorBackend.Ceiling
  nameWithType: ITensorBackend.Ceiling
- uid: Tensor.Backend.ITensorBackend`1.Convert(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T1>)
  name: "abstract member Convert: ITensorFrontend<'T> * ITensorFrontend<'T1> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Convert.html#Tensor_Backend_ITensorBackend_1_Convert_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T1__
  commentId: M:Tensor.Backend.ITensorBackend`1.Convert``1(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{``0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Convert: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T1> -> unit"
  nameWithType: "abstract member ITensorBackend.Convert: ITensorFrontend<'T> * ITensorFrontend<'T1> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Convert*
  name: Convert
  href: api/Tensor.Backend.ITensorBackend-1.Convert.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Convert*
  fullName: Tensor.Backend.ITensorBackend.Convert
  nameWithType: ITensorBackend.Convert
- uid: Tensor.Backend.ITensorBackend`1.Copy(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Copy: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Copy.html#Tensor_Backend_ITensorBackend_1_Copy_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Copy(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Copy: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Copy: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Copy*
  name: Copy
  href: api/Tensor.Backend.ITensorBackend-1.Copy.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Copy*
  fullName: Tensor.Backend.ITensorBackend.Copy
  nameWithType: ITensorBackend.Copy
- uid: Tensor.Backend.ITensorBackend`1.Cos(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Cos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Cos.html#Tensor_Backend_ITensorBackend_1_Cos_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Cos(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Cos: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Cos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Cos*
  name: Cos
  href: api/Tensor.Backend.ITensorBackend-1.Cos.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Cos*
  fullName: Tensor.Backend.ITensorBackend.Cos
  nameWithType: ITensorBackend.Cos
- uid: Tensor.Backend.ITensorBackend`1.Cosh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Cosh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Cosh.html#Tensor_Backend_ITensorBackend_1_Cosh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Cosh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Cosh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Cosh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Cosh*
  name: Cosh
  href: api/Tensor.Backend.ITensorBackend-1.Cosh.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Cosh*
  fullName: Tensor.Backend.ITensorBackend.Cosh
  nameWithType: ITensorBackend.Cosh
- uid: Tensor.Backend.ITensorBackend`1.CountTrueLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member CountTrueLastAxis: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.CountTrueLastAxis.html#Tensor_Backend_ITensorBackend_1_CountTrueLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.CountTrueLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.CountTrueLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.CountTrueLastAxis: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.CountTrueLastAxis*
  name: CountTrueLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.CountTrueLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.CountTrueLastAxis*
  fullName: Tensor.Backend.ITensorBackend.CountTrueLastAxis
  nameWithType: ITensorBackend.CountTrueLastAxis
- uid: Tensor.Backend.ITensorBackend`1.Divide(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Divide: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Divide.html#Tensor_Backend_ITensorBackend_1_Divide_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Divide(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Divide: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Divide: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Divide*
  name: Divide
  href: api/Tensor.Backend.ITensorBackend-1.Divide.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Divide*
  fullName: Tensor.Backend.ITensorBackend.Divide
  nameWithType: ITensorBackend.Divide
- uid: Tensor.Backend.ITensorBackend`1.Equal(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Equal: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Equal.html#Tensor_Backend_ITensorBackend_1_Equal_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Equal(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Equal: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Equal: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Equal*
  name: Equal
  href: api/Tensor.Backend.ITensorBackend-1.Equal.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Equal*
  fullName: Tensor.Backend.ITensorBackend.Equal
  nameWithType: ITensorBackend.Equal
- uid: Tensor.Backend.ITensorBackend`1.Exp(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Exp: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Exp.html#Tensor_Backend_ITensorBackend_1_Exp_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Exp(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Exp: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Exp: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Exp*
  name: Exp
  href: api/Tensor.Backend.ITensorBackend-1.Exp.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Exp*
  fullName: Tensor.Backend.ITensorBackend.Exp
  nameWithType: ITensorBackend.Exp
- uid: Tensor.Backend.ITensorBackend`1.FillConst('T * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member FillConst: 'T * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.FillConst.html#Tensor_Backend_ITensorBackend_1_FillConst__T___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.FillConst(`0,Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.FillConst: 'T * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.FillConst: 'T * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.FillConst*
  name: FillConst
  href: api/Tensor.Backend.ITensorBackend-1.FillConst.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.FillConst*
  fullName: Tensor.Backend.ITensorBackend.FillConst
  nameWithType: ITensorBackend.FillConst
- uid: Tensor.Backend.ITensorBackend`1.FillIncrementing('T * 'T * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member FillIncrementing: 'T * 'T * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.FillIncrementing.html#Tensor_Backend_ITensorBackend_1_FillIncrementing__T____T___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.FillIncrementing(`0,`0,Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.FillIncrementing: 'T * 'T * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.FillIncrementing: 'T * 'T * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.FillIncrementing*
  name: FillIncrementing
  href: api/Tensor.Backend.ITensorBackend-1.FillIncrementing.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.FillIncrementing*
  fullName: Tensor.Backend.ITensorBackend.FillIncrementing
  nameWithType: ITensorBackend.FillIncrementing
- uid: Tensor.Backend.ITensorBackend`1.FindLastAxis('T * Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member FindLastAxis: 'T * ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.FindLastAxis.html#Tensor_Backend_ITensorBackend_1_FindLastAxis__T___Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.FindLastAxis(`0,Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.FindLastAxis: 'T * Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.FindLastAxis: 'T * ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.FindLastAxis*
  name: FindLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.FindLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.FindLastAxis*
  fullName: Tensor.Backend.ITensorBackend.FindLastAxis
  nameWithType: ITensorBackend.FindLastAxis
- uid: Tensor.Backend.ITensorBackend`1.Floor(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Floor: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Floor.html#Tensor_Backend_ITensorBackend_1_Floor_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Floor(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Floor: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Floor: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Floor*
  name: Floor
  href: api/Tensor.Backend.ITensorBackend-1.Floor.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Floor*
  fullName: Tensor.Backend.ITensorBackend.Floor
  nameWithType: ITensorBackend.Floor
- uid: Tensor.Backend.ITensorBackend`1.Gather(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Gather: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Gather.html#Tensor_Backend_ITensorBackend_1_Gather_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_int64__option_list___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Gather(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Int64}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Gather: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Gather: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Gather*
  name: Gather
  href: api/Tensor.Backend.ITensorBackend-1.Gather.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Gather*
  fullName: Tensor.Backend.ITensorBackend.Gather
  nameWithType: ITensorBackend.Gather
- uid: Tensor.Backend.ITensorBackend`1.Greater(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Greater: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Greater.html#Tensor_Backend_ITensorBackend_1_Greater_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Greater(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Greater: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Greater: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Greater*
  name: Greater
  href: api/Tensor.Backend.ITensorBackend-1.Greater.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Greater*
  fullName: Tensor.Backend.ITensorBackend.Greater
  nameWithType: ITensorBackend.Greater
- uid: Tensor.Backend.ITensorBackend`1.GreaterOrEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member GreaterOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.GreaterOrEqual.html#Tensor_Backend_ITensorBackend_1_GreaterOrEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.GreaterOrEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.GreaterOrEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.GreaterOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.GreaterOrEqual*
  name: GreaterOrEqual
  href: api/Tensor.Backend.ITensorBackend-1.GreaterOrEqual.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.GreaterOrEqual*
  fullName: Tensor.Backend.ITensorBackend.GreaterOrEqual
  nameWithType: ITensorBackend.GreaterOrEqual
- uid: Tensor.Backend.ITensorBackend`1.IfThenElse(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member IfThenElse: ITensorFrontend<'T> * ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.IfThenElse.html#Tensor_Backend_ITensorBackend_1_IfThenElse_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.IfThenElse(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.IfThenElse: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.IfThenElse: ITensorFrontend<'T> * ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.IfThenElse*
  name: IfThenElse
  href: api/Tensor.Backend.ITensorBackend-1.IfThenElse.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.IfThenElse*
  fullName: Tensor.Backend.ITensorBackend.IfThenElse
  nameWithType: ITensorBackend.IfThenElse
- uid: Tensor.Backend.ITensorBackend`1.IsFinite(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member IsFinite: ITensorFrontend<bool> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.IsFinite.html#Tensor_Backend_ITensorBackend_1_IsFinite_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.IsFinite(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.IsFinite: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.IsFinite: ITensorFrontend<bool> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.IsFinite*
  name: IsFinite
  href: api/Tensor.Backend.ITensorBackend-1.IsFinite.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.IsFinite*
  fullName: Tensor.Backend.ITensorBackend.IsFinite
  nameWithType: ITensorBackend.IsFinite
- uid: Tensor.Backend.ITensorBackend`1.Item(int64 [])
  name: "abstract property Item: int64 [] -> 'T"
  href: api/Tensor.Backend.ITensorBackend-1.Item.html#Tensor_Backend_ITensorBackend_1_Item_int64____
  commentId: P:Tensor.Backend.ITensorBackend`1.Item(System.Int64[])
  fullName: "abstract property Tensor.Backend.ITensorBackend.Item: int64 [] -> 'T"
  nameWithType: "abstract property ITensorBackend.Item: int64 [] -> 'T"
- uid: Tensor.Backend.ITensorBackend`1.Item*
  name: Item
  href: api/Tensor.Backend.ITensorBackend-1.Item.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Item*
  fullName: Tensor.Backend.ITensorBackend.Item
  nameWithType: ITensorBackend.Item
- uid: Tensor.Backend.ITensorBackend`1.Less(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Less: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Less.html#Tensor_Backend_ITensorBackend_1_Less_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Less(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Less: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Less: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Less*
  name: Less
  href: api/Tensor.Backend.ITensorBackend-1.Less.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Less*
  fullName: Tensor.Backend.ITensorBackend.Less
  nameWithType: ITensorBackend.Less
- uid: Tensor.Backend.ITensorBackend`1.LessOrEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member LessOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.LessOrEqual.html#Tensor_Backend_ITensorBackend_1_LessOrEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.LessOrEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.LessOrEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.LessOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.LessOrEqual*
  name: LessOrEqual
  href: api/Tensor.Backend.ITensorBackend-1.LessOrEqual.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.LessOrEqual*
  fullName: Tensor.Backend.ITensorBackend.LessOrEqual
  nameWithType: ITensorBackend.LessOrEqual
- uid: Tensor.Backend.ITensorBackend`1.Log(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Log: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Log.html#Tensor_Backend_ITensorBackend_1_Log_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Log(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Log: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Log: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Log*
  name: Log
  href: api/Tensor.Backend.ITensorBackend-1.Log.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Log*
  fullName: Tensor.Backend.ITensorBackend.Log
  nameWithType: ITensorBackend.Log
- uid: Tensor.Backend.ITensorBackend`1.Log10(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Log10: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Log10.html#Tensor_Backend_ITensorBackend_1_Log10_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Log10(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Log10: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Log10: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Log10*
  name: Log10
  href: api/Tensor.Backend.ITensorBackend-1.Log10.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Log10*
  fullName: Tensor.Backend.ITensorBackend.Log10
  nameWithType: ITensorBackend.Log10
- uid: Tensor.Backend.ITensorBackend`1.MaskedGet(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [])
  name: "abstract member MaskedGet: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<bool> option [] -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MaskedGet.html#Tensor_Backend_ITensorBackend_1_MaskedGet_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool__option____
  commentId: M:Tensor.Backend.ITensorBackend`1.MaskedGet(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Boolean}}[])
  fullName: "abstract member Tensor.Backend.ITensorBackend.MaskedGet: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] -> unit"
  nameWithType: "abstract member ITensorBackend.MaskedGet: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<bool> option [] -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MaskedGet*
  name: MaskedGet
  href: api/Tensor.Backend.ITensorBackend-1.MaskedGet.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MaskedGet*
  fullName: Tensor.Backend.ITensorBackend.MaskedGet
  nameWithType: ITensorBackend.MaskedGet
- uid: Tensor.Backend.ITensorBackend`1.MaskedSet(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MaskedSet: ITensorFrontend<'T> * ITensorFrontend<bool> option [] * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MaskedSet.html#Tensor_Backend_ITensorBackend_1_MaskedSet_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool__option______Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MaskedSet(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Boolean}}[],Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MaskedSet: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MaskedSet: ITensorFrontend<'T> * ITensorFrontend<bool> option [] * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MaskedSet*
  name: MaskedSet
  href: api/Tensor.Backend.ITensorBackend-1.MaskedSet.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MaskedSet*
  fullName: Tensor.Backend.ITensorBackend.MaskedSet
  nameWithType: ITensorBackend.MaskedSet
- uid: Tensor.Backend.ITensorBackend`1.MatMatDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MatMatDot.html#Tensor_Backend_ITensorBackend_1_MatMatDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MatMatDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MatMatDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MatMatDot*
  name: MatMatDot
  href: api/Tensor.Backend.ITensorBackend-1.MatMatDot.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MatMatDot*
  fullName: Tensor.Backend.ITensorBackend.MatMatDot
  nameWithType: ITensorBackend.MatMatDot
- uid: Tensor.Backend.ITensorBackend`1.MatVecDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MatVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MatVecDot.html#Tensor_Backend_ITensorBackend_1_MatVecDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MatVecDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MatVecDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MatVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MatVecDot*
  name: MatVecDot
  href: api/Tensor.Backend.ITensorBackend-1.MatVecDot.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MatVecDot*
  fullName: Tensor.Backend.ITensorBackend.MatVecDot
  nameWithType: ITensorBackend.MatVecDot
- uid: Tensor.Backend.ITensorBackend`1.MaxElemwise(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MaxElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MaxElemwise.html#Tensor_Backend_ITensorBackend_1_MaxElemwise_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MaxElemwise(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MaxElemwise: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MaxElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MaxElemwise*
  name: MaxElemwise
  href: api/Tensor.Backend.ITensorBackend-1.MaxElemwise.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MaxElemwise*
  fullName: Tensor.Backend.ITensorBackend.MaxElemwise
  nameWithType: ITensorBackend.MaxElemwise
- uid: Tensor.Backend.ITensorBackend`1.MaxLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MaxLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MaxLastAxis.html#Tensor_Backend_ITensorBackend_1_MaxLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MaxLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MaxLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MaxLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MaxLastAxis*
  name: MaxLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.MaxLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MaxLastAxis*
  fullName: Tensor.Backend.ITensorBackend.MaxLastAxis
  nameWithType: ITensorBackend.MaxLastAxis
- uid: Tensor.Backend.ITensorBackend`1.MinElemwise(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MinElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MinElemwise.html#Tensor_Backend_ITensorBackend_1_MinElemwise_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MinElemwise(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MinElemwise: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MinElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MinElemwise*
  name: MinElemwise
  href: api/Tensor.Backend.ITensorBackend-1.MinElemwise.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MinElemwise*
  fullName: Tensor.Backend.ITensorBackend.MinElemwise
  nameWithType: ITensorBackend.MinElemwise
- uid: Tensor.Backend.ITensorBackend`1.MinLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member MinLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.MinLastAxis.html#Tensor_Backend_ITensorBackend_1_MinLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.MinLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.MinLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.MinLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.MinLastAxis*
  name: MinLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.MinLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.MinLastAxis*
  fullName: Tensor.Backend.ITensorBackend.MinLastAxis
  nameWithType: ITensorBackend.MinLastAxis
- uid: Tensor.Backend.ITensorBackend`1.Modulo(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Modulo: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Modulo.html#Tensor_Backend_ITensorBackend_1_Modulo_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Modulo(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Modulo: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Modulo: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Modulo*
  name: Modulo
  href: api/Tensor.Backend.ITensorBackend-1.Modulo.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Modulo*
  fullName: Tensor.Backend.ITensorBackend.Modulo
  nameWithType: ITensorBackend.Modulo
- uid: Tensor.Backend.ITensorBackend`1.Multiply(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Multiply: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Multiply.html#Tensor_Backend_ITensorBackend_1_Multiply_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Multiply(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Multiply: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Multiply: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Multiply*
  name: Multiply
  href: api/Tensor.Backend.ITensorBackend-1.Multiply.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Multiply*
  fullName: Tensor.Backend.ITensorBackend.Multiply
  nameWithType: ITensorBackend.Multiply
- uid: Tensor.Backend.ITensorBackend`1.Negate(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member Negate: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.Negate.html#Tensor_Backend_ITensorBackend_1_Negate_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.Negate(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.Negate: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.Negate: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.Negate*
  name: Negate
  href: api/Tensor.Backend.ITensorBackend-1.Negate.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Negate*
  fullName: Tensor.Backend.ITensorBackend.Negate
  nameWithType: ITensorBackend.Negate
- uid: Tensor.Backend.ITensorBackend`1.NotEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member NotEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.NotEqual.html#Tensor_Backend_ITensorBackend_1_NotEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.NotEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.NotEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.NotEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.NotEqual*
  name: NotEqual
  href: api/Tensor.Backend.ITensorBackend-1.NotEqual.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.NotEqual*
  fullName: Tensor.Backend.ITensorBackend.NotEqual
  nameWithType: ITensorBackend.NotEqual
- uid: Tensor.Backend.ITensorBackend`1.Or(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member Or: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.Or.html#Tensor_Backend_ITensorBackend_1_Or_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.Or(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.Or: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.Or: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.Or*
  name: Or
  href: api/Tensor.Backend.ITensorBackend-1.Or.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Or*
  fullName: Tensor.Backend.ITensorBackend.Or
  nameWithType: ITensorBackend.Or
- uid: Tensor.Backend.ITensorBackend`1.Power(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Power: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Power.html#Tensor_Backend_ITensorBackend_1_Power_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Power(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Power: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Power: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Power*
  name: Power
  href: api/Tensor.Backend.ITensorBackend-1.Power.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Power*
  fullName: Tensor.Backend.ITensorBackend.Power
  nameWithType: ITensorBackend.Power
- uid: Tensor.Backend.ITensorBackend`1.ProductLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member ProductLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.ProductLastAxis.html#Tensor_Backend_ITensorBackend_1_ProductLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.ProductLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.ProductLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.ProductLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.ProductLastAxis*
  name: ProductLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.ProductLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.ProductLastAxis*
  fullName: Tensor.Backend.ITensorBackend.ProductLastAxis
  nameWithType: ITensorBackend.ProductLastAxis
- uid: Tensor.Backend.ITensorBackend`1.Round(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Round: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Round.html#Tensor_Backend_ITensorBackend_1_Round_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Round(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Round: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Round: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Round*
  name: Round
  href: api/Tensor.Backend.ITensorBackend-1.Round.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Round*
  fullName: Tensor.Backend.ITensorBackend.Round
  nameWithType: ITensorBackend.Round
- uid: Tensor.Backend.ITensorBackend`1.Scatter(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Scatter: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Scatter.html#Tensor_Backend_ITensorBackend_1_Scatter_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_int64__option_list___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Scatter(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Int64}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Scatter: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Scatter: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Scatter*
  name: Scatter
  href: api/Tensor.Backend.ITensorBackend-1.Scatter.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Scatter*
  fullName: Tensor.Backend.ITensorBackend.Scatter
  nameWithType: ITensorBackend.Scatter
- uid: Tensor.Backend.ITensorBackend`1.Sgn(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Sgn: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Sgn.html#Tensor_Backend_ITensorBackend_1_Sgn_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Sgn(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Sgn: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Sgn: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Sgn*
  name: Sgn
  href: api/Tensor.Backend.ITensorBackend-1.Sgn.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Sgn*
  fullName: Tensor.Backend.ITensorBackend.Sgn
  nameWithType: ITensorBackend.Sgn
- uid: Tensor.Backend.ITensorBackend`1.Sin(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Sin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Sin.html#Tensor_Backend_ITensorBackend_1_Sin_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Sin(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Sin: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Sin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Sin*
  name: Sin
  href: api/Tensor.Backend.ITensorBackend-1.Sin.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Sin*
  fullName: Tensor.Backend.ITensorBackend.Sin
  nameWithType: ITensorBackend.Sin
- uid: Tensor.Backend.ITensorBackend`1.Sinh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Sinh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Sinh.html#Tensor_Backend_ITensorBackend_1_Sinh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Sinh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Sinh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Sinh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Sinh*
  name: Sinh
  href: api/Tensor.Backend.ITensorBackend-1.Sinh.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Sinh*
  fullName: Tensor.Backend.ITensorBackend.Sinh
  nameWithType: ITensorBackend.Sinh
- uid: Tensor.Backend.ITensorBackend`1.Sqrt(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Sqrt: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Sqrt.html#Tensor_Backend_ITensorBackend_1_Sqrt_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Sqrt(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Sqrt: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Sqrt: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Sqrt*
  name: Sqrt
  href: api/Tensor.Backend.ITensorBackend-1.Sqrt.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Sqrt*
  fullName: Tensor.Backend.ITensorBackend.Sqrt
  nameWithType: ITensorBackend.Sqrt
- uid: Tensor.Backend.ITensorBackend`1.Subtract(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Subtract: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Subtract.html#Tensor_Backend_ITensorBackend_1_Subtract_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Subtract(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Subtract: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Subtract: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Subtract*
  name: Subtract
  href: api/Tensor.Backend.ITensorBackend-1.Subtract.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Subtract*
  fullName: Tensor.Backend.ITensorBackend.Subtract
  nameWithType: ITensorBackend.Subtract
- uid: Tensor.Backend.ITensorBackend`1.SumLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member SumLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.SumLastAxis.html#Tensor_Backend_ITensorBackend_1_SumLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.SumLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.SumLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.SumLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.SumLastAxis*
  name: SumLastAxis
  href: api/Tensor.Backend.ITensorBackend-1.SumLastAxis.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.SumLastAxis*
  fullName: Tensor.Backend.ITensorBackend.SumLastAxis
  nameWithType: ITensorBackend.SumLastAxis
- uid: Tensor.Backend.ITensorBackend`1.SymmetricEigenDecomposition(Tensor.MatrixPart * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member SymmetricEigenDecomposition: MatrixPart * ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.SymmetricEigenDecomposition.html#Tensor_Backend_ITensorBackend_1_SymmetricEigenDecomposition_Tensor_MatrixPart___Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.SymmetricEigenDecomposition(Tensor.MatrixPart,Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.SymmetricEigenDecomposition: Tensor.MatrixPart * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.SymmetricEigenDecomposition: MatrixPart * ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.SymmetricEigenDecomposition*
  name: SymmetricEigenDecomposition
  href: api/Tensor.Backend.ITensorBackend-1.SymmetricEigenDecomposition.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.SymmetricEigenDecomposition*
  fullName: Tensor.Backend.ITensorBackend.SymmetricEigenDecomposition
  nameWithType: ITensorBackend.SymmetricEigenDecomposition
- uid: Tensor.Backend.ITensorBackend`1.Tan(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Tan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Tan.html#Tensor_Backend_ITensorBackend_1_Tan_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Tan(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Tan: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Tan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Tan*
  name: Tan
  href: api/Tensor.Backend.ITensorBackend-1.Tan.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Tan*
  fullName: Tensor.Backend.ITensorBackend.Tan
  nameWithType: ITensorBackend.Tan
- uid: Tensor.Backend.ITensorBackend`1.Tanh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Tanh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Tanh.html#Tensor_Backend_ITensorBackend_1_Tanh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Tanh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Tanh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Tanh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Tanh*
  name: Tanh
  href: api/Tensor.Backend.ITensorBackend-1.Tanh.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Tanh*
  fullName: Tensor.Backend.ITensorBackend.Tanh
  nameWithType: ITensorBackend.Tanh
- uid: Tensor.Backend.ITensorBackend`1.Transfer(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Transfer: ITensorFrontend<'T> * ITensorFrontend<'T> -> bool"
  href: api/Tensor.Backend.ITensorBackend-1.Transfer.html#Tensor_Backend_ITensorBackend_1_Transfer_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Transfer(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Transfer: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> bool"
  nameWithType: "abstract member ITensorBackend.Transfer: ITensorFrontend<'T> * ITensorFrontend<'T> -> bool"
- uid: Tensor.Backend.ITensorBackend`1.Transfer*
  name: Transfer
  href: api/Tensor.Backend.ITensorBackend-1.Transfer.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Transfer*
  fullName: Tensor.Backend.ITensorBackend.Transfer
  nameWithType: ITensorBackend.Transfer
- uid: Tensor.Backend.ITensorBackend`1.TrueIndices(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member TrueIndices: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.TrueIndices.html#Tensor_Backend_ITensorBackend_1_TrueIndices_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.TrueIndices(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.TrueIndices: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.TrueIndices: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.TrueIndices*
  name: TrueIndices
  href: api/Tensor.Backend.ITensorBackend-1.TrueIndices.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.TrueIndices*
  fullName: Tensor.Backend.ITensorBackend.TrueIndices
  nameWithType: ITensorBackend.TrueIndices
- uid: Tensor.Backend.ITensorBackend`1.Truncate(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member Truncate: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.Truncate.html#Tensor_Backend_ITensorBackend_1_Truncate_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.Truncate(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.Truncate: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.Truncate: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.Truncate*
  name: Truncate
  href: api/Tensor.Backend.ITensorBackend-1.Truncate.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Truncate*
  fullName: Tensor.Backend.ITensorBackend.Truncate
  nameWithType: ITensorBackend.Truncate
- uid: Tensor.Backend.ITensorBackend`1.UnaryMinus(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member UnaryMinus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.UnaryMinus.html#Tensor_Backend_ITensorBackend_1_UnaryMinus_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.UnaryMinus(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.UnaryMinus: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.UnaryMinus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.UnaryMinus*
  name: UnaryMinus
  href: api/Tensor.Backend.ITensorBackend-1.UnaryMinus.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.UnaryMinus*
  fullName: Tensor.Backend.ITensorBackend.UnaryMinus
  nameWithType: ITensorBackend.UnaryMinus
- uid: Tensor.Backend.ITensorBackend`1.UnaryPlus(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member UnaryPlus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.UnaryPlus.html#Tensor_Backend_ITensorBackend_1_UnaryPlus_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.UnaryPlus(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.UnaryPlus: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.UnaryPlus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.UnaryPlus*
  name: UnaryPlus
  href: api/Tensor.Backend.ITensorBackend-1.UnaryPlus.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.UnaryPlus*
  fullName: Tensor.Backend.ITensorBackend.UnaryPlus
  nameWithType: ITensorBackend.UnaryPlus
- uid: Tensor.Backend.ITensorBackend`1.VecVecDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member VecVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorBackend-1.VecVecDot.html#Tensor_Backend_ITensorBackend_1_VecVecDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorBackend`1.VecVecDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorBackend.VecVecDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorBackend.VecVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorBackend`1.VecVecDot*
  name: VecVecDot
  href: api/Tensor.Backend.ITensorBackend-1.VecVecDot.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.VecVecDot*
  fullName: Tensor.Backend.ITensorBackend.VecVecDot
  nameWithType: ITensorBackend.VecVecDot
- uid: Tensor.Backend.ITensorBackend`1.Xor(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: 'abstract member Xor: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
  href: api/Tensor.Backend.ITensorBackend-1.Xor.html#Tensor_Backend_ITensorBackend_1_Xor_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Backend.ITensorBackend`1.Xor(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: 'abstract member Tensor.Backend.ITensorBackend.Xor: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit'
  nameWithType: 'abstract member ITensorBackend.Xor: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit'
- uid: Tensor.Backend.ITensorBackend`1.Xor*
  name: Xor
  href: api/Tensor.Backend.ITensorBackend-1.Xor.html
  commentId: Overload:Tensor.Backend.ITensorBackend`1.Xor*
  fullName: Tensor.Backend.ITensorBackend.Xor
  nameWithType: ITensorBackend.Xor
- uid: Tensor.Backend.ITensorDevice
  name: ITensorDevice
  href: api/Tensor.Backend.ITensorDevice.html
  commentId: T:Tensor.Backend.ITensorDevice
  fullName: Tensor.Backend.ITensorDevice
  nameWithType: Tensor.Backend.ITensorDevice
- uid: Tensor.Backend.ITensorDevice.Create(int64)
  name: "abstract member Create: int64 -> ITensorStorage<'T>"
  href: api/Tensor.Backend.ITensorDevice.Create.html#Tensor_Backend_ITensorDevice_Create_int64_
  commentId: M:Tensor.Backend.ITensorDevice.Create``1(System.Int64)
  fullName: "abstract member Tensor.Backend.ITensorDevice.Create: int64 -> Tensor.Backend.ITensorStorage<'T>"
  nameWithType: "abstract member ITensorDevice.Create: int64 -> ITensorStorage<'T>"
- uid: Tensor.Backend.ITensorDevice.Create*
  name: Create
  href: api/Tensor.Backend.ITensorDevice.Create.html
  commentId: Overload:Tensor.Backend.ITensorDevice.Create*
  fullName: Tensor.Backend.ITensorDevice.Create
  nameWithType: ITensorDevice.Create
- uid: Tensor.Backend.ITensorDevice.Id(unit)
  name: 'abstract property Id: string'
  href: api/Tensor.Backend.ITensorDevice.Id.html#Tensor_Backend_ITensorDevice_Id_unit_
  commentId: P:Tensor.Backend.ITensorDevice.Id
  fullName: 'abstract property Tensor.Backend.ITensorDevice.Id: string'
  nameWithType: 'abstract property ITensorDevice.Id: string'
- uid: Tensor.Backend.ITensorDevice.Id*
  name: Id
  href: api/Tensor.Backend.ITensorDevice.Id.html
  commentId: Overload:Tensor.Backend.ITensorDevice.Id*
  fullName: Tensor.Backend.ITensorDevice.Id
  nameWithType: ITensorDevice.Id
- uid: Tensor.Backend.ITensorDevice.Zeroed(unit)
  name: 'abstract property Zeroed: bool'
  href: api/Tensor.Backend.ITensorDevice.Zeroed.html#Tensor_Backend_ITensorDevice_Zeroed_unit_
  commentId: P:Tensor.Backend.ITensorDevice.Zeroed
  fullName: 'abstract property Tensor.Backend.ITensorDevice.Zeroed: bool'
  nameWithType: 'abstract property ITensorDevice.Zeroed: bool'
- uid: Tensor.Backend.ITensorDevice.Zeroed*
  name: Zeroed
  href: api/Tensor.Backend.ITensorDevice.Zeroed.html
  commentId: Overload:Tensor.Backend.ITensorDevice.Zeroed*
  fullName: Tensor.Backend.ITensorDevice.Zeroed
  nameWithType: ITensorDevice.Zeroed
- uid: Tensor.Backend.ITensorFrontend`1
  name: ITensorFrontend<'T>
  href: api/Tensor.Backend.ITensorFrontend-1.html
  commentId: T:Tensor.Backend.ITensorFrontend`1
  fullName: Tensor.Backend.ITensorFrontend`1
  nameWithType: Tensor.Backend.ITensorFrontend`1
- uid: Tensor.Backend.ITensorFrontend`1.Backend(unit)
  name: "abstract property Backend: ITensorBackend<'T>"
  href: api/Tensor.Backend.ITensorFrontend-1.Backend.html#Tensor_Backend_ITensorFrontend_1_Backend_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Backend
  fullName: "abstract property Tensor.Backend.ITensorFrontend.Backend: Tensor.Backend.ITensorBackend<'T>"
  nameWithType: "abstract property ITensorFrontend.Backend: ITensorBackend<'T>"
- uid: Tensor.Backend.ITensorFrontend`1.Backend*
  name: Backend
  href: api/Tensor.Backend.ITensorFrontend-1.Backend.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Backend*
  fullName: Tensor.Backend.ITensorFrontend.Backend
  nameWithType: ITensorFrontend.Backend
- uid: Tensor.Backend.ITensorFrontend`1.Copy(Tensor.TensorOrder option)
  name: "abstract member Copy: TensorOrder option -> ITensorFrontend<'T>"
  href: api/Tensor.Backend.ITensorFrontend-1.Copy.html#Tensor_Backend_ITensorFrontend_1_Copy_Tensor_TensorOrder_option_
  commentId: M:Tensor.Backend.ITensorFrontend`1.Copy(Microsoft.FSharp.Core.FSharpOption{Tensor.TensorOrder})
  fullName: "abstract member Tensor.Backend.ITensorFrontend.Copy: Tensor.TensorOrder option -> Tensor.Backend.ITensorFrontend<'T>"
  nameWithType: "abstract member ITensorFrontend.Copy: TensorOrder option -> ITensorFrontend<'T>"
- uid: Tensor.Backend.ITensorFrontend`1.Copy*
  name: Copy
  href: api/Tensor.Backend.ITensorFrontend-1.Copy.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Copy*
  fullName: Tensor.Backend.ITensorFrontend.Copy
  nameWithType: ITensorFrontend.Copy
- uid: Tensor.Backend.ITensorFrontend`1.CopyFrom(Tensor.Backend.ITensorFrontend<'T>)
  name: "abstract member CopyFrom: ITensorFrontend<'T> -> unit"
  href: api/Tensor.Backend.ITensorFrontend-1.CopyFrom.html#Tensor_Backend_ITensorFrontend_1_CopyFrom_Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Backend.ITensorFrontend`1.CopyFrom(Tensor.Backend.ITensorFrontend{`0})
  fullName: "abstract member Tensor.Backend.ITensorFrontend.CopyFrom: Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "abstract member ITensorFrontend.CopyFrom: ITensorFrontend<'T> -> unit"
- uid: Tensor.Backend.ITensorFrontend`1.CopyFrom*
  name: CopyFrom
  href: api/Tensor.Backend.ITensorFrontend-1.CopyFrom.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.CopyFrom*
  fullName: Tensor.Backend.ITensorFrontend.CopyFrom
  nameWithType: ITensorFrontend.CopyFrom
- uid: Tensor.Backend.ITensorFrontend`1.Dev(unit)
  name: 'abstract property Dev: ITensorDevice'
  href: api/Tensor.Backend.ITensorFrontend-1.Dev.html#Tensor_Backend_ITensorFrontend_1_Dev_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Dev
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.Dev: Tensor.Backend.ITensorDevice'
  nameWithType: 'abstract property ITensorFrontend.Dev: ITensorDevice'
- uid: Tensor.Backend.ITensorFrontend`1.Dev*
  name: Dev
  href: api/Tensor.Backend.ITensorFrontend-1.Dev.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Dev*
  fullName: Tensor.Backend.ITensorFrontend.Dev
  nameWithType: ITensorFrontend.Dev
- uid: Tensor.Backend.ITensorFrontend`1.Layout(unit)
  name: 'abstract property Layout: TensorLayout'
  href: api/Tensor.Backend.ITensorFrontend-1.Layout.html#Tensor_Backend_ITensorFrontend_1_Layout_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Layout
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.Layout: Tensor.Backend.TensorLayout'
  nameWithType: 'abstract property ITensorFrontend.Layout: TensorLayout'
- uid: Tensor.Backend.ITensorFrontend`1.Layout*
  name: Layout
  href: api/Tensor.Backend.ITensorFrontend-1.Layout.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Layout*
  fullName: Tensor.Backend.ITensorFrontend.Layout
  nameWithType: ITensorFrontend.Layout
- uid: Tensor.Backend.ITensorFrontend`1.NDims(unit)
  name: 'abstract property NDims: int'
  href: api/Tensor.Backend.ITensorFrontend-1.NDims.html#Tensor_Backend_ITensorFrontend_1_NDims_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.NDims
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.NDims: int'
  nameWithType: 'abstract property ITensorFrontend.NDims: int'
- uid: Tensor.Backend.ITensorFrontend`1.NDims*
  name: NDims
  href: api/Tensor.Backend.ITensorFrontend-1.NDims.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.NDims*
  fullName: Tensor.Backend.ITensorFrontend.NDims
  nameWithType: ITensorFrontend.NDims
- uid: Tensor.Backend.ITensorFrontend`1.NElems(unit)
  name: 'abstract property NElems: int64'
  href: api/Tensor.Backend.ITensorFrontend-1.NElems.html#Tensor_Backend_ITensorFrontend_1_NElems_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.NElems
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.NElems: int64'
  nameWithType: 'abstract property ITensorFrontend.NElems: int64'
- uid: Tensor.Backend.ITensorFrontend`1.NElems*
  name: NElems
  href: api/Tensor.Backend.ITensorFrontend-1.NElems.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.NElems*
  fullName: Tensor.Backend.ITensorFrontend.NElems
  nameWithType: ITensorFrontend.NElems
- uid: Tensor.Backend.ITensorFrontend`1.Offset(unit)
  name: 'abstract property Offset: int64'
  href: api/Tensor.Backend.ITensorFrontend-1.Offset.html#Tensor_Backend_ITensorFrontend_1_Offset_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Offset
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.Offset: int64'
  nameWithType: 'abstract property ITensorFrontend.Offset: int64'
- uid: Tensor.Backend.ITensorFrontend`1.Offset*
  name: Offset
  href: api/Tensor.Backend.ITensorFrontend-1.Offset.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Offset*
  fullName: Tensor.Backend.ITensorFrontend.Offset
  nameWithType: ITensorFrontend.Offset
- uid: Tensor.Backend.ITensorFrontend`1.Relayout(Tensor.Backend.TensorLayout)
  name: "abstract member Relayout: TensorLayout -> ITensorFrontend<'T>"
  href: api/Tensor.Backend.ITensorFrontend-1.Relayout.html#Tensor_Backend_ITensorFrontend_1_Relayout_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.ITensorFrontend`1.Relayout(Tensor.Backend.TensorLayout)
  fullName: "abstract member Tensor.Backend.ITensorFrontend.Relayout: Tensor.Backend.TensorLayout -> Tensor.Backend.ITensorFrontend<'T>"
  nameWithType: "abstract member ITensorFrontend.Relayout: TensorLayout -> ITensorFrontend<'T>"
- uid: Tensor.Backend.ITensorFrontend`1.Relayout*
  name: Relayout
  href: api/Tensor.Backend.ITensorFrontend-1.Relayout.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Relayout*
  fullName: Tensor.Backend.ITensorFrontend.Relayout
  nameWithType: ITensorFrontend.Relayout
- uid: Tensor.Backend.ITensorFrontend`1.Shape(unit)
  name: 'abstract property Shape: int64 list'
  href: api/Tensor.Backend.ITensorFrontend-1.Shape.html#Tensor_Backend_ITensorFrontend_1_Shape_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Shape
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.Shape: int64 list'
  nameWithType: 'abstract property ITensorFrontend.Shape: int64 list'
- uid: Tensor.Backend.ITensorFrontend`1.Shape*
  name: Shape
  href: api/Tensor.Backend.ITensorFrontend-1.Shape.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Shape*
  fullName: Tensor.Backend.ITensorFrontend.Shape
  nameWithType: ITensorFrontend.Shape
- uid: Tensor.Backend.ITensorFrontend`1.Storage(unit)
  name: "abstract property Storage: ITensorStorage<'T>"
  href: api/Tensor.Backend.ITensorFrontend-1.Storage.html#Tensor_Backend_ITensorFrontend_1_Storage_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Storage
  fullName: "abstract property Tensor.Backend.ITensorFrontend.Storage: Tensor.Backend.ITensorStorage<'T>"
  nameWithType: "abstract property ITensorFrontend.Storage: ITensorStorage<'T>"
- uid: Tensor.Backend.ITensorFrontend`1.Storage*
  name: Storage
  href: api/Tensor.Backend.ITensorFrontend-1.Storage.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Storage*
  fullName: Tensor.Backend.ITensorFrontend.Storage
  nameWithType: ITensorFrontend.Storage
- uid: Tensor.Backend.ITensorFrontend`1.Stride(unit)
  name: 'abstract property Stride: int64 list'
  href: api/Tensor.Backend.ITensorFrontend-1.Stride.html#Tensor_Backend_ITensorFrontend_1_Stride_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.Stride
  fullName: 'abstract property Tensor.Backend.ITensorFrontend.Stride: int64 list'
  nameWithType: 'abstract property ITensorFrontend.Stride: int64 list'
- uid: Tensor.Backend.ITensorFrontend`1.Stride*
  name: Stride
  href: api/Tensor.Backend.ITensorFrontend-1.Stride.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Stride*
  fullName: Tensor.Backend.ITensorFrontend.Stride
  nameWithType: ITensorFrontend.Stride
- uid: Tensor.Backend.ITensorFrontend`1.T(unit)
  name: "abstract property T: ITensorFrontend<'T>"
  href: api/Tensor.Backend.ITensorFrontend-1.T.html#Tensor_Backend_ITensorFrontend_1_T_unit_
  commentId: P:Tensor.Backend.ITensorFrontend`1.T
  fullName: "abstract property Tensor.Backend.ITensorFrontend.T: Tensor.Backend.ITensorFrontend<'T>"
  nameWithType: "abstract property ITensorFrontend.T: ITensorFrontend<'T>"
- uid: Tensor.Backend.ITensorFrontend`1.T*
  name: T
  href: api/Tensor.Backend.ITensorFrontend-1.T.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.T*
  fullName: Tensor.Backend.ITensorFrontend.T
  nameWithType: ITensorFrontend.T
- uid: Tensor.Backend.ITensorFrontend`1.Transfer(Tensor.Backend.ITensorDevice)
  name: "abstract member Transfer: ITensorDevice -> ITensorFrontend<'T>"
  href: api/Tensor.Backend.ITensorFrontend-1.Transfer.html#Tensor_Backend_ITensorFrontend_1_Transfer_Tensor_Backend_ITensorDevice_
  commentId: M:Tensor.Backend.ITensorFrontend`1.Transfer(Tensor.Backend.ITensorDevice)
  fullName: "abstract member Tensor.Backend.ITensorFrontend.Transfer: Tensor.Backend.ITensorDevice -> Tensor.Backend.ITensorFrontend<'T>"
  nameWithType: "abstract member ITensorFrontend.Transfer: ITensorDevice -> ITensorFrontend<'T>"
- uid: Tensor.Backend.ITensorFrontend`1.Transfer*
  name: Transfer
  href: api/Tensor.Backend.ITensorFrontend-1.Transfer.html
  commentId: Overload:Tensor.Backend.ITensorFrontend`1.Transfer*
  fullName: Tensor.Backend.ITensorFrontend.Transfer
  nameWithType: ITensorFrontend.Transfer
- uid: Tensor.Backend.ITensorStorage
  name: ITensorStorage
  href: api/Tensor.Backend.ITensorStorage.html
  commentId: T:Tensor.Backend.ITensorStorage
  fullName: Tensor.Backend.ITensorStorage
  nameWithType: Tensor.Backend.ITensorStorage
- uid: Tensor.Backend.ITensorStorage.Dev(unit)
  name: 'abstract property Dev: ITensorDevice'
  href: api/Tensor.Backend.ITensorStorage.Dev.html#Tensor_Backend_ITensorStorage_Dev_unit_
  commentId: P:Tensor.Backend.ITensorStorage.Dev
  fullName: 'abstract property Tensor.Backend.ITensorStorage.Dev: Tensor.Backend.ITensorDevice'
  nameWithType: 'abstract property ITensorStorage.Dev: ITensorDevice'
- uid: Tensor.Backend.ITensorStorage.Dev*
  name: Dev
  href: api/Tensor.Backend.ITensorStorage.Dev.html
  commentId: Overload:Tensor.Backend.ITensorStorage.Dev*
  fullName: Tensor.Backend.ITensorStorage.Dev
  nameWithType: ITensorStorage.Dev
- uid: Tensor.Backend.ITensorStorage`1
  name: ITensorStorage<'T>
  href: api/Tensor.Backend.ITensorStorage-1.html
  commentId: T:Tensor.Backend.ITensorStorage`1
  fullName: Tensor.Backend.ITensorStorage`1
  nameWithType: Tensor.Backend.ITensorStorage`1
- uid: Tensor.Backend.ITensorStorage`1.Backend(Tensor.Backend.TensorLayout)
  name: "abstract member Backend: TensorLayout -> ITensorBackend<'T>"
  href: api/Tensor.Backend.ITensorStorage-1.Backend.html#Tensor_Backend_ITensorStorage_1_Backend_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.ITensorStorage`1.Backend(Tensor.Backend.TensorLayout)
  fullName: "abstract member Tensor.Backend.ITensorStorage.Backend: Tensor.Backend.TensorLayout -> Tensor.Backend.ITensorBackend<'T>"
  nameWithType: "abstract member ITensorStorage.Backend: TensorLayout -> ITensorBackend<'T>"
- uid: Tensor.Backend.ITensorStorage`1.Backend*
  name: Backend
  href: api/Tensor.Backend.ITensorStorage-1.Backend.html
  commentId: Overload:Tensor.Backend.ITensorStorage`1.Backend*
  fullName: Tensor.Backend.ITensorStorage.Backend
  nameWithType: ITensorStorage.Backend
- uid: Tensor.Backend.TensorLayout
  name: TensorLayout (rec)
  href: api/Tensor.Backend.TensorLayout.html
  commentId: T:Tensor.Backend.TensorLayout
  fullName: Tensor.Backend.TensorLayout
  nameWithType: Tensor.Backend.TensorLayout
- uid: Tensor.Backend.TensorLayout.NDims(unit)
  name: 'property NDims: int'
  href: api/Tensor.Backend.TensorLayout.NDims.html#Tensor_Backend_TensorLayout_NDims_unit_
  commentId: P:Tensor.Backend.TensorLayout.NDims
  fullName: 'property Tensor.Backend.TensorLayout.NDims: int'
  nameWithType: 'property TensorLayout.NDims: int'
- uid: Tensor.Backend.TensorLayout.NDims*
  name: NDims
  href: api/Tensor.Backend.TensorLayout.NDims.html
  commentId: Overload:Tensor.Backend.TensorLayout.NDims*
  fullName: Tensor.Backend.TensorLayout.NDims
  nameWithType: TensorLayout.NDims
- uid: Tensor.Backend.TensorLayout.NElems(unit)
  name: 'property NElems: int64'
  href: api/Tensor.Backend.TensorLayout.NElems.html#Tensor_Backend_TensorLayout_NElems_unit_
  commentId: P:Tensor.Backend.TensorLayout.NElems
  fullName: 'property Tensor.Backend.TensorLayout.NElems: int64'
  nameWithType: 'property TensorLayout.NElems: int64'
- uid: Tensor.Backend.TensorLayout.NElems*
  name: NElems
  href: api/Tensor.Backend.TensorLayout.NElems.html
  commentId: Overload:Tensor.Backend.TensorLayout.NElems*
  fullName: Tensor.Backend.TensorLayout.NElems
  nameWithType: TensorLayout.NElems
- uid: Tensor.Backend.TensorLayout.Offset
  name: 'val Offset: int64'
  href: api/Tensor.Backend.TensorLayout.Offset.html
  commentId: P:Tensor.Backend.TensorLayout.Offset
  fullName: 'val Tensor.Backend.TensorLayout.Offset: int64'
  nameWithType: 'val TensorLayout.Offset: int64'
- uid: Tensor.Backend.TensorLayout.Shape
  name: 'val Shape: int64 list'
  href: api/Tensor.Backend.TensorLayout.Shape.html
  commentId: P:Tensor.Backend.TensorLayout.Shape
  fullName: 'val Tensor.Backend.TensorLayout.Shape: int64 list'
  nameWithType: 'val TensorLayout.Shape: int64 list'
- uid: Tensor.Backend.TensorLayout.Stride
  name: 'val Stride: int64 list'
  href: api/Tensor.Backend.TensorLayout.Stride.html
  commentId: P:Tensor.Backend.TensorLayout.Stride
  fullName: 'val Tensor.Backend.TensorLayout.Stride: int64 list'
  nameWithType: 'val TensorLayout.Stride: int64 list'
- uid: Tensor.Backend.TensorLayoutModule
  name: TensorLayout (mod)
  href: api/Tensor.Backend.TensorLayoutModule.html
  commentId: T:Tensor.Backend.TensorLayoutModule
  fullName: Tensor.Backend.TensorLayoutModule
  nameWithType: Tensor.Backend.TensorLayoutModule
- uid: Tensor.Backend.TensorLayoutModule.addr(int64 list -> Tensor.Backend.TensorLayout)
  name: 'val addr: int64 list -> TensorLayout -> int64'
  href: api/Tensor.Backend.TensorLayoutModule.addr.html#Tensor_Backend_TensorLayoutModule_addr_int64_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.addr(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.addr: int64 list -> Tensor.Backend.TensorLayout -> int64'
  nameWithType: 'val TensorLayout.addr: int64 list -> TensorLayout -> int64'
- uid: Tensor.Backend.TensorLayoutModule.addr*
  name: addr
  href: api/Tensor.Backend.TensorLayoutModule.addr.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.addr*
  fullName: Tensor.Backend.TensorLayoutModule.addr
  nameWithType: TensorLayout.addr
- uid: Tensor.Backend.TensorLayoutModule.allIdx(Tensor.Backend.TensorLayout)
  name: 'val allIdx: TensorLayout -> seq<int64 list>'
  href: api/Tensor.Backend.TensorLayoutModule.allIdx.html#Tensor_Backend_TensorLayoutModule_allIdx_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.allIdx(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.allIdx: Tensor.Backend.TensorLayout -> seq<int64 list>'
  nameWithType: 'val TensorLayout.allIdx: TensorLayout -> seq<int64 list>'
- uid: Tensor.Backend.TensorLayoutModule.allIdx*
  name: allIdx
  href: api/Tensor.Backend.TensorLayoutModule.allIdx.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.allIdx*
  fullName: Tensor.Backend.TensorLayoutModule.allIdx
  nameWithType: TensorLayout.allIdx
- uid: Tensor.Backend.TensorLayoutModule.allIdxOfDim(int -> Tensor.Backend.TensorLayout)
  name: 'val allIdxOfDim: int -> TensorLayout -> seq<int64>'
  href: api/Tensor.Backend.TensorLayoutModule.allIdxOfDim.html#Tensor_Backend_TensorLayoutModule_allIdxOfDim_int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.allIdxOfDim(System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.allIdxOfDim: int -> Tensor.Backend.TensorLayout -> seq<int64>'
  nameWithType: 'val TensorLayout.allIdxOfDim: int -> TensorLayout -> seq<int64>'
- uid: Tensor.Backend.TensorLayoutModule.allIdxOfDim*
  name: allIdxOfDim
  href: api/Tensor.Backend.TensorLayoutModule.allIdxOfDim.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.allIdxOfDim*
  fullName: Tensor.Backend.TensorLayoutModule.allIdxOfDim
  nameWithType: TensorLayout.allIdxOfDim
- uid: Tensor.Backend.TensorLayoutModule.allIdxOfShape(int64 list)
  name: 'val allIdxOfShape: int64 list -> seq<int64 list>'
  href: api/Tensor.Backend.TensorLayoutModule.allIdxOfShape.html#Tensor_Backend_TensorLayoutModule_allIdxOfShape_int64_list_
  commentId: M:Tensor.Backend.allIdxOfShape(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.allIdxOfShape: int64 list -> seq<int64 list>'
  nameWithType: 'val TensorLayout.allIdxOfShape: int64 list -> seq<int64 list>'
- uid: Tensor.Backend.TensorLayoutModule.allIdxOfShape*
  name: allIdxOfShape
  href: api/Tensor.Backend.TensorLayoutModule.allIdxOfShape.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.allIdxOfShape*
  fullName: Tensor.Backend.TensorLayoutModule.allIdxOfShape
  nameWithType: TensorLayout.allIdxOfShape
- uid: Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce(int -> Tensor.Backend.TensorLayout)
  name: 'val allSrcRngsAndTrgtIdxsForAxisReduce: int -> TensorLayout -> seq<Rng list * int64 list>'
  href: api/Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce.html#Tensor_Backend_TensorLayoutModule_allSrcRngsAndTrgtIdxsForAxisReduce_int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.allSrcRngsAndTrgtIdxsForAxisReduce(System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce: int -> Tensor.Backend.TensorLayout -> seq<Tensor.Rng list * int64 list>'
  nameWithType: 'val TensorLayout.allSrcRngsAndTrgtIdxsForAxisReduce: int -> TensorLayout -> seq<Rng list * int64 list>'
- uid: Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce*
  name: allSrcRngsAndTrgtIdxsForAxisReduce
  href: api/Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce*
  fullName: Tensor.Backend.TensorLayoutModule.allSrcRngsAndTrgtIdxsForAxisReduce
  nameWithType: TensorLayout.allSrcRngsAndTrgtIdxsForAxisReduce
- uid: Tensor.Backend.TensorLayoutModule.broadcastDim(int -> int64 -> Tensor.Backend.TensorLayout)
  name: 'val broadcastDim: int -> int64 -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.broadcastDim.html#Tensor_Backend_TensorLayoutModule_broadcastDim_int____int64____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.broadcastDim(System.Int32,System.Int64,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.broadcastDim: int -> int64 -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.broadcastDim: int -> int64 -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.broadcastDim*
  name: broadcastDim
  href: api/Tensor.Backend.TensorLayoutModule.broadcastDim.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.broadcastDim*
  fullName: Tensor.Backend.TensorLayoutModule.broadcastDim
  nameWithType: TensorLayout.broadcastDim
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSame(Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout)
  name: 'val broadcastToSame: TensorLayout -> TensorLayout -> TensorLayout * TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSame.html#Tensor_Backend_TensorLayoutModule_broadcastToSame_Tensor_Backend_TensorLayout____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.broadcastToSame(Tensor.Backend.TensorLayout,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.broadcastToSame: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout * Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.broadcastToSame: TensorLayout -> TensorLayout -> TensorLayout * TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSame*
  name: broadcastToSame
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSame.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.broadcastToSame*
  fullName: Tensor.Backend.TensorLayoutModule.broadcastToSame
  nameWithType: TensorLayout.broadcastToSame
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSameInDims(seq<int> -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout)
  name: 'val broadcastToSameInDims: seq<int> -> TensorLayout -> TensorLayout -> TensorLayout * TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSameInDims.html#Tensor_Backend_TensorLayoutModule_broadcastToSameInDims_seq_int_____Tensor_Backend_TensorLayout____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.broadcastToSameInDims(System.Collections.Generic.IEnumerable{System.Int32},Tensor.Backend.TensorLayout,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.broadcastToSameInDims: seq<int> -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout * Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.broadcastToSameInDims: seq<int> -> TensorLayout -> TensorLayout -> TensorLayout * TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSameInDims*
  name: broadcastToSameInDims
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSameInDims.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.broadcastToSameInDims*
  fullName: Tensor.Backend.TensorLayoutModule.broadcastToSameInDims
  nameWithType: TensorLayout.broadcastToSameInDims
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany(seq<int> -> Tensor.Backend.TensorLayout list)
  name: 'val broadcastToSameInDimsMany: seq<int> -> TensorLayout list -> TensorLayout list'
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany.html#Tensor_Backend_TensorLayoutModule_broadcastToSameInDimsMany_seq_int_____Tensor_Backend_TensorLayout_list_
  commentId: M:Tensor.Backend.broadcastToSameInDimsMany(System.Collections.Generic.IEnumerable{System.Int32},Microsoft.FSharp.Collections.FSharpList{Tensor.Backend.TensorLayout})
  fullName: 'val Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany: seq<int> -> Tensor.Backend.TensorLayout list -> Tensor.Backend.TensorLayout list'
  nameWithType: 'val TensorLayout.broadcastToSameInDimsMany: seq<int> -> TensorLayout list -> TensorLayout list'
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany*
  name: broadcastToSameInDimsMany
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany*
  fullName: Tensor.Backend.TensorLayoutModule.broadcastToSameInDimsMany
  nameWithType: TensorLayout.broadcastToSameInDimsMany
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSameMany(Tensor.Backend.TensorLayout list)
  name: 'val broadcastToSameMany: TensorLayout list -> TensorLayout list'
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSameMany.html#Tensor_Backend_TensorLayoutModule_broadcastToSameMany_Tensor_Backend_TensorLayout_list_
  commentId: M:Tensor.Backend.broadcastToSameMany(Microsoft.FSharp.Collections.FSharpList{Tensor.Backend.TensorLayout})
  fullName: 'val Tensor.Backend.TensorLayoutModule.broadcastToSameMany: Tensor.Backend.TensorLayout list -> Tensor.Backend.TensorLayout list'
  nameWithType: 'val TensorLayout.broadcastToSameMany: TensorLayout list -> TensorLayout list'
- uid: Tensor.Backend.TensorLayoutModule.broadcastToSameMany*
  name: broadcastToSameMany
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToSameMany.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.broadcastToSameMany*
  fullName: Tensor.Backend.TensorLayoutModule.broadcastToSameMany
  nameWithType: TensorLayout.broadcastToSameMany
- uid: Tensor.Backend.TensorLayoutModule.broadcastToShape(int64 list -> Tensor.Backend.TensorLayout)
  name: 'val broadcastToShape: int64 list -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToShape.html#Tensor_Backend_TensorLayoutModule_broadcastToShape_int64_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.broadcastToShape(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.broadcastToShape: int64 list -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.broadcastToShape: int64 list -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.broadcastToShape*
  name: broadcastToShape
  href: api/Tensor.Backend.TensorLayoutModule.broadcastToShape.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.broadcastToShape*
  fullName: Tensor.Backend.TensorLayoutModule.broadcastToShape
  nameWithType: TensorLayout.broadcastToShape
- uid: Tensor.Backend.TensorLayoutModule.canReshape(int64 list -> Tensor.Backend.TensorLayout)
  name: 'val canReshape: int64 list -> TensorLayout -> bool'
  href: api/Tensor.Backend.TensorLayoutModule.canReshape.html#Tensor_Backend_TensorLayoutModule_canReshape_int64_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.canReshape(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.canReshape: int64 list -> Tensor.Backend.TensorLayout -> bool'
  nameWithType: 'val TensorLayout.canReshape: int64 list -> TensorLayout -> bool'
- uid: Tensor.Backend.TensorLayoutModule.canReshape*
  name: canReshape
  href: api/Tensor.Backend.TensorLayoutModule.canReshape.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.canReshape*
  fullName: Tensor.Backend.TensorLayoutModule.canReshape
  nameWithType: TensorLayout.canReshape
- uid: Tensor.Backend.TensorLayoutModule.check(Tensor.Backend.TensorLayout)
  name: 'val check: TensorLayout -> unit'
  href: api/Tensor.Backend.TensorLayoutModule.check.html#Tensor_Backend_TensorLayoutModule_check_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.check(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.check: Tensor.Backend.TensorLayout -> unit'
  nameWithType: 'val TensorLayout.check: TensorLayout -> unit'
- uid: Tensor.Backend.TensorLayoutModule.check*
  name: check
  href: api/Tensor.Backend.TensorLayoutModule.check.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.check*
  fullName: Tensor.Backend.TensorLayoutModule.check
  nameWithType: TensorLayout.check
- uid: Tensor.Backend.TensorLayoutModule.checkAxis(int -> Tensor.Backend.TensorLayout)
  name: 'val checkAxis: int -> TensorLayout -> unit'
  href: api/Tensor.Backend.TensorLayoutModule.checkAxis.html#Tensor_Backend_TensorLayoutModule_checkAxis_int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.checkAxis(System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.checkAxis: int -> Tensor.Backend.TensorLayout -> unit'
  nameWithType: 'val TensorLayout.checkAxis: int -> TensorLayout -> unit'
- uid: Tensor.Backend.TensorLayoutModule.checkAxis*
  name: checkAxis
  href: api/Tensor.Backend.TensorLayoutModule.checkAxis.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.checkAxis*
  fullName: Tensor.Backend.TensorLayoutModule.checkAxis
  nameWithType: TensorLayout.checkAxis
- uid: Tensor.Backend.TensorLayoutModule.checkIndex(int64 list -> int64 list)
  name: 'val checkIndex: int64 list -> int64 list -> unit'
  href: api/Tensor.Backend.TensorLayoutModule.checkIndex.html#Tensor_Backend_TensorLayoutModule_checkIndex_int64_list____int64_list_
  commentId: M:Tensor.Backend.checkIndex(Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.checkIndex: int64 list -> int64 list -> unit'
  nameWithType: 'val TensorLayout.checkIndex: int64 list -> int64 list -> unit'
- uid: Tensor.Backend.TensorLayoutModule.checkIndex*
  name: checkIndex
  href: api/Tensor.Backend.TensorLayoutModule.checkIndex.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.checkIndex*
  fullName: Tensor.Backend.TensorLayoutModule.checkIndex
  nameWithType: TensorLayout.checkIndex
- uid: Tensor.Backend.TensorLayoutModule.cStride(int64 list)
  name: 'val cStride: int64 list -> int64 list'
  href: api/Tensor.Backend.TensorLayoutModule.cStride.html#Tensor_Backend_TensorLayoutModule_cStride_int64_list_
  commentId: M:Tensor.Backend.cStride(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.cStride: int64 list -> int64 list'
  nameWithType: 'val TensorLayout.cStride: int64 list -> int64 list'
- uid: Tensor.Backend.TensorLayoutModule.cStride*
  name: cStride
  href: api/Tensor.Backend.TensorLayoutModule.cStride.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.cStride*
  fullName: Tensor.Backend.TensorLayoutModule.cStride
  nameWithType: TensorLayout.cStride
- uid: Tensor.Backend.TensorLayoutModule.cutLeft(Tensor.Backend.TensorLayout)
  name: 'val cutLeft: TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.cutLeft.html#Tensor_Backend_TensorLayoutModule_cutLeft_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.cutLeft(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.cutLeft: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.cutLeft: TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.cutLeft*
  name: cutLeft
  href: api/Tensor.Backend.TensorLayoutModule.cutLeft.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.cutLeft*
  fullName: Tensor.Backend.TensorLayoutModule.cutLeft
  nameWithType: TensorLayout.cutLeft
- uid: Tensor.Backend.TensorLayoutModule.cutRight(Tensor.Backend.TensorLayout)
  name: 'val cutRight: TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.cutRight.html#Tensor_Backend_TensorLayoutModule_cutRight_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.cutRight(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.cutRight: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.cutRight: TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.cutRight*
  name: cutRight
  href: api/Tensor.Backend.TensorLayoutModule.cutRight.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.cutRight*
  fullName: Tensor.Backend.TensorLayoutModule.cutRight
  nameWithType: TensorLayout.cutRight
- uid: Tensor.Backend.TensorLayoutModule.diagAxis(int -> int -> Tensor.Backend.TensorLayout)
  name: 'val diagAxis: int -> int -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.diagAxis.html#Tensor_Backend_TensorLayoutModule_diagAxis_int____int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.diagAxis(System.Int32,System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.diagAxis: int -> int -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.diagAxis: int -> int -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.diagAxis*
  name: diagAxis
  href: api/Tensor.Backend.TensorLayoutModule.diagAxis.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.diagAxis*
  fullName: Tensor.Backend.TensorLayoutModule.diagAxis
  nameWithType: TensorLayout.diagAxis
- uid: Tensor.Backend.TensorLayoutModule.emptyVector()
  name: val emptyVector
  href: api/Tensor.Backend.TensorLayoutModule.emptyVector%28%29.html
  commentId: P:Tensor.Backend.emptyVector
  fullName: 'val Tensor.Backend.TensorLayoutModule.emptyVector: Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.emptyVector: TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.fStride(int64 list)
  name: 'val fStride: int64 list -> int64 list'
  href: api/Tensor.Backend.TensorLayoutModule.fStride.html#Tensor_Backend_TensorLayoutModule_fStride_int64_list_
  commentId: M:Tensor.Backend.fStride(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.fStride: int64 list -> int64 list'
  nameWithType: 'val TensorLayout.fStride: int64 list -> int64 list'
- uid: Tensor.Backend.TensorLayoutModule.fStride*
  name: fStride
  href: api/Tensor.Backend.TensorLayoutModule.fStride.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.fStride*
  fullName: Tensor.Backend.TensorLayoutModule.fStride
  nameWithType: TensorLayout.fStride
- uid: Tensor.Backend.TensorLayoutModule.hasContiguousMemory(Tensor.Backend.TensorLayout)
  name: 'val hasContiguousMemory: TensorLayout -> bool'
  href: api/Tensor.Backend.TensorLayoutModule.hasContiguousMemory.html#Tensor_Backend_TensorLayoutModule_hasContiguousMemory_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.hasContiguousMemory(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.hasContiguousMemory: Tensor.Backend.TensorLayout -> bool'
  nameWithType: 'val TensorLayout.hasContiguousMemory: TensorLayout -> bool'
- uid: Tensor.Backend.TensorLayoutModule.hasContiguousMemory*
  name: hasContiguousMemory
  href: api/Tensor.Backend.TensorLayoutModule.hasContiguousMemory.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.hasContiguousMemory*
  fullName: Tensor.Backend.TensorLayoutModule.hasContiguousMemory
  nameWithType: TensorLayout.hasContiguousMemory
- uid: Tensor.Backend.TensorLayoutModule.idxToLinear(Tensor.Backend.TensorLayout -> int64 list)
  name: 'val idxToLinear: TensorLayout -> int64 list -> int64'
  href: api/Tensor.Backend.TensorLayoutModule.idxToLinear.html#Tensor_Backend_TensorLayoutModule_idxToLinear_Tensor_Backend_TensorLayout____int64_list_
  commentId: M:Tensor.Backend.idxToLinear(Tensor.Backend.TensorLayout,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.idxToLinear: Tensor.Backend.TensorLayout -> int64 list -> int64'
  nameWithType: 'val TensorLayout.idxToLinear: TensorLayout -> int64 list -> int64'
- uid: Tensor.Backend.TensorLayoutModule.idxToLinear*
  name: idxToLinear
  href: api/Tensor.Backend.TensorLayoutModule.idxToLinear.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.idxToLinear*
  fullName: Tensor.Backend.TensorLayoutModule.idxToLinear
  nameWithType: TensorLayout.idxToLinear
- uid: Tensor.Backend.TensorLayoutModule.insertAxis(int -> Tensor.Backend.TensorLayout)
  name: 'val insertAxis: int -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.insertAxis.html#Tensor_Backend_TensorLayoutModule_insertAxis_int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.insertAxis(System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.insertAxis: int -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.insertAxis: int -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.insertAxis*
  name: insertAxis
  href: api/Tensor.Backend.TensorLayoutModule.insertAxis.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.insertAxis*
  fullName: Tensor.Backend.TensorLayoutModule.insertAxis
  nameWithType: TensorLayout.insertAxis
- uid: Tensor.Backend.TensorLayoutModule.isBroadcasted(Tensor.Backend.TensorLayout)
  name: 'val isBroadcasted: TensorLayout -> bool'
  href: api/Tensor.Backend.TensorLayoutModule.isBroadcasted.html#Tensor_Backend_TensorLayoutModule_isBroadcasted_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.isBroadcasted(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.isBroadcasted: Tensor.Backend.TensorLayout -> bool'
  nameWithType: 'val TensorLayout.isBroadcasted: TensorLayout -> bool'
- uid: Tensor.Backend.TensorLayoutModule.isBroadcasted*
  name: isBroadcasted
  href: api/Tensor.Backend.TensorLayoutModule.isBroadcasted.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.isBroadcasted*
  fullName: Tensor.Backend.TensorLayoutModule.isBroadcasted
  nameWithType: TensorLayout.isBroadcasted
- uid: Tensor.Backend.TensorLayoutModule.isC(Tensor.Backend.TensorLayout)
  name: 'val isC: TensorLayout -> bool'
  href: api/Tensor.Backend.TensorLayoutModule.isC.html#Tensor_Backend_TensorLayoutModule_isC_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.isC(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.isC: Tensor.Backend.TensorLayout -> bool'
  nameWithType: 'val TensorLayout.isC: TensorLayout -> bool'
- uid: Tensor.Backend.TensorLayoutModule.isC*
  name: isC
  href: api/Tensor.Backend.TensorLayoutModule.isC.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.isC*
  fullName: Tensor.Backend.TensorLayoutModule.isC
  nameWithType: TensorLayout.isC
- uid: Tensor.Backend.TensorLayoutModule.isF(Tensor.Backend.TensorLayout)
  name: 'val isF: TensorLayout -> bool'
  href: api/Tensor.Backend.TensorLayoutModule.isF.html#Tensor_Backend_TensorLayoutModule_isF_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.isF(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.isF: Tensor.Backend.TensorLayout -> bool'
  nameWithType: 'val TensorLayout.isF: TensorLayout -> bool'
- uid: Tensor.Backend.TensorLayoutModule.isF*
  name: isF
  href: api/Tensor.Backend.TensorLayoutModule.isF.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.isF*
  fullName: Tensor.Backend.TensorLayoutModule.isF
  nameWithType: TensorLayout.isF
- uid: Tensor.Backend.TensorLayoutModule.linearToIdx(Tensor.Backend.TensorLayout -> int64)
  name: 'val linearToIdx: TensorLayout -> int64 -> int64 list'
  href: api/Tensor.Backend.TensorLayoutModule.linearToIdx.html#Tensor_Backend_TensorLayoutModule_linearToIdx_Tensor_Backend_TensorLayout____int64_
  commentId: M:Tensor.Backend.linearToIdx(Tensor.Backend.TensorLayout,System.Int64)
  fullName: 'val Tensor.Backend.TensorLayoutModule.linearToIdx: Tensor.Backend.TensorLayout -> int64 -> int64 list'
  nameWithType: 'val TensorLayout.linearToIdx: TensorLayout -> int64 -> int64 list'
- uid: Tensor.Backend.TensorLayoutModule.linearToIdx*
  name: linearToIdx
  href: api/Tensor.Backend.TensorLayoutModule.linearToIdx.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.linearToIdx*
  fullName: Tensor.Backend.TensorLayoutModule.linearToIdx
  nameWithType: TensorLayout.linearToIdx
- uid: Tensor.Backend.TensorLayoutModule.nDims(Tensor.Backend.TensorLayout)
  name: 'val nDims: TensorLayout -> int'
  href: api/Tensor.Backend.TensorLayoutModule.nDims.html#Tensor_Backend_TensorLayoutModule_nDims_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.nDims(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.nDims: Tensor.Backend.TensorLayout -> int'
  nameWithType: 'val TensorLayout.nDims: TensorLayout -> int'
- uid: Tensor.Backend.TensorLayoutModule.nDims*
  name: nDims
  href: api/Tensor.Backend.TensorLayoutModule.nDims.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.nDims*
  fullName: Tensor.Backend.TensorLayoutModule.nDims
  nameWithType: TensorLayout.nDims
- uid: Tensor.Backend.TensorLayoutModule.nElems(Tensor.Backend.TensorLayout)
  name: 'val nElems: TensorLayout -> int64'
  href: api/Tensor.Backend.TensorLayoutModule.nElems.html#Tensor_Backend_TensorLayoutModule_nElems_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.nElems(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.nElems: Tensor.Backend.TensorLayout -> int64'
  nameWithType: 'val TensorLayout.nElems: TensorLayout -> int64'
- uid: Tensor.Backend.TensorLayoutModule.nElems*
  name: nElems
  href: api/Tensor.Backend.TensorLayoutModule.nElems.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.nElems*
  fullName: Tensor.Backend.TensorLayoutModule.nElems
  nameWithType: TensorLayout.nElems
- uid: Tensor.Backend.TensorLayoutModule.newC(int64 list)
  name: 'val newC: int64 list -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.newC.html#Tensor_Backend_TensorLayoutModule_newC_int64_list_
  commentId: M:Tensor.Backend.newC(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.newC: int64 list -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.newC: int64 list -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.newC*
  name: newC
  href: api/Tensor.Backend.TensorLayoutModule.newC.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.newC*
  fullName: Tensor.Backend.TensorLayoutModule.newC
  nameWithType: TensorLayout.newC
- uid: Tensor.Backend.TensorLayoutModule.newF(int64 list)
  name: 'val newF: int64 list -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.newF.html#Tensor_Backend_TensorLayoutModule_newF_int64_list_
  commentId: M:Tensor.Backend.newF(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.newF: int64 list -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.newF: int64 list -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.newF*
  name: newF
  href: api/Tensor.Backend.TensorLayoutModule.newF.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.newF*
  fullName: Tensor.Backend.TensorLayoutModule.newF
  nameWithType: TensorLayout.newF
- uid: Tensor.Backend.TensorLayoutModule.newOrdered(int64 list -> int list)
  name: 'val newOrdered: int64 list -> int list -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.newOrdered.html#Tensor_Backend_TensorLayoutModule_newOrdered_int64_list____int_list_
  commentId: M:Tensor.Backend.newOrdered(Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Collections.FSharpList{System.Int32})
  fullName: 'val Tensor.Backend.TensorLayoutModule.newOrdered: int64 list -> int list -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.newOrdered: int64 list -> int list -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.newOrdered*
  name: newOrdered
  href: api/Tensor.Backend.TensorLayoutModule.newOrdered.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.newOrdered*
  fullName: Tensor.Backend.TensorLayoutModule.newOrdered
  nameWithType: TensorLayout.newOrdered
- uid: Tensor.Backend.TensorLayoutModule.offset(Tensor.Backend.TensorLayout)
  name: 'val offset: TensorLayout -> int64'
  href: api/Tensor.Backend.TensorLayoutModule.offset.html#Tensor_Backend_TensorLayoutModule_offset_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.offset(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.offset: Tensor.Backend.TensorLayout -> int64'
  nameWithType: 'val TensorLayout.offset: TensorLayout -> int64'
- uid: Tensor.Backend.TensorLayoutModule.offset*
  name: offset
  href: api/Tensor.Backend.TensorLayoutModule.offset.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.offset*
  fullName: Tensor.Backend.TensorLayoutModule.offset
  nameWithType: TensorLayout.offset
- uid: Tensor.Backend.TensorLayoutModule.orderedStride(int64 list -> int list)
  name: 'val orderedStride: int64 list -> int list -> int64 list'
  href: api/Tensor.Backend.TensorLayoutModule.orderedStride.html#Tensor_Backend_TensorLayoutModule_orderedStride_int64_list____int_list_
  commentId: M:Tensor.Backend.orderedStride(Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Collections.FSharpList{System.Int32})
  fullName: 'val Tensor.Backend.TensorLayoutModule.orderedStride: int64 list -> int list -> int64 list'
  nameWithType: 'val TensorLayout.orderedStride: int64 list -> int list -> int64 list'
- uid: Tensor.Backend.TensorLayoutModule.orderedStride*
  name: orderedStride
  href: api/Tensor.Backend.TensorLayoutModule.orderedStride.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.orderedStride*
  fullName: Tensor.Backend.TensorLayoutModule.orderedStride
  nameWithType: TensorLayout.orderedStride
- uid: Tensor.Backend.TensorLayoutModule.padLeft(Tensor.Backend.TensorLayout)
  name: 'val padLeft: TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.padLeft.html#Tensor_Backend_TensorLayoutModule_padLeft_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.padLeft(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.padLeft: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.padLeft: TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.padLeft*
  name: padLeft
  href: api/Tensor.Backend.TensorLayoutModule.padLeft.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.padLeft*
  fullName: Tensor.Backend.TensorLayoutModule.padLeft
  nameWithType: TensorLayout.padLeft
- uid: Tensor.Backend.TensorLayoutModule.padRight(Tensor.Backend.TensorLayout)
  name: 'val padRight: TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.padRight.html#Tensor_Backend_TensorLayoutModule_padRight_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.padRight(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.padRight: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.padRight: TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.padRight*
  name: padRight
  href: api/Tensor.Backend.TensorLayoutModule.padRight.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.padRight*
  fullName: Tensor.Backend.TensorLayoutModule.padRight
  nameWithType: TensorLayout.padRight
- uid: Tensor.Backend.TensorLayoutModule.padToSame(Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout)
  name: 'val padToSame: TensorLayout -> TensorLayout -> TensorLayout * TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.padToSame.html#Tensor_Backend_TensorLayoutModule_padToSame_Tensor_Backend_TensorLayout____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.padToSame(Tensor.Backend.TensorLayout,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.padToSame: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout * Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.padToSame: TensorLayout -> TensorLayout -> TensorLayout * TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.padToSame*
  name: padToSame
  href: api/Tensor.Backend.TensorLayoutModule.padToSame.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.padToSame*
  fullName: Tensor.Backend.TensorLayoutModule.padToSame
  nameWithType: TensorLayout.padToSame
- uid: Tensor.Backend.TensorLayoutModule.padToSameMany(Tensor.Backend.TensorLayout list)
  name: 'val padToSameMany: TensorLayout list -> TensorLayout list'
  href: api/Tensor.Backend.TensorLayoutModule.padToSameMany.html#Tensor_Backend_TensorLayoutModule_padToSameMany_Tensor_Backend_TensorLayout_list_
  commentId: M:Tensor.Backend.padToSameMany(Microsoft.FSharp.Collections.FSharpList{Tensor.Backend.TensorLayout})
  fullName: 'val Tensor.Backend.TensorLayoutModule.padToSameMany: Tensor.Backend.TensorLayout list -> Tensor.Backend.TensorLayout list'
  nameWithType: 'val TensorLayout.padToSameMany: TensorLayout list -> TensorLayout list'
- uid: Tensor.Backend.TensorLayoutModule.padToSameMany*
  name: padToSameMany
  href: api/Tensor.Backend.TensorLayoutModule.padToSameMany.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.padToSameMany*
  fullName: Tensor.Backend.TensorLayoutModule.padToSameMany
  nameWithType: TensorLayout.padToSameMany
- uid: Tensor.Backend.TensorLayoutModule.permuteAxes(int list -> Tensor.Backend.TensorLayout)
  name: 'val permuteAxes: int list -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.permuteAxes.html#Tensor_Backend_TensorLayoutModule_permuteAxes_int_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.permuteAxes(Microsoft.FSharp.Collections.FSharpList{System.Int32},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.permuteAxes: int list -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.permuteAxes: int list -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.permuteAxes*
  name: permuteAxes
  href: api/Tensor.Backend.TensorLayoutModule.permuteAxes.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.permuteAxes*
  fullName: Tensor.Backend.TensorLayoutModule.permuteAxes
  nameWithType: TensorLayout.permuteAxes
- uid: Tensor.Backend.TensorLayoutModule.reshape(int64 list -> Tensor.Backend.TensorLayout)
  name: 'val reshape: int64 list -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.reshape.html#Tensor_Backend_TensorLayoutModule_reshape_int64_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.reshape(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.reshape: int64 list -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.reshape: int64 list -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.reshape*
  name: reshape
  href: api/Tensor.Backend.TensorLayoutModule.reshape.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.reshape*
  fullName: Tensor.Backend.TensorLayoutModule.reshape
  nameWithType: TensorLayout.reshape
- uid: Tensor.Backend.TensorLayoutModule.reverseAxis(int -> Tensor.Backend.TensorLayout)
  name: 'val reverseAxis: int -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.reverseAxis.html#Tensor_Backend_TensorLayoutModule_reverseAxis_int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.reverseAxis(System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.reverseAxis: int -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.reverseAxis: int -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.reverseAxis*
  name: reverseAxis
  href: api/Tensor.Backend.TensorLayoutModule.reverseAxis.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.reverseAxis*
  fullName: Tensor.Backend.TensorLayoutModule.reverseAxis
  nameWithType: TensorLayout.reverseAxis
- uid: Tensor.Backend.TensorLayoutModule.shape(Tensor.Backend.TensorLayout)
  name: 'val shape: TensorLayout -> int64 list'
  href: api/Tensor.Backend.TensorLayoutModule.shape.html#Tensor_Backend_TensorLayoutModule_shape_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.shape(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.shape: Tensor.Backend.TensorLayout -> int64 list'
  nameWithType: 'val TensorLayout.shape: TensorLayout -> int64 list'
- uid: Tensor.Backend.TensorLayoutModule.shape*
  name: shape
  href: api/Tensor.Backend.TensorLayoutModule.shape.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.shape*
  fullName: Tensor.Backend.TensorLayoutModule.shape
  nameWithType: TensorLayout.shape
- uid: Tensor.Backend.TensorLayoutModule.stride(Tensor.Backend.TensorLayout)
  name: 'val stride: TensorLayout -> int64 list'
  href: api/Tensor.Backend.TensorLayoutModule.stride.html#Tensor_Backend_TensorLayoutModule_stride_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.stride(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.stride: Tensor.Backend.TensorLayout -> int64 list'
  nameWithType: 'val TensorLayout.stride: TensorLayout -> int64 list'
- uid: Tensor.Backend.TensorLayoutModule.stride*
  name: stride
  href: api/Tensor.Backend.TensorLayoutModule.stride.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.stride*
  fullName: Tensor.Backend.TensorLayoutModule.stride
  nameWithType: TensorLayout.stride
- uid: Tensor.Backend.TensorLayoutModule.stridesEqual(int64 list -> int64 list -> int64 list)
  name: 'val stridesEqual: int64 list -> int64 list -> int64 list -> bool'
  href: api/Tensor.Backend.TensorLayoutModule.stridesEqual.html#Tensor_Backend_TensorLayoutModule_stridesEqual_int64_list____int64_list____int64_list_
  commentId: M:Tensor.Backend.stridesEqual(Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.Backend.TensorLayoutModule.stridesEqual: int64 list -> int64 list -> int64 list -> bool'
  nameWithType: 'val TensorLayout.stridesEqual: int64 list -> int64 list -> int64 list -> bool'
- uid: Tensor.Backend.TensorLayoutModule.stridesEqual*
  name: stridesEqual
  href: api/Tensor.Backend.TensorLayoutModule.stridesEqual.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.stridesEqual*
  fullName: Tensor.Backend.TensorLayoutModule.stridesEqual
  nameWithType: TensorLayout.stridesEqual
- uid: Tensor.Backend.TensorLayoutModule.swapDim(int -> int -> Tensor.Backend.TensorLayout)
  name: 'val swapDim: int -> int -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.swapDim.html#Tensor_Backend_TensorLayoutModule_swapDim_int____int____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.swapDim(System.Int32,System.Int32,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.swapDim: int -> int -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.swapDim: int -> int -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.swapDim*
  name: swapDim
  href: api/Tensor.Backend.TensorLayoutModule.swapDim.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.swapDim*
  fullName: Tensor.Backend.TensorLayoutModule.swapDim
  nameWithType: TensorLayout.swapDim
- uid: Tensor.Backend.TensorLayoutModule.transpose(Tensor.Backend.TensorLayout)
  name: 'val transpose: TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.transpose.html#Tensor_Backend_TensorLayoutModule_transpose_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.transpose(Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.transpose: Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.transpose: TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.transpose*
  name: transpose
  href: api/Tensor.Backend.TensorLayoutModule.transpose.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.transpose*
  fullName: Tensor.Backend.TensorLayoutModule.transpose
  nameWithType: TensorLayout.transpose
- uid: Tensor.Backend.TensorLayoutModule.tryReshape(int64 list -> Tensor.Backend.TensorLayout)
  name: 'val tryReshape: int64 list -> TensorLayout -> TensorLayout option'
  href: api/Tensor.Backend.TensorLayoutModule.tryReshape.html#Tensor_Backend_TensorLayoutModule_tryReshape_int64_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.tryReshape(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.tryReshape: int64 list -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout option'
  nameWithType: 'val TensorLayout.tryReshape: int64 list -> TensorLayout -> TensorLayout option'
- uid: Tensor.Backend.TensorLayoutModule.tryReshape*
  name: tryReshape
  href: api/Tensor.Backend.TensorLayoutModule.tryReshape.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.tryReshape*
  fullName: Tensor.Backend.TensorLayoutModule.tryReshape
  nameWithType: TensorLayout.tryReshape
- uid: Tensor.Backend.TensorLayoutModule.view(Tensor.Rng list -> Tensor.Backend.TensorLayout)
  name: 'val view: Rng list -> TensorLayout -> TensorLayout'
  href: api/Tensor.Backend.TensorLayoutModule.view.html#Tensor_Backend_TensorLayoutModule_view_Tensor_Rng_list____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Backend.view(Microsoft.FSharp.Collections.FSharpList{Tensor.Rng},Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.Backend.TensorLayoutModule.view: Tensor.Rng list -> Tensor.Backend.TensorLayout -> Tensor.Backend.TensorLayout'
  nameWithType: 'val TensorLayout.view: Rng list -> TensorLayout -> TensorLayout'
- uid: Tensor.Backend.TensorLayoutModule.view*
  name: view
  href: api/Tensor.Backend.TensorLayoutModule.view.html
  commentId: Overload:Tensor.Backend.TensorLayoutModule.view*
  fullName: Tensor.Backend.TensorLayoutModule.view
  nameWithType: TensorLayout.view
- uid: Tensor.BlockTensor`1
  name: BlockTensor<'T> (union)
  href: api/Tensor.BlockTensor-1.html
  commentId: T:Tensor.BlockTensor`1
  fullName: Tensor.BlockTensor`1
  nameWithType: Tensor.BlockTensor`1
- uid: Tensor.BlockTensor`1.Block
  name: Block of Tensor<'T>
  href: api/Tensor.BlockTensor-1.Block.html
  commentId: T:Tensor.BlockTensor`1.Block
  fullName: Tensor.BlockTensor<_>.Block of Tensor.Tensor<'T>
  nameWithType: BlockTensor.Block of Tensor<'T>
- uid: Tensor.BlockTensor`1.SubBlocks
  name: SubBlocks of BlockTensor<'T> list
  href: api/Tensor.BlockTensor-1.SubBlocks.html
  commentId: T:Tensor.BlockTensor`1.SubBlocks
  fullName: Tensor.BlockTensor<_>.SubBlocks of Tensor.BlockTensor<'T> list
  nameWithType: BlockTensor.SubBlocks of BlockTensor<'T> list
- uid: Tensor.Cuda
  name: Tensor.Cuda
  href: api/Tensor.Cuda.html
  commentId: N:Tensor.Cuda
  fullName: Tensor.Cuda
  nameWithType: Tensor.Cuda
- uid: Tensor.Cuda.CannotCudaRegisterMemoryException
  name: CannotCudaRegisterMemoryException
  href: api/Tensor.Cuda.CannotCudaRegisterMemoryException.html
  commentId: T:Tensor.Cuda.CannotCudaRegisterMemoryException
  fullName: Tensor.Cuda.CannotCudaRegisterMemoryException
  nameWithType: Tensor.Cuda.CannotCudaRegisterMemoryException
- uid: Tensor.Cuda.CannotCudaRegisterMemoryException.Message(unit)
  name: 'override property Message: string'
  href: api/Tensor.Cuda.CannotCudaRegisterMemoryException.Message.html#Tensor_Cuda_CannotCudaRegisterMemoryException_Message_unit_
  commentId: P:Tensor.Cuda.CannotCudaRegisterMemoryException.Message
  fullName: 'override property Tensor.Cuda.CannotCudaRegisterMemoryException.Message: string'
  nameWithType: 'override property CannotCudaRegisterMemoryException.Message: string'
- uid: Tensor.Cuda.CannotCudaRegisterMemoryException.Message*
  name: Message
  href: api/Tensor.Cuda.CannotCudaRegisterMemoryException.Message.html
  commentId: Overload:Tensor.Cuda.CannotCudaRegisterMemoryException.Message*
  fullName: Tensor.Cuda.CannotCudaRegisterMemoryException.Message
  nameWithType: CannotCudaRegisterMemoryException.Message
- uid: Tensor.Cuda.CannotCudaRegisterMemoryException.msg
  name: 'val msg: string'
  href: api/Tensor.Cuda.CannotCudaRegisterMemoryException.msg.html
  commentId: P:Tensor.Cuda.CannotCudaRegisterMemoryException.msg
  fullName: 'val Tensor.Cuda.CannotCudaRegisterMemoryException.msg: string'
  nameWithType: 'val CannotCudaRegisterMemoryException.msg: string'
- uid: Tensor.Cuda.Cfg
  name: Cfg
  href: api/Tensor.Cuda.Cfg.html
  commentId: T:Tensor.Cuda.Cfg
  fullName: Tensor.Cuda.Cfg
  nameWithType: Tensor.Cuda.Cfg
- uid: Tensor.Cuda.Cfg.DebugCompile(unit)
  name: 'static property DebugCompile: bool'
  href: api/Tensor.Cuda.Cfg.DebugCompile.html#Tensor_Cuda_Cfg_DebugCompile_unit_
  commentId: P:Tensor.Cuda.Cfg.DebugCompile
  fullName: 'static property Tensor.Cuda.Cfg.DebugCompile: bool'
  nameWithType: 'static property Cfg.DebugCompile: bool'
- uid: Tensor.Cuda.Cfg.DebugCompile*
  name: DebugCompile
  href: api/Tensor.Cuda.Cfg.DebugCompile.html
  commentId: Overload:Tensor.Cuda.Cfg.DebugCompile*
  fullName: Tensor.Cuda.Cfg.DebugCompile
  nameWithType: Cfg.DebugCompile
- uid: Tensor.Cuda.Cfg.DisableKernelCache(unit)
  name: 'static property DisableKernelCache: bool'
  href: api/Tensor.Cuda.Cfg.DisableKernelCache.html#Tensor_Cuda_Cfg_DisableKernelCache_unit_
  commentId: P:Tensor.Cuda.Cfg.DisableKernelCache
  fullName: 'static property Tensor.Cuda.Cfg.DisableKernelCache: bool'
  nameWithType: 'static property Cfg.DisableKernelCache: bool'
- uid: Tensor.Cuda.Cfg.DisableKernelCache*
  name: DisableKernelCache
  href: api/Tensor.Cuda.Cfg.DisableKernelCache.html
  commentId: Overload:Tensor.Cuda.Cfg.DisableKernelCache*
  fullName: Tensor.Cuda.Cfg.DisableKernelCache
  nameWithType: Cfg.DisableKernelCache
- uid: Tensor.Cuda.Cfg.FastKernelMath(unit)
  name: 'static property FastKernelMath: bool'
  href: api/Tensor.Cuda.Cfg.FastKernelMath.html#Tensor_Cuda_Cfg_FastKernelMath_unit_
  commentId: P:Tensor.Cuda.Cfg.FastKernelMath
  fullName: 'static property Tensor.Cuda.Cfg.FastKernelMath: bool'
  nameWithType: 'static property Cfg.FastKernelMath: bool'
- uid: Tensor.Cuda.Cfg.FastKernelMath*
  name: FastKernelMath
  href: api/Tensor.Cuda.Cfg.FastKernelMath.html
  commentId: Overload:Tensor.Cuda.Cfg.FastKernelMath*
  fullName: Tensor.Cuda.Cfg.FastKernelMath
  nameWithType: Cfg.FastKernelMath
- uid: Tensor.Cuda.Cfg.RestrictKernels(unit)
  name: 'static property RestrictKernels: bool'
  href: api/Tensor.Cuda.Cfg.RestrictKernels.html#Tensor_Cuda_Cfg_RestrictKernels_unit_
  commentId: P:Tensor.Cuda.Cfg.RestrictKernels
  fullName: 'static property Tensor.Cuda.Cfg.RestrictKernels: bool'
  nameWithType: 'static property Cfg.RestrictKernels: bool'
- uid: Tensor.Cuda.Cfg.RestrictKernels*
  name: RestrictKernels
  href: api/Tensor.Cuda.Cfg.RestrictKernels.html
  commentId: Overload:Tensor.Cuda.Cfg.RestrictKernels*
  fullName: Tensor.Cuda.Cfg.RestrictKernels
  nameWithType: Cfg.RestrictKernels
- uid: Tensor.Cuda.Cfg.Stacktrace(unit)
  name: 'static property Stacktrace: bool'
  href: api/Tensor.Cuda.Cfg.Stacktrace.html#Tensor_Cuda_Cfg_Stacktrace_unit_
  commentId: P:Tensor.Cuda.Cfg.Stacktrace
  fullName: 'static property Tensor.Cuda.Cfg.Stacktrace: bool'
  nameWithType: 'static property Cfg.Stacktrace: bool'
- uid: Tensor.Cuda.Cfg.Stacktrace*
  name: Stacktrace
  href: api/Tensor.Cuda.Cfg.Stacktrace.html
  commentId: Overload:Tensor.Cuda.Cfg.Stacktrace*
  fullName: Tensor.Cuda.Cfg.Stacktrace
  nameWithType: Cfg.Stacktrace
- uid: Tensor.Cuda.Cfg.Stream(unit)
  name: 'static property Stream: CUstream'
  href: api/Tensor.Cuda.Cfg.Stream.html#Tensor_Cuda_Cfg_Stream_unit_
  commentId: P:Tensor.Cuda.Cfg.Stream
  fullName: 'static property Tensor.Cuda.Cfg.Stream: ManagedCuda.BasicTypes.CUstream'
  nameWithType: 'static property Cfg.Stream: CUstream'
- uid: Tensor.Cuda.Cfg.Stream*
  name: Stream
  href: api/Tensor.Cuda.Cfg.Stream.html
  commentId: Overload:Tensor.Cuda.Cfg.Stream*
  fullName: Tensor.Cuda.Cfg.Stream
  nameWithType: Cfg.Stream
- uid: Tensor.Cuda.CudaRegMem
  name: CudaRegMem (mod)
  href: api/Tensor.Cuda.CudaRegMem.html
  commentId: T:Tensor.Cuda.CudaRegMem
  fullName: Tensor.Cuda.CudaRegMem
  nameWithType: Tensor.Cuda.CudaRegMem
- uid: Tensor.Cuda.CudaRegMem.get(Tensor.Host.ITensorHostStorage)
  name: 'val get: ITensorHostStorage -> CudaRegMemHnd'
  href: api/Tensor.Cuda.CudaRegMem.get.html#Tensor_Cuda_CudaRegMem_get_Tensor_Host_ITensorHostStorage_
  commentId: M:Tensor.Cuda.get(Tensor.Host.ITensorHostStorage)
  fullName: 'val Tensor.Cuda.CudaRegMem.get: Tensor.Host.ITensorHostStorage -> Tensor.Cuda.CudaRegMemHnd'
  nameWithType: 'val CudaRegMem.get: ITensorHostStorage -> CudaRegMemHnd'
- uid: Tensor.Cuda.CudaRegMem.get*
  name: get
  href: api/Tensor.Cuda.CudaRegMem.get.html
  commentId: Overload:Tensor.Cuda.CudaRegMem.get*
  fullName: Tensor.Cuda.CudaRegMem.get
  nameWithType: CudaRegMem.get
- uid: Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory(Tensor.Host.ITensorHostStorage)
  name: 'val getCudaRegisteredMemory: ITensorHostStorage -> CudaRegisteredHostMemory<byte>'
  href: api/Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory.html#Tensor_Cuda_CudaRegMem_getCudaRegisteredMemory_Tensor_Host_ITensorHostStorage_
  commentId: M:Tensor.Cuda.getCudaRegisteredMemory(Tensor.Host.ITensorHostStorage)
  fullName: 'val Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory: Tensor.Host.ITensorHostStorage -> ManagedCuda.CudaRegisteredHostMemory<byte>'
  nameWithType: 'val CudaRegMem.getCudaRegisteredMemory: ITensorHostStorage -> CudaRegisteredHostMemory<byte>'
- uid: Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory*
  name: getCudaRegisteredMemory
  href: api/Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory.html
  commentId: Overload:Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory*
  fullName: Tensor.Cuda.CudaRegMem.getCudaRegisteredMemory
  nameWithType: CudaRegMem.getCudaRegisteredMemory
- uid: Tensor.Cuda.CudaRegMem.register(Tensor.Host.ITensorHostStorage)
  name: 'val register: ITensorHostStorage -> CudaRegMemHnd'
  href: api/Tensor.Cuda.CudaRegMem.register.html#Tensor_Cuda_CudaRegMem_register_Tensor_Host_ITensorHostStorage_
  commentId: M:Tensor.Cuda.register(Tensor.Host.ITensorHostStorage)
  fullName: 'val Tensor.Cuda.CudaRegMem.register: Tensor.Host.ITensorHostStorage -> Tensor.Cuda.CudaRegMemHnd'
  nameWithType: 'val CudaRegMem.register: ITensorHostStorage -> CudaRegMemHnd'
- uid: Tensor.Cuda.CudaRegMem.register*
  name: register
  href: api/Tensor.Cuda.CudaRegMem.register.html
  commentId: Overload:Tensor.Cuda.CudaRegMem.register*
  fullName: Tensor.Cuda.CudaRegMem.register
  nameWithType: CudaRegMem.register
- uid: Tensor.Cuda.CudaRegMemHnd
  name: CudaRegMemHnd
  href: api/Tensor.Cuda.CudaRegMemHnd.html
  commentId: T:Tensor.Cuda.CudaRegMemHnd
  fullName: Tensor.Cuda.CudaRegMemHnd
  nameWithType: Tensor.Cuda.CudaRegMemHnd
- uid: Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory(unit)
  name: 'property CudaRegisteredMemory: CudaRegisteredHostMemory<byte>'
  href: api/Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory.html#Tensor_Cuda_CudaRegMemHnd_CudaRegisteredMemory_unit_
  commentId: P:Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory
  fullName: 'property Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory: ManagedCuda.CudaRegisteredHostMemory<byte>'
  nameWithType: 'property CudaRegMemHnd.CudaRegisteredMemory: CudaRegisteredHostMemory<byte>'
- uid: Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory*
  name: CudaRegisteredMemory
  href: api/Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory.html
  commentId: Overload:Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory*
  fullName: Tensor.Cuda.CudaRegMemHnd.CudaRegisteredMemory
  nameWithType: CudaRegMemHnd.CudaRegisteredMemory
- uid: Tensor.Cuda.CudaRegMemHnd.Finalize(unit)
  name: 'override member Finalize: unit -> unit'
  href: api/Tensor.Cuda.CudaRegMemHnd.Finalize.html#Tensor_Cuda_CudaRegMemHnd_Finalize_unit_
  commentId: M:Tensor.Cuda.CudaRegMemHnd.Finalize
  fullName: 'override member Tensor.Cuda.CudaRegMemHnd.Finalize: unit -> unit'
  nameWithType: 'override member CudaRegMemHnd.Finalize: unit -> unit'
- uid: Tensor.Cuda.CudaRegMemHnd.Finalize*
  name: Finalize
  href: api/Tensor.Cuda.CudaRegMemHnd.Finalize.html
  commentId: Overload:Tensor.Cuda.CudaRegMemHnd.Finalize*
  fullName: Tensor.Cuda.CudaRegMemHnd.Finalize
  nameWithType: CudaRegMemHnd.Finalize
- uid: Tensor.Cuda.CudaRegMemHnd.HostArray(unit)
  name: 'property HostArray: ITensorHostStorage'
  href: api/Tensor.Cuda.CudaRegMemHnd.HostArray.html#Tensor_Cuda_CudaRegMemHnd_HostArray_unit_
  commentId: P:Tensor.Cuda.CudaRegMemHnd.HostArray
  fullName: 'property Tensor.Cuda.CudaRegMemHnd.HostArray: Tensor.Host.ITensorHostStorage'
  nameWithType: 'property CudaRegMemHnd.HostArray: ITensorHostStorage'
- uid: Tensor.Cuda.CudaRegMemHnd.HostArray*
  name: HostArray
  href: api/Tensor.Cuda.CudaRegMemHnd.HostArray.html
  commentId: Overload:Tensor.Cuda.CudaRegMemHnd.HostArray*
  fullName: Tensor.Cuda.CudaRegMemHnd.HostArray
  nameWithType: CudaRegMemHnd.HostArray
- uid: Tensor.Cuda.CudaRegMemHnd.PinHnd(unit)
  name: 'property PinHnd: PinnedMemory'
  href: api/Tensor.Cuda.CudaRegMemHnd.PinHnd.html#Tensor_Cuda_CudaRegMemHnd_PinHnd_unit_
  commentId: P:Tensor.Cuda.CudaRegMemHnd.PinHnd
  fullName: 'property Tensor.Cuda.CudaRegMemHnd.PinHnd: Tensor.Host.PinnedMemory'
  nameWithType: 'property CudaRegMemHnd.PinHnd: PinnedMemory'
- uid: Tensor.Cuda.CudaRegMemHnd.PinHnd*
  name: PinHnd
  href: api/Tensor.Cuda.CudaRegMemHnd.PinHnd.html
  commentId: Overload:Tensor.Cuda.CudaRegMemHnd.PinHnd*
  fullName: Tensor.Cuda.CudaRegMemHnd.PinHnd
  nameWithType: CudaRegMemHnd.PinHnd
- uid: Tensor.Cuda.CudaRegMemHnd.Ptr(unit)
  name: 'property Ptr: nativeint'
  href: api/Tensor.Cuda.CudaRegMemHnd.Ptr.html#Tensor_Cuda_CudaRegMemHnd_Ptr_unit_
  commentId: P:Tensor.Cuda.CudaRegMemHnd.Ptr
  fullName: 'property Tensor.Cuda.CudaRegMemHnd.Ptr: nativeint'
  nameWithType: 'property CudaRegMemHnd.Ptr: nativeint'
- uid: Tensor.Cuda.CudaRegMemHnd.Ptr*
  name: Ptr
  href: api/Tensor.Cuda.CudaRegMemHnd.Ptr.html
  commentId: Overload:Tensor.Cuda.CudaRegMemHnd.Ptr*
  fullName: Tensor.Cuda.CudaRegMemHnd.Ptr
  nameWithType: CudaRegMemHnd.Ptr
- uid: Tensor.Cuda.CudaRegMemHnd.System-IDisposable-Dispose(unit)
  name: 'interface IDisposable with member Dispose: unit -> unit'
  href: api/Tensor.Cuda.CudaRegMemHnd.System-IDisposable-Dispose.html#Tensor_Cuda_CudaRegMemHnd_System_IDisposable_Dispose_unit_
  commentId: M:Tensor.Cuda.CudaRegMemHnd.System-IDisposable-Dispose
  fullName: 'interface System.IDisposable with member Tensor.Cuda.CudaRegMemHnd.Dispose: unit -> unit'
  nameWithType: 'interface IDisposable with member CudaRegMemHnd.Dispose: unit -> unit'
- uid: Tensor.Cuda.CudaRegMemHnd.System-IDisposable-Dispose*
  name: Dispose
  href: api/Tensor.Cuda.CudaRegMemHnd.System-IDisposable-Dispose.html
  commentId: Overload:Tensor.Cuda.CudaRegMemHnd.System-IDisposable-Dispose*
  fullName: Tensor.Cuda.CudaRegMemHnd.Dispose
  nameWithType: CudaRegMemHnd.Dispose
- uid: Tensor.Cuda.ITensorCudaBackend
  name: ITensorCudaBackend
  href: api/Tensor.Cuda.ITensorCudaBackend.html
  commentId: T:Tensor.Cuda.ITensorCudaBackend
  fullName: Tensor.Cuda.ITensorCudaBackend
  nameWithType: Tensor.Cuda.ITensorCudaBackend
- uid: Tensor.Cuda.ITensorCudaBackend.NativeTensor(unit)
  name: 'abstract property NativeTensor: NativeTensor'
  href: api/Tensor.Cuda.ITensorCudaBackend.NativeTensor.html#Tensor_Cuda_ITensorCudaBackend_NativeTensor_unit_
  commentId: P:Tensor.Cuda.ITensorCudaBackend.NativeTensor
  fullName: 'abstract property Tensor.Cuda.ITensorCudaBackend.NativeTensor: Tensor.Cuda.NativeTensor'
  nameWithType: 'abstract property ITensorCudaBackend.NativeTensor: NativeTensor'
- uid: Tensor.Cuda.ITensorCudaBackend.NativeTensor*
  name: NativeTensor
  href: api/Tensor.Cuda.ITensorCudaBackend.NativeTensor.html
  commentId: Overload:Tensor.Cuda.ITensorCudaBackend.NativeTensor*
  fullName: Tensor.Cuda.ITensorCudaBackend.NativeTensor
  nameWithType: ITensorCudaBackend.NativeTensor
- uid: Tensor.Cuda.ITensorCudaStorage
  name: ITensorCudaStorage
  href: api/Tensor.Cuda.ITensorCudaStorage.html
  commentId: T:Tensor.Cuda.ITensorCudaStorage
  fullName: Tensor.Cuda.ITensorCudaStorage
  nameWithType: Tensor.Cuda.ITensorCudaStorage
- uid: Tensor.Cuda.ITensorCudaStorage.ByteData(unit)
  name: 'abstract property ByteData: CudaDeviceVariable<byte>'
  href: api/Tensor.Cuda.ITensorCudaStorage.ByteData.html#Tensor_Cuda_ITensorCudaStorage_ByteData_unit_
  commentId: P:Tensor.Cuda.ITensorCudaStorage.ByteData
  fullName: 'abstract property Tensor.Cuda.ITensorCudaStorage.ByteData: ManagedCuda.CudaDeviceVariable<byte>'
  nameWithType: 'abstract property ITensorCudaStorage.ByteData: CudaDeviceVariable<byte>'
- uid: Tensor.Cuda.ITensorCudaStorage.ByteData*
  name: ByteData
  href: api/Tensor.Cuda.ITensorCudaStorage.ByteData.html
  commentId: Overload:Tensor.Cuda.ITensorCudaStorage.ByteData*
  fullName: Tensor.Cuda.ITensorCudaStorage.ByteData
  nameWithType: ITensorCudaStorage.ByteData
- uid: Tensor.Cuda.ITensorCudaStorage.DataSize(unit)
  name: 'abstract property DataSize: int64'
  href: api/Tensor.Cuda.ITensorCudaStorage.DataSize.html#Tensor_Cuda_ITensorCudaStorage_DataSize_unit_
  commentId: P:Tensor.Cuda.ITensorCudaStorage.DataSize
  fullName: 'abstract property Tensor.Cuda.ITensorCudaStorage.DataSize: int64'
  nameWithType: 'abstract property ITensorCudaStorage.DataSize: int64'
- uid: Tensor.Cuda.ITensorCudaStorage.DataSize*
  name: DataSize
  href: api/Tensor.Cuda.ITensorCudaStorage.DataSize.html
  commentId: Overload:Tensor.Cuda.ITensorCudaStorage.DataSize*
  fullName: Tensor.Cuda.ITensorCudaStorage.DataSize
  nameWithType: ITensorCudaStorage.DataSize
- uid: Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes(unit)
  name: 'abstract property DataSizeInBytes: int64'
  href: api/Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes.html#Tensor_Cuda_ITensorCudaStorage_DataSizeInBytes_unit_
  commentId: P:Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes
  fullName: 'abstract property Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes: int64'
  nameWithType: 'abstract property ITensorCudaStorage.DataSizeInBytes: int64'
- uid: Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes*
  name: DataSizeInBytes
  href: api/Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes.html
  commentId: Overload:Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes*
  fullName: Tensor.Cuda.ITensorCudaStorage.DataSizeInBytes
  nameWithType: ITensorCudaStorage.DataSizeInBytes
- uid: Tensor.Cuda.NativeIdxTensors
  name: NativeIdxTensors (rec)
  href: api/Tensor.Cuda.NativeIdxTensors.html
  commentId: T:Tensor.Cuda.NativeIdxTensors
  fullName: Tensor.Cuda.NativeIdxTensors
  nameWithType: Tensor.Cuda.NativeIdxTensors
- uid: Tensor.Cuda.NativeIdxTensors.Idxs
  name: 'val Idxs: NativeTensor option list'
  href: api/Tensor.Cuda.NativeIdxTensors.Idxs.html
  commentId: P:Tensor.Cuda.NativeIdxTensors.Idxs
  fullName: 'val Tensor.Cuda.NativeIdxTensors.Idxs: Tensor.Cuda.NativeTensor option list'
  nameWithType: 'val NativeIdxTensors.Idxs: NativeTensor option list'
- uid: Tensor.Cuda.NativeIdxTensors.NDims
  name: 'val NDims: int'
  href: api/Tensor.Cuda.NativeIdxTensors.NDims.html
  commentId: P:Tensor.Cuda.NativeIdxTensors.NDims
  fullName: 'val Tensor.Cuda.NativeIdxTensors.NDims: int'
  nameWithType: 'val NativeIdxTensors.NDims: int'
- uid: Tensor.Cuda.NativeIdxTensorsInfo
  name: NativeIdxTensorsInfo (rec)
  href: api/Tensor.Cuda.NativeIdxTensorsInfo.html
  commentId: T:Tensor.Cuda.NativeIdxTensorsInfo
  fullName: Tensor.Cuda.NativeIdxTensorsInfo
  nameWithType: Tensor.Cuda.NativeIdxTensorsInfo
- uid: Tensor.Cuda.NativeIdxTensorsInfo.NDims
  name: 'val NDims: int'
  href: api/Tensor.Cuda.NativeIdxTensorsInfo.NDims.html
  commentId: P:Tensor.Cuda.NativeIdxTensorsInfo.NDims
  fullName: 'val Tensor.Cuda.NativeIdxTensorsInfo.NDims: int'
  nameWithType: 'val NativeIdxTensorsInfo.NDims: int'
- uid: Tensor.Cuda.NativeIdxTensorsInfo.NIdxs
  name: 'val NIdxs: int'
  href: api/Tensor.Cuda.NativeIdxTensorsInfo.NIdxs.html
  commentId: P:Tensor.Cuda.NativeIdxTensorsInfo.NIdxs
  fullName: 'val Tensor.Cuda.NativeIdxTensorsInfo.NIdxs: int'
  nameWithType: 'val NativeIdxTensorsInfo.NIdxs: int'
- uid: Tensor.Cuda.NativeTensor
  name: NativeTensor (rec)
  href: api/Tensor.Cuda.NativeTensor.html
  commentId: T:Tensor.Cuda.NativeTensor
  fullName: Tensor.Cuda.NativeTensor
  nameWithType: Tensor.Cuda.NativeTensor
- uid: Tensor.Cuda.NativeTensor.BasePtr
  name: 'val BasePtr: nativeint'
  href: api/Tensor.Cuda.NativeTensor.BasePtr.html
  commentId: P:Tensor.Cuda.NativeTensor.BasePtr
  fullName: 'val Tensor.Cuda.NativeTensor.BasePtr: nativeint'
  nameWithType: 'val NativeTensor.BasePtr: nativeint'
- uid: Tensor.Cuda.NativeTensor.DataType
  name: 'val DataType: Type'
  href: api/Tensor.Cuda.NativeTensor.DataType.html
  commentId: P:Tensor.Cuda.NativeTensor.DataType
  fullName: 'val Tensor.Cuda.NativeTensor.DataType: System.Type'
  nameWithType: 'val NativeTensor.DataType: Type'
- uid: Tensor.Cuda.NativeTensor.Offset
  name: 'val Offset: int64'
  href: api/Tensor.Cuda.NativeTensor.Offset.html
  commentId: P:Tensor.Cuda.NativeTensor.Offset
  fullName: 'val Tensor.Cuda.NativeTensor.Offset: int64'
  nameWithType: 'val NativeTensor.Offset: int64'
- uid: Tensor.Cuda.NativeTensor.Shape
  name: 'val Shape: int64 list'
  href: api/Tensor.Cuda.NativeTensor.Shape.html
  commentId: P:Tensor.Cuda.NativeTensor.Shape
  fullName: 'val Tensor.Cuda.NativeTensor.Shape: int64 list'
  nameWithType: 'val NativeTensor.Shape: int64 list'
- uid: Tensor.Cuda.NativeTensor.Storage
  name: 'val Storage: obj'
  href: api/Tensor.Cuda.NativeTensor.Storage.html
  commentId: P:Tensor.Cuda.NativeTensor.Storage
  fullName: 'val Tensor.Cuda.NativeTensor.Storage: obj'
  nameWithType: 'val NativeTensor.Storage: obj'
- uid: Tensor.Cuda.NativeTensor.Stride
  name: 'val Stride: int64 list'
  href: api/Tensor.Cuda.NativeTensor.Stride.html
  commentId: P:Tensor.Cuda.NativeTensor.Stride
  fullName: 'val Tensor.Cuda.NativeTensor.Stride: int64 list'
  nameWithType: 'val NativeTensor.Stride: int64 list'
- uid: Tensor.Cuda.OutOfCudaMemoryException
  name: OutOfCudaMemoryException
  href: api/Tensor.Cuda.OutOfCudaMemoryException.html
  commentId: T:Tensor.Cuda.OutOfCudaMemoryException
  fullName: Tensor.Cuda.OutOfCudaMemoryException
  nameWithType: Tensor.Cuda.OutOfCudaMemoryException
- uid: Tensor.Cuda.OutOfCudaMemoryException.Message(unit)
  name: 'override property Message: string'
  href: api/Tensor.Cuda.OutOfCudaMemoryException.Message.html#Tensor_Cuda_OutOfCudaMemoryException_Message_unit_
  commentId: P:Tensor.Cuda.OutOfCudaMemoryException.Message
  fullName: 'override property Tensor.Cuda.OutOfCudaMemoryException.Message: string'
  nameWithType: 'override property OutOfCudaMemoryException.Message: string'
- uid: Tensor.Cuda.OutOfCudaMemoryException.Message*
  name: Message
  href: api/Tensor.Cuda.OutOfCudaMemoryException.Message.html
  commentId: Overload:Tensor.Cuda.OutOfCudaMemoryException.Message*
  fullName: Tensor.Cuda.OutOfCudaMemoryException.Message
  nameWithType: OutOfCudaMemoryException.Message
- uid: Tensor.Cuda.OutOfCudaMemoryException.msg
  name: 'val msg: string'
  href: api/Tensor.Cuda.OutOfCudaMemoryException.msg.html
  commentId: P:Tensor.Cuda.OutOfCudaMemoryException.msg
  fullName: 'val Tensor.Cuda.OutOfCudaMemoryException.msg: string'
  nameWithType: 'val OutOfCudaMemoryException.msg: string'
- uid: Tensor.Cuda.TensorCudaBackend`1
  name: TensorCudaBackend<'T>
  href: api/Tensor.Cuda.TensorCudaBackend-1.html
  commentId: T:Tensor.Cuda.TensorCudaBackend`1
  fullName: Tensor.Cuda.TensorCudaBackend`1
  nameWithType: Tensor.Cuda.TensorCudaBackend`1
- uid: Tensor.Cuda.TensorCudaBackend`1.#ctor(Tensor.Backend.TensorLayout * Tensor.Cuda.TensorCudaStorage<'T>)
  name: "new: TensorLayout * TensorCudaStorage<'T> -> TensorCudaBackend<'T>"
  href: api/Tensor.Cuda.TensorCudaBackend-1.-ctor.html#Tensor_Cuda_TensorCudaBackend_1__ctor_Tensor_Backend_TensorLayout___Tensor_Cuda_TensorCudaStorage__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.#ctor(Tensor.Backend.TensorLayout,Tensor.Cuda.TensorCudaStorage{`0})
  fullName: "new: Tensor.Backend.TensorLayout * Tensor.Cuda.TensorCudaStorage<'T> -> Tensor.Cuda.TensorCudaBackend<'T>"
  nameWithType: "new: TensorLayout * TensorCudaStorage<'T> -> TensorCudaBackend<'T>"
- uid: Tensor.Cuda.TensorCudaBackend`1.#ctor*
  name: ( .ctor )
  href: api/Tensor.Cuda.TensorCudaBackend-1.-ctor.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.#ctor*
  fullName: Tensor.Cuda.TensorCudaBackend
  nameWithType: TensorCudaBackend.( .ctor )
- uid: Tensor.Cuda.TensorCudaBackend`1.DevicePtr(unit)
  name: 'property DevicePtr: nativeint'
  href: api/Tensor.Cuda.TensorCudaBackend-1.DevicePtr.html#Tensor_Cuda_TensorCudaBackend_1_DevicePtr_unit_
  commentId: P:Tensor.Cuda.TensorCudaBackend`1.DevicePtr
  fullName: 'property Tensor.Cuda.TensorCudaBackend.DevicePtr: nativeint'
  nameWithType: 'property TensorCudaBackend.DevicePtr: nativeint'
- uid: Tensor.Cuda.TensorCudaBackend`1.DevicePtr*
  name: DevicePtr
  href: api/Tensor.Cuda.TensorCudaBackend-1.DevicePtr.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.DevicePtr*
  fullName: Tensor.Cuda.TensorCudaBackend.DevicePtr
  nameWithType: TensorCudaBackend.DevicePtr
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Abs(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Abs: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Abs.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Abs_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Abs(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Abs: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Abs: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Abs*
  name: Abs
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Abs.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Abs*
  fullName: Tensor.Cuda.TensorCudaBackend.Abs
  nameWithType: TensorCudaBackend.Abs
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Acos(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Acos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Acos.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Acos_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Acos(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Acos: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Acos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Acos*
  name: Acos
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Acos.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Acos*
  fullName: Tensor.Cuda.TensorCudaBackend.Acos
  nameWithType: TensorCudaBackend.Acos
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Add(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Add: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Add.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Add_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Add(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Add: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Add: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Add*
  name: Add
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Add.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Add*
  fullName: Tensor.Cuda.TensorCudaBackend.Add
  nameWithType: TensorCudaBackend.Add
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member AllLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-AllLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_AllLastAxis_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.AllLastAxis: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.AllLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis*
  name: AllLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-AllLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.AllLastAxis
  nameWithType: TensorCudaBackend.AllLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-And(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member And: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-And.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_And_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-And(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.And: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.And: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-And*
  name: And
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-And.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-And*
  fullName: Tensor.Cuda.TensorCudaBackend.And
  nameWithType: TensorCudaBackend.And
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member AnyLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-AnyLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_AnyLastAxis_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.AnyLastAxis: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.AnyLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis*
  name: AnyLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-AnyLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.AnyLastAxis
  nameWithType: TensorCudaBackend.AnyLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member ArgMaxLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-ArgMaxLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_ArgMaxLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.ArgMaxLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.ArgMaxLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis*
  name: ArgMaxLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-ArgMaxLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.ArgMaxLastAxis
  nameWithType: TensorCudaBackend.ArgMaxLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member ArgMinLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-ArgMinLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_ArgMinLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.ArgMinLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.ArgMinLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis*
  name: ArgMinLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-ArgMinLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.ArgMinLastAxis
  nameWithType: TensorCudaBackend.ArgMinLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Asin(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Asin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Asin.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Asin_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Asin(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Asin: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Asin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Asin*
  name: Asin
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Asin.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Asin*
  fullName: Tensor.Cuda.TensorCudaBackend.Asin
  nameWithType: TensorCudaBackend.Asin
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Atan(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Atan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Atan.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Atan_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Atan(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Atan: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Atan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Atan*
  name: Atan
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Atan.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Atan*
  fullName: Tensor.Cuda.TensorCudaBackend.Atan
  nameWithType: TensorCudaBackend.Atan
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member BatchedInvert: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-BatchedInvert.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_BatchedInvert_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.BatchedInvert: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.BatchedInvert: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert*
  name: BatchedInvert
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-BatchedInvert.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert*
  fullName: Tensor.Cuda.TensorCudaBackend.BatchedInvert
  nameWithType: TensorCudaBackend.BatchedInvert
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member BatchedMatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-BatchedMatMatDot.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_BatchedMatMatDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.BatchedMatMatDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.BatchedMatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot*
  name: BatchedMatMatDot
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-BatchedMatMatDot.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot*
  fullName: Tensor.Cuda.TensorCudaBackend.BatchedMatMatDot
  nameWithType: TensorCudaBackend.BatchedMatMatDot
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> option * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member BatchedSVD: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> option * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-BatchedSVD.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_BatchedSVD_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__option___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{System.Tuple{Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.BatchedSVD: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> option * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.BatchedSVD: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> option * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD*
  name: BatchedSVD
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-BatchedSVD.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD*
  fullName: Tensor.Cuda.TensorCudaBackend.BatchedSVD
  nameWithType: TensorCudaBackend.BatchedSVD
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Ceiling: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Ceiling.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Ceiling_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Ceiling: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Ceiling: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling*
  name: Ceiling
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Ceiling.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling*
  fullName: Tensor.Cuda.TensorCudaBackend.Ceiling
  nameWithType: TensorCudaBackend.Ceiling
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Convert(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'?153486>)
  name: "interface ITensorBackend<'T> with member Convert: ITensorFrontend<'T> * ITensorFrontend<'?153486> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Convert.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Convert_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend___153486__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Convert``1(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{``0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Convert: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'?153486> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Convert: ITensorFrontend<'T> * ITensorFrontend<'?153486> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Convert*
  name: Convert
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Convert.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Convert*
  fullName: Tensor.Cuda.TensorCudaBackend.Convert
  nameWithType: TensorCudaBackend.Convert
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Copy(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Copy: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Copy.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Copy_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Copy(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Copy: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Copy: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Copy*
  name: Copy
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Copy.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Copy*
  fullName: Tensor.Cuda.TensorCudaBackend.Copy
  nameWithType: TensorCudaBackend.Copy
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cos(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Cos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Cos.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Cos_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cos(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Cos: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Cos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cos*
  name: Cos
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Cos.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cos*
  fullName: Tensor.Cuda.TensorCudaBackend.Cos
  nameWithType: TensorCudaBackend.Cos
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cosh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Cosh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Cosh.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Cosh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cosh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Cosh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Cosh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cosh*
  name: Cosh
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Cosh.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Cosh*
  fullName: Tensor.Cuda.TensorCudaBackend.Cosh
  nameWithType: TensorCudaBackend.Cosh
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member CountTrueLastAxis: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-CountTrueLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_CountTrueLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.CountTrueLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.CountTrueLastAxis: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis*
  name: CountTrueLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-CountTrueLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.CountTrueLastAxis
  nameWithType: TensorCudaBackend.CountTrueLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Divide(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Divide: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Divide.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Divide_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Divide(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Divide: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Divide: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Divide*
  name: Divide
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Divide.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Divide*
  fullName: Tensor.Cuda.TensorCudaBackend.Divide
  nameWithType: TensorCudaBackend.Divide
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Equal(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Equal: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Equal.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Equal_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Equal(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Equal: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Equal: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Equal*
  name: Equal
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Equal.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Equal*
  fullName: Tensor.Cuda.TensorCudaBackend.Equal
  nameWithType: TensorCudaBackend.Equal
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Exp(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Exp: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Exp.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Exp_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Exp(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Exp: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Exp: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Exp*
  name: Exp
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Exp.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Exp*
  fullName: Tensor.Cuda.TensorCudaBackend.Exp
  nameWithType: TensorCudaBackend.Exp
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillConst('T * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member FillConst: 'T * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-FillConst.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_FillConst__T___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillConst(`0,Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.FillConst: 'T * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.FillConst: 'T * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillConst*
  name: FillConst
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-FillConst.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillConst*
  fullName: Tensor.Cuda.TensorCudaBackend.FillConst
  nameWithType: TensorCudaBackend.FillConst
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing('T * 'T * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member FillIncrementing: 'T * 'T * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-FillIncrementing.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_FillIncrementing__T____T___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing(`0,`0,Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.FillIncrementing: 'T * 'T * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.FillIncrementing: 'T * 'T * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing*
  name: FillIncrementing
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-FillIncrementing.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing*
  fullName: Tensor.Cuda.TensorCudaBackend.FillIncrementing
  nameWithType: TensorCudaBackend.FillIncrementing
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis('T * Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member FindLastAxis: 'T * ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-FindLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_FindLastAxis__T___Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis(`0,Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.FindLastAxis: 'T * Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.FindLastAxis: 'T * ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis*
  name: FindLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-FindLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.FindLastAxis
  nameWithType: TensorCudaBackend.FindLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Floor(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Floor: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Floor.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Floor_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Floor(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Floor: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Floor: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Floor*
  name: Floor
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Floor.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Floor*
  fullName: Tensor.Cuda.TensorCudaBackend.Floor
  nameWithType: TensorCudaBackend.Floor
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Gather(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Gather: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Gather.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Gather_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_int64__option_list___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Gather(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Int64}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Gather: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Gather: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Gather*
  name: Gather
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Gather.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Gather*
  fullName: Tensor.Cuda.TensorCudaBackend.Gather
  nameWithType: TensorCudaBackend.Gather
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-get_Item(int64 [])
  name: "interface ITensorBackend<'T> with member Item: int64 [] -> 'T"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-get_Item.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_get_Item_int64____
  commentId: P:Tensor.Cuda.TensorCudaBackend`1.Item(System.Int64[])
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Item: int64 [] -> 'T"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Item: int64 [] -> 'T"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-get_Item*
  name: Item
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-get_Item.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-get_Item*
  fullName: Tensor.Cuda.TensorCudaBackend.Item
  nameWithType: TensorCudaBackend.Item
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Greater(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Greater: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Greater.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Greater_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Greater(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Greater: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Greater: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Greater*
  name: Greater
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Greater.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Greater*
  fullName: Tensor.Cuda.TensorCudaBackend.Greater
  nameWithType: TensorCudaBackend.Greater
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member GreaterOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-GreaterOrEqual.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_GreaterOrEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.GreaterOrEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.GreaterOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual*
  name: GreaterOrEqual
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-GreaterOrEqual.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual*
  fullName: Tensor.Cuda.TensorCudaBackend.GreaterOrEqual
  nameWithType: TensorCudaBackend.GreaterOrEqual
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member IfThenElse: ITensorFrontend<'T> * ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-IfThenElse.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_IfThenElse_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.IfThenElse: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.IfThenElse: ITensorFrontend<'T> * ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse*
  name: IfThenElse
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-IfThenElse.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse*
  fullName: Tensor.Cuda.TensorCudaBackend.IfThenElse
  nameWithType: TensorCudaBackend.IfThenElse
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member IsFinite: ITensorFrontend<bool> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-IsFinite.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_IsFinite_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.IsFinite: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.IsFinite: ITensorFrontend<bool> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite*
  name: IsFinite
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-IsFinite.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite*
  fullName: Tensor.Cuda.TensorCudaBackend.IsFinite
  nameWithType: TensorCudaBackend.IsFinite
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Less(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Less: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Less.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Less_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Less(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Less: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Less: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Less*
  name: Less
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Less.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Less*
  fullName: Tensor.Cuda.TensorCudaBackend.Less
  nameWithType: TensorCudaBackend.Less
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member LessOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-LessOrEqual.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_LessOrEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.LessOrEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.LessOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual*
  name: LessOrEqual
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-LessOrEqual.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual*
  fullName: Tensor.Cuda.TensorCudaBackend.LessOrEqual
  nameWithType: TensorCudaBackend.LessOrEqual
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Log: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Log.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Log_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Log: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Log: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log*
  name: Log
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Log.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log*
  fullName: Tensor.Cuda.TensorCudaBackend.Log
  nameWithType: TensorCudaBackend.Log
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log10(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Log10: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Log10.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Log10_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log10(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Log10: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Log10: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log10*
  name: Log10
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Log10.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Log10*
  fullName: Tensor.Cuda.TensorCudaBackend.Log10
  nameWithType: TensorCudaBackend.Log10
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [])
  name: "interface ITensorBackend<'T> with member MaskedGet: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<bool> option [] -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaskedGet.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MaskedGet_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool__option____
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Boolean}}[])
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MaskedGet: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MaskedGet: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<bool> option [] -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet*
  name: MaskedGet
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaskedGet.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet*
  fullName: Tensor.Cuda.TensorCudaBackend.MaskedGet
  nameWithType: TensorCudaBackend.MaskedGet
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MaskedSet: ITensorFrontend<'T> * ITensorFrontend<bool> option [] * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaskedSet.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MaskedSet_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool__option______Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Boolean}}[],Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MaskedSet: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MaskedSet: ITensorFrontend<'T> * ITensorFrontend<bool> option [] * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet*
  name: MaskedSet
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaskedSet.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet*
  fullName: Tensor.Cuda.TensorCudaBackend.MaskedSet
  nameWithType: TensorCudaBackend.MaskedSet
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MatMatDot.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MatMatDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MatMatDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot*
  name: MatMatDot
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MatMatDot.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot*
  fullName: Tensor.Cuda.TensorCudaBackend.MatMatDot
  nameWithType: TensorCudaBackend.MatMatDot
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MatVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MatVecDot.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MatVecDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MatVecDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MatVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot*
  name: MatVecDot
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MatVecDot.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot*
  fullName: Tensor.Cuda.TensorCudaBackend.MatVecDot
  nameWithType: TensorCudaBackend.MatVecDot
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MaxElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaxElemwise.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MaxElemwise_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MaxElemwise: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MaxElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise*
  name: MaxElemwise
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaxElemwise.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise*
  fullName: Tensor.Cuda.TensorCudaBackend.MaxElemwise
  nameWithType: TensorCudaBackend.MaxElemwise
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MaxLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaxLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MaxLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MaxLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MaxLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis*
  name: MaxLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MaxLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.MaxLastAxis
  nameWithType: TensorCudaBackend.MaxLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MinElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MinElemwise.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MinElemwise_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MinElemwise: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MinElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise*
  name: MinElemwise
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MinElemwise.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise*
  fullName: Tensor.Cuda.TensorCudaBackend.MinElemwise
  nameWithType: TensorCudaBackend.MinElemwise
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MinLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MinLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_MinLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.MinLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.MinLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis*
  name: MinLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-MinLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.MinLastAxis
  nameWithType: TensorCudaBackend.MinLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Modulo(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Modulo: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Modulo.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Modulo_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Modulo(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Modulo: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Modulo: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Modulo*
  name: Modulo
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Modulo.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Modulo*
  fullName: Tensor.Cuda.TensorCudaBackend.Modulo
  nameWithType: TensorCudaBackend.Modulo
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Multiply(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Multiply: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Multiply.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Multiply_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Multiply(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Multiply: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Multiply: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Multiply*
  name: Multiply
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Multiply.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Multiply*
  fullName: Tensor.Cuda.TensorCudaBackend.Multiply
  nameWithType: TensorCudaBackend.Multiply
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Negate(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member Negate: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Negate.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Negate_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Negate(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Negate: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Negate: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Negate*
  name: Negate
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Negate.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Negate*
  fullName: Tensor.Cuda.TensorCudaBackend.Negate
  nameWithType: TensorCudaBackend.Negate
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member NotEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-NotEqual.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_NotEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.NotEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.NotEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual*
  name: NotEqual
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-NotEqual.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual*
  fullName: Tensor.Cuda.TensorCudaBackend.NotEqual
  nameWithType: TensorCudaBackend.NotEqual
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Or(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member Or: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Or.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Or_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Or(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Or: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Or: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Or*
  name: Or
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Or.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Or*
  fullName: Tensor.Cuda.TensorCudaBackend.Or
  nameWithType: TensorCudaBackend.Or
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Power(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Power: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Power.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Power_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Power(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Power: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Power: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Power*
  name: Power
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Power.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Power*
  fullName: Tensor.Cuda.TensorCudaBackend.Power
  nameWithType: TensorCudaBackend.Power
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member ProductLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-ProductLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_ProductLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.ProductLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.ProductLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis*
  name: ProductLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-ProductLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.ProductLastAxis
  nameWithType: TensorCudaBackend.ProductLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Round(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Round: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Round.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Round_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Round(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Round: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Round: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Round*
  name: Round
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Round.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Round*
  fullName: Tensor.Cuda.TensorCudaBackend.Round
  nameWithType: TensorCudaBackend.Round
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Scatter(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Scatter: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Scatter.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Scatter_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_int64__option_list___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Scatter(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Int64}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Scatter: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Scatter: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Scatter*
  name: Scatter
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Scatter.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Scatter*
  fullName: Tensor.Cuda.TensorCudaBackend.Scatter
  nameWithType: TensorCudaBackend.Scatter
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-set_Item(int64 [] * 'T)
  name: "interface ITensorBackend<'T> with member Item: int64 [] * 'T -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-set_Item.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_set_Item_int64_______T_
  commentId: P:Tensor.Cuda.TensorCudaBackend`1.Item(System.Int64[],`0)
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Item: int64 [] * 'T -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Item: int64 [] * 'T -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-set_Item*
  name: Item
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-set_Item.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-set_Item*
  fullName: Tensor.Cuda.TensorCudaBackend.Item
  nameWithType: TensorCudaBackend.Item
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sgn(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sgn: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sgn.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Sgn_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sgn(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Sgn: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Sgn: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sgn*
  name: Sgn
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sgn.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sgn*
  fullName: Tensor.Cuda.TensorCudaBackend.Sgn
  nameWithType: TensorCudaBackend.Sgn
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sin(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sin.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Sin_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sin(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Sin: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Sin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sin*
  name: Sin
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sin.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sin*
  fullName: Tensor.Cuda.TensorCudaBackend.Sin
  nameWithType: TensorCudaBackend.Sin
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sinh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sinh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sinh.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Sinh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sinh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Sinh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Sinh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sinh*
  name: Sinh
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sinh.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sinh*
  fullName: Tensor.Cuda.TensorCudaBackend.Sinh
  nameWithType: TensorCudaBackend.Sinh
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sqrt: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sqrt.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Sqrt_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Sqrt: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Sqrt: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt*
  name: Sqrt
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Sqrt.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt*
  fullName: Tensor.Cuda.TensorCudaBackend.Sqrt
  nameWithType: TensorCudaBackend.Sqrt
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Subtract(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Subtract: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Subtract.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Subtract_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Subtract(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Subtract: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Subtract: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Subtract*
  name: Subtract
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Subtract.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Subtract*
  fullName: Tensor.Cuda.TensorCudaBackend.Subtract
  nameWithType: TensorCudaBackend.Subtract
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member SumLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-SumLastAxis.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_SumLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.SumLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.SumLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis*
  name: SumLastAxis
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-SumLastAxis.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis*
  fullName: Tensor.Cuda.TensorCudaBackend.SumLastAxis
  nameWithType: TensorCudaBackend.SumLastAxis
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition(Tensor.MatrixPart * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member SymmetricEigenDecomposition: MatrixPart * ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-SymmetricEigenDecomposition.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_SymmetricEigenDecomposition_Tensor_MatrixPart___Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition(Tensor.MatrixPart,Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.SymmetricEigenDecomposition: Tensor.MatrixPart * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.SymmetricEigenDecomposition: MatrixPart * ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition*
  name: SymmetricEigenDecomposition
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-SymmetricEigenDecomposition.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition*
  fullName: Tensor.Cuda.TensorCudaBackend.SymmetricEigenDecomposition
  nameWithType: TensorCudaBackend.SymmetricEigenDecomposition
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tan(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Tan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Tan.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Tan_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tan(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Tan: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Tan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tan*
  name: Tan
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Tan.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tan*
  fullName: Tensor.Cuda.TensorCudaBackend.Tan
  nameWithType: TensorCudaBackend.Tan
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tanh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Tanh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Tanh.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Tanh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tanh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Tanh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Tanh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tanh*
  name: Tanh
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Tanh.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Tanh*
  fullName: Tensor.Cuda.TensorCudaBackend.Tanh
  nameWithType: TensorCudaBackend.Tanh
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Transfer(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Transfer: ITensorFrontend<'T> * ITensorFrontend<'T> -> bool"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Transfer.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Transfer_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Transfer(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Transfer: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> bool"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Transfer: ITensorFrontend<'T> * ITensorFrontend<'T> -> bool"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Transfer*
  name: Transfer
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Transfer.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Transfer*
  fullName: Tensor.Cuda.TensorCudaBackend.Transfer
  nameWithType: TensorCudaBackend.Transfer
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member TrueIndices: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-TrueIndices.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_TrueIndices_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.TrueIndices: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.TrueIndices: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices*
  name: TrueIndices
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-TrueIndices.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices*
  fullName: Tensor.Cuda.TensorCudaBackend.TrueIndices
  nameWithType: TensorCudaBackend.TrueIndices
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Truncate(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Truncate: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Truncate.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Truncate_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Truncate(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Truncate: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Truncate: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Truncate*
  name: Truncate
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Truncate.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Truncate*
  fullName: Tensor.Cuda.TensorCudaBackend.Truncate
  nameWithType: TensorCudaBackend.Truncate
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member UnaryMinus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-UnaryMinus.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_UnaryMinus_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.UnaryMinus: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.UnaryMinus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus*
  name: UnaryMinus
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-UnaryMinus.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus*
  fullName: Tensor.Cuda.TensorCudaBackend.UnaryMinus
  nameWithType: TensorCudaBackend.UnaryMinus
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member UnaryPlus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-UnaryPlus.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_UnaryPlus_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.UnaryPlus: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.UnaryPlus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus*
  name: UnaryPlus
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-UnaryPlus.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus*
  fullName: Tensor.Cuda.TensorCudaBackend.UnaryPlus
  nameWithType: TensorCudaBackend.UnaryPlus
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member VecVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-VecVecDot.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_VecVecDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.VecVecDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.VecVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot*
  name: VecVecDot
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-VecVecDot.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot*
  fullName: Tensor.Cuda.TensorCudaBackend.VecVecDot
  nameWithType: TensorCudaBackend.VecVecDot
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Xor(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member Xor: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Xor.html#Tensor_Cuda_TensorCudaBackend_1_Tensor_Backend_ITensorBackend_1_Xor_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Xor(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Cuda.TensorCudaBackend.Xor: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorCudaBackend.Xor: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Xor*
  name: Xor
  href: api/Tensor.Cuda.TensorCudaBackend-1.Tensor-Backend-ITensorBackend-1-Xor.html
  commentId: Overload:Tensor.Cuda.TensorCudaBackend`1.Tensor-Backend-ITensorBackend`1-Xor*
  fullName: Tensor.Cuda.TensorCudaBackend.Xor
  nameWithType: TensorCudaBackend.Xor
- uid: Tensor.Cuda.TensorCudaDevice
  name: TensorCudaDevice
  href: api/Tensor.Cuda.TensorCudaDevice.html
  commentId: T:Tensor.Cuda.TensorCudaDevice
  fullName: Tensor.Cuda.TensorCudaDevice
  nameWithType: Tensor.Cuda.TensorCudaDevice
- uid: Tensor.Cuda.TensorCudaDevice.Create(int64)
  name: "override member Create: int64 -> ITensorStorage<'?153615>"
  href: api/Tensor.Cuda.TensorCudaDevice.Create.html#Tensor_Cuda_TensorCudaDevice_Create_int64_
  commentId: M:Tensor.Cuda.TensorCudaDevice.Create``1(System.Int64)
  fullName: "override member Tensor.Cuda.TensorCudaDevice.Create: int64 -> Tensor.Backend.ITensorStorage<'?153615>"
  nameWithType: "override member TensorCudaDevice.Create: int64 -> ITensorStorage<'?153615>"
- uid: Tensor.Cuda.TensorCudaDevice.Create*
  name: Create
  href: api/Tensor.Cuda.TensorCudaDevice.Create.html
  commentId: Overload:Tensor.Cuda.TensorCudaDevice.Create*
  fullName: Tensor.Cuda.TensorCudaDevice.Create
  nameWithType: TensorCudaDevice.Create
- uid: Tensor.Cuda.TensorCudaDevice.Id(unit)
  name: 'override property Id: string'
  href: api/Tensor.Cuda.TensorCudaDevice.Id.html#Tensor_Cuda_TensorCudaDevice_Id_unit_
  commentId: P:Tensor.Cuda.TensorCudaDevice.Id
  fullName: 'override property Tensor.Cuda.TensorCudaDevice.Id: string'
  nameWithType: 'override property TensorCudaDevice.Id: string'
- uid: Tensor.Cuda.TensorCudaDevice.Id*
  name: Id
  href: api/Tensor.Cuda.TensorCudaDevice.Id.html
  commentId: Overload:Tensor.Cuda.TensorCudaDevice.Id*
  fullName: Tensor.Cuda.TensorCudaDevice.Id
  nameWithType: TensorCudaDevice.Id
- uid: Tensor.Cuda.TensorCudaDevice.Instance(unit)
  name: 'static property Instance: TensorCudaDevice'
  href: api/Tensor.Cuda.TensorCudaDevice.Instance.html#Tensor_Cuda_TensorCudaDevice_Instance_unit_
  commentId: P:Tensor.Cuda.TensorCudaDevice.Instance
  fullName: 'static property Tensor.Cuda.TensorCudaDevice.Instance: Tensor.Cuda.TensorCudaDevice'
  nameWithType: 'static property TensorCudaDevice.Instance: TensorCudaDevice'
- uid: Tensor.Cuda.TensorCudaDevice.Instance*
  name: Instance
  href: api/Tensor.Cuda.TensorCudaDevice.Instance.html
  commentId: Overload:Tensor.Cuda.TensorCudaDevice.Instance*
  fullName: Tensor.Cuda.TensorCudaDevice.Instance
  nameWithType: TensorCudaDevice.Instance
- uid: Tensor.Cuda.TensorCudaDevice.Zeroed(unit)
  name: 'override property Zeroed: bool'
  href: api/Tensor.Cuda.TensorCudaDevice.Zeroed.html#Tensor_Cuda_TensorCudaDevice_Zeroed_unit_
  commentId: P:Tensor.Cuda.TensorCudaDevice.Zeroed
  fullName: 'override property Tensor.Cuda.TensorCudaDevice.Zeroed: bool'
  nameWithType: 'override property TensorCudaDevice.Zeroed: bool'
- uid: Tensor.Cuda.TensorCudaDevice.Zeroed*
  name: Zeroed
  href: api/Tensor.Cuda.TensorCudaDevice.Zeroed.html
  commentId: Overload:Tensor.Cuda.TensorCudaDevice.Zeroed*
  fullName: Tensor.Cuda.TensorCudaDevice.Zeroed
  nameWithType: TensorCudaDevice.Zeroed
- uid: Tensor.Cuda.TensorCudaStorage`1
  name: TensorCudaStorage<'T>
  href: api/Tensor.Cuda.TensorCudaStorage-1.html
  commentId: T:Tensor.Cuda.TensorCudaStorage`1
  fullName: Tensor.Cuda.TensorCudaStorage`1
  nameWithType: Tensor.Cuda.TensorCudaStorage`1
- uid: Tensor.Cuda.TensorCudaStorage`1.#ctor(int64)
  name: "new: int64 -> TensorCudaStorage<'T>"
  href: api/Tensor.Cuda.TensorCudaStorage-1.-ctor.html#Tensor_Cuda_TensorCudaStorage_1__ctor_int64_
  commentId: M:Tensor.Cuda.TensorCudaStorage`1.#ctor(System.Int64)
  fullName: "new: int64 -> Tensor.Cuda.TensorCudaStorage<'T>"
  nameWithType: "new: int64 -> TensorCudaStorage<'T>"
- uid: Tensor.Cuda.TensorCudaStorage`1.#ctor(ManagedCuda.CudaDeviceVariable<'T>)
  name: "new: CudaDeviceVariable<'T> -> TensorCudaStorage<'T>"
  href: api/Tensor.Cuda.TensorCudaStorage-1.-ctor.html#Tensor_Cuda_TensorCudaStorage_1__ctor_ManagedCuda_CudaDeviceVariable__T__
  commentId: M:Tensor.Cuda.TensorCudaStorage`1.#ctor(ManagedCuda.CudaDeviceVariable{`0})
  fullName: "new: ManagedCuda.CudaDeviceVariable<'T> -> Tensor.Cuda.TensorCudaStorage<'T>"
  nameWithType: "new: CudaDeviceVariable<'T> -> TensorCudaStorage<'T>"
- uid: Tensor.Cuda.TensorCudaStorage`1.#ctor*
  name: ( .ctor )
  href: api/Tensor.Cuda.TensorCudaStorage-1.-ctor.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.#ctor*
  fullName: Tensor.Cuda.TensorCudaStorage
  nameWithType: TensorCudaStorage.( .ctor )
- uid: Tensor.Cuda.TensorCudaStorage`1.ByteData(unit)
  name: 'property ByteData: CudaDeviceVariable<byte>'
  href: api/Tensor.Cuda.TensorCudaStorage-1.ByteData.html#Tensor_Cuda_TensorCudaStorage_1_ByteData_unit_
  commentId: P:Tensor.Cuda.TensorCudaStorage`1.ByteData
  fullName: 'property Tensor.Cuda.TensorCudaStorage.ByteData: ManagedCuda.CudaDeviceVariable<byte>'
  nameWithType: 'property TensorCudaStorage.ByteData: CudaDeviceVariable<byte>'
- uid: Tensor.Cuda.TensorCudaStorage`1.ByteData*
  name: ByteData
  href: api/Tensor.Cuda.TensorCudaStorage-1.ByteData.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.ByteData*
  fullName: Tensor.Cuda.TensorCudaStorage.ByteData
  nameWithType: TensorCudaStorage.ByteData
- uid: Tensor.Cuda.TensorCudaStorage`1.Data(unit)
  name: "property Data: CudaDeviceVariable<'T>"
  href: api/Tensor.Cuda.TensorCudaStorage-1.Data.html#Tensor_Cuda_TensorCudaStorage_1_Data_unit_
  commentId: P:Tensor.Cuda.TensorCudaStorage`1.Data
  fullName: "property Tensor.Cuda.TensorCudaStorage.Data: ManagedCuda.CudaDeviceVariable<'T>"
  nameWithType: "property TensorCudaStorage.Data: CudaDeviceVariable<'T>"
- uid: Tensor.Cuda.TensorCudaStorage`1.Data*
  name: Data
  href: api/Tensor.Cuda.TensorCudaStorage-1.Data.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.Data*
  fullName: Tensor.Cuda.TensorCudaStorage.Data
  nameWithType: TensorCudaStorage.Data
- uid: Tensor.Cuda.TensorCudaStorage`1.DataSize(unit)
  name: 'property DataSize: int64'
  href: api/Tensor.Cuda.TensorCudaStorage-1.DataSize.html#Tensor_Cuda_TensorCudaStorage_1_DataSize_unit_
  commentId: P:Tensor.Cuda.TensorCudaStorage`1.DataSize
  fullName: 'property Tensor.Cuda.TensorCudaStorage.DataSize: int64'
  nameWithType: 'property TensorCudaStorage.DataSize: int64'
- uid: Tensor.Cuda.TensorCudaStorage`1.DataSize*
  name: DataSize
  href: api/Tensor.Cuda.TensorCudaStorage-1.DataSize.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.DataSize*
  fullName: Tensor.Cuda.TensorCudaStorage.DataSize
  nameWithType: TensorCudaStorage.DataSize
- uid: Tensor.Cuda.TensorCudaStorage`1.DataSizeInBytes(unit)
  name: 'property DataSizeInBytes: int64'
  href: api/Tensor.Cuda.TensorCudaStorage-1.DataSizeInBytes.html#Tensor_Cuda_TensorCudaStorage_1_DataSizeInBytes_unit_
  commentId: P:Tensor.Cuda.TensorCudaStorage`1.DataSizeInBytes
  fullName: 'property Tensor.Cuda.TensorCudaStorage.DataSizeInBytes: int64'
  nameWithType: 'property TensorCudaStorage.DataSizeInBytes: int64'
- uid: Tensor.Cuda.TensorCudaStorage`1.DataSizeInBytes*
  name: DataSizeInBytes
  href: api/Tensor.Cuda.TensorCudaStorage-1.DataSizeInBytes.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.DataSizeInBytes*
  fullName: Tensor.Cuda.TensorCudaStorage.DataSizeInBytes
  nameWithType: TensorCudaStorage.DataSizeInBytes
- uid: Tensor.Cuda.TensorCudaStorage`1.Finalize(unit)
  name: 'override member Finalize: unit -> unit'
  href: api/Tensor.Cuda.TensorCudaStorage-1.Finalize.html#Tensor_Cuda_TensorCudaStorage_1_Finalize_unit_
  commentId: M:Tensor.Cuda.TensorCudaStorage`1.Finalize
  fullName: 'override member Tensor.Cuda.TensorCudaStorage.Finalize: unit -> unit'
  nameWithType: 'override member TensorCudaStorage.Finalize: unit -> unit'
- uid: Tensor.Cuda.TensorCudaStorage`1.Finalize*
  name: Finalize
  href: api/Tensor.Cuda.TensorCudaStorage-1.Finalize.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.Finalize*
  fullName: Tensor.Cuda.TensorCudaStorage.Finalize
  nameWithType: TensorCudaStorage.Finalize
- uid: Tensor.Cuda.TensorCudaStorage`1.Item(int64)
  name: "property Item: int64 -> 'T"
  href: api/Tensor.Cuda.TensorCudaStorage-1.Item.html#Tensor_Cuda_TensorCudaStorage_1_Item_int64_
  commentId: P:Tensor.Cuda.TensorCudaStorage`1.Item(System.Int64)
  fullName: "property Tensor.Cuda.TensorCudaStorage.Item: int64 -> 'T"
  nameWithType: "property TensorCudaStorage.Item: int64 -> 'T"
- uid: Tensor.Cuda.TensorCudaStorage`1.Item*
  name: Item
  href: api/Tensor.Cuda.TensorCudaStorage-1.Item.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.Item*
  fullName: Tensor.Cuda.TensorCudaStorage.Item
  nameWithType: TensorCudaStorage.Item
- uid: Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-Backend(Tensor.Backend.TensorLayout)
  name: "interface ITensorStorage<'T> with member Backend: TensorLayout -> ITensorBackend<'T>"
  href: api/Tensor.Cuda.TensorCudaStorage-1.Tensor-Backend-ITensorStorage-1-Backend.html#Tensor_Cuda_TensorCudaStorage_1_Tensor_Backend_ITensorStorage_1_Backend_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-Backend(Tensor.Backend.TensorLayout)
  fullName: "interface Tensor.Backend.ITensorStorage<'T> with member Tensor.Cuda.TensorCudaStorage.Backend: Tensor.Backend.TensorLayout -> Tensor.Backend.ITensorBackend<'T>"
  nameWithType: "interface ITensorStorage<'T> with member TensorCudaStorage.Backend: TensorLayout -> ITensorBackend<'T>"
- uid: Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-Backend*
  name: Backend
  href: api/Tensor.Cuda.TensorCudaStorage-1.Tensor-Backend-ITensorStorage-1-Backend.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-Backend*
  fullName: Tensor.Cuda.TensorCudaStorage.Backend
  nameWithType: TensorCudaStorage.Backend
- uid: Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-get_Dev(unit)
  name: 'interface ITensorStorage with member Dev: unit -> ITensorDevice'
  href: api/Tensor.Cuda.TensorCudaStorage-1.Tensor-Backend-ITensorStorage-1-get_Dev.html#Tensor_Cuda_TensorCudaStorage_1_Tensor_Backend_ITensorStorage_1_get_Dev_unit_
  commentId: P:Tensor.Cuda.TensorCudaStorage`1.Dev
  fullName: 'interface Tensor.Backend.ITensorStorage with member Tensor.Cuda.TensorCudaStorage.Dev: unit -> Tensor.Backend.ITensorDevice'
  nameWithType: 'interface ITensorStorage with member TensorCudaStorage.Dev: unit -> ITensorDevice'
- uid: Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-get_Dev*
  name: Dev
  href: api/Tensor.Cuda.TensorCudaStorage-1.Tensor-Backend-ITensorStorage-1-get_Dev.html
  commentId: Overload:Tensor.Cuda.TensorCudaStorage`1.Tensor-Backend-ITensorStorage`1-get_Dev*
  fullName: Tensor.Cuda.TensorCudaStorage.Dev
  nameWithType: TensorCudaStorage.Dev
- uid: Tensor.CudaTensor
  name: CudaTensor (mod)
  href: api/Tensor.CudaTensor.html
  commentId: T:Tensor.CudaTensor
  fullName: Tensor.CudaTensor
  nameWithType: Tensor.CudaTensor
- uid: Tensor.CudaTensor.arange('T -> 'T -> 'T)
  name: "val arange: 'T -> 'T -> 'T -> Tensor<'T>"
  href: api/Tensor.CudaTensor.arange.html#Tensor_CudaTensor_arange__T_____T_____T_
  commentId: M:Tensor.arange``1(``0,``0,``0)
  fullName: "val Tensor.CudaTensor.arange: 'T -> 'T -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.arange: 'T -> 'T -> 'T -> Tensor<'T>"
- uid: Tensor.CudaTensor.arange*
  name: arange
  href: api/Tensor.CudaTensor.arange.html
  commentId: Overload:Tensor.CudaTensor.arange*
  fullName: Tensor.CudaTensor.arange
  nameWithType: CudaTensor.arange
- uid: Tensor.CudaTensor.counting(int64)
  name: 'val counting: int64 -> Tensor<int64>'
  href: api/Tensor.CudaTensor.counting.html#Tensor_CudaTensor_counting_int64_
  commentId: M:Tensor.counting(System.Int64)
  fullName: 'val Tensor.CudaTensor.counting: int64 -> Tensor.Tensor<int64>'
  nameWithType: 'val CudaTensor.counting: int64 -> Tensor<int64>'
- uid: Tensor.CudaTensor.counting*
  name: counting
  href: api/Tensor.CudaTensor.counting.html
  commentId: Overload:Tensor.CudaTensor.counting*
  fullName: Tensor.CudaTensor.counting
  nameWithType: CudaTensor.counting
- uid: Tensor.CudaTensor.Dev()
  name: val Dev
  href: api/Tensor.CudaTensor.Dev%28%29.html
  commentId: P:Tensor.Dev
  fullName: 'val Tensor.CudaTensor.Dev: Tensor.Backend.ITensorDevice'
  nameWithType: 'val CudaTensor.Dev: ITensorDevice'
- uid: Tensor.CudaTensor.empty(int)
  name: "val empty: int -> Tensor<'T>"
  href: api/Tensor.CudaTensor.empty.html#Tensor_CudaTensor_empty_int_
  commentId: M:Tensor.empty``1(System.Int32)
  fullName: "val Tensor.CudaTensor.empty: int -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.empty: int -> Tensor<'T>"
- uid: Tensor.CudaTensor.empty*
  name: empty
  href: api/Tensor.CudaTensor.empty.html
  commentId: Overload:Tensor.CudaTensor.empty*
  fullName: Tensor.CudaTensor.empty
  nameWithType: CudaTensor.empty
- uid: Tensor.CudaTensor.falses(int64 list)
  name: 'val falses: int64 list -> Tensor<bool>'
  href: api/Tensor.CudaTensor.falses.html#Tensor_CudaTensor_falses_int64_list_
  commentId: M:Tensor.falses(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.CudaTensor.falses: int64 list -> Tensor.Tensor<bool>'
  nameWithType: 'val CudaTensor.falses: int64 list -> Tensor<bool>'
- uid: Tensor.CudaTensor.falses*
  name: falses
  href: api/Tensor.CudaTensor.falses.html
  commentId: Overload:Tensor.CudaTensor.falses*
  fullName: Tensor.CudaTensor.falses
  nameWithType: CudaTensor.falses
- uid: Tensor.CudaTensor.filled(int64 list -> 'T)
  name: "val filled: int64 list -> 'T -> Tensor<'T>"
  href: api/Tensor.CudaTensor.filled.html#Tensor_CudaTensor_filled_int64_list_____T_
  commentId: M:Tensor.filled``1(Microsoft.FSharp.Collections.FSharpList{System.Int64},``0)
  fullName: "val Tensor.CudaTensor.filled: int64 list -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.filled: int64 list -> 'T -> Tensor<'T>"
- uid: Tensor.CudaTensor.filled*
  name: filled
  href: api/Tensor.CudaTensor.filled.html
  commentId: Overload:Tensor.CudaTensor.filled*
  fullName: Tensor.CudaTensor.filled
  nameWithType: CudaTensor.filled
- uid: Tensor.CudaTensor.identity(int64)
  name: "val identity: int64 -> Tensor<'T>"
  href: api/Tensor.CudaTensor.identity.html#Tensor_CudaTensor_identity_int64_
  commentId: M:Tensor.identity``1(System.Int64)
  fullName: "val Tensor.CudaTensor.identity: int64 -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.identity: int64 -> Tensor<'T>"
- uid: Tensor.CudaTensor.identity*
  name: identity
  href: api/Tensor.CudaTensor.identity.html
  commentId: Overload:Tensor.CudaTensor.identity*
  fullName: Tensor.CudaTensor.identity
  nameWithType: CudaTensor.identity
- uid: Tensor.CudaTensor.linspace('T -> 'T -> int64)
  name: "val linspace: 'T -> 'T -> int64 -> Tensor<'T>"
  href: api/Tensor.CudaTensor.linspace.html#Tensor_CudaTensor_linspace__T_____T____int64_
  commentId: M:Tensor.linspace``1(``0,``0,System.Int64)
  fullName: "val Tensor.CudaTensor.linspace: 'T -> 'T -> int64 -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.linspace: 'T -> 'T -> int64 -> Tensor<'T>"
- uid: Tensor.CudaTensor.linspace*
  name: linspace
  href: api/Tensor.CudaTensor.linspace.html
  commentId: Overload:Tensor.CudaTensor.linspace*
  fullName: Tensor.CudaTensor.linspace
  nameWithType: CudaTensor.linspace
- uid: Tensor.CudaTensor.ones(int64 list)
  name: "val ones: int64 list -> Tensor<'T>"
  href: api/Tensor.CudaTensor.ones.html#Tensor_CudaTensor_ones_int64_list_
  commentId: M:Tensor.ones``1(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "val Tensor.CudaTensor.ones: int64 list -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.ones: int64 list -> Tensor<'T>"
- uid: Tensor.CudaTensor.ones*
  name: ones
  href: api/Tensor.CudaTensor.ones.html
  commentId: Overload:Tensor.CudaTensor.ones*
  fullName: Tensor.CudaTensor.ones
  nameWithType: CudaTensor.ones
- uid: Tensor.CudaTensor.scalar('T)
  name: "val scalar: 'T -> Tensor<'T>"
  href: api/Tensor.CudaTensor.scalar.html#Tensor_CudaTensor_scalar__T_
  commentId: M:Tensor.scalar``1(``0)
  fullName: "val Tensor.CudaTensor.scalar: 'T -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.scalar: 'T -> Tensor<'T>"
- uid: Tensor.CudaTensor.scalar*
  name: scalar
  href: api/Tensor.CudaTensor.scalar.html
  commentId: Overload:Tensor.CudaTensor.scalar*
  fullName: Tensor.CudaTensor.scalar
  nameWithType: CudaTensor.scalar
- uid: Tensor.CudaTensor.transfer(Tensor.Tensor<'T>)
  name: "val transfer: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.CudaTensor.transfer.html#Tensor_CudaTensor_transfer_Tensor_Tensor__T__
  commentId: M:Tensor.transfer``1(Tensor.Tensor{``0})
  fullName: "val Tensor.CudaTensor.transfer: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.transfer: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.CudaTensor.transfer*
  name: transfer
  href: api/Tensor.CudaTensor.transfer.html
  commentId: Overload:Tensor.CudaTensor.transfer*
  fullName: Tensor.CudaTensor.transfer
  nameWithType: CudaTensor.transfer
- uid: Tensor.CudaTensor.trues(int64 list)
  name: 'val trues: int64 list -> Tensor<bool>'
  href: api/Tensor.CudaTensor.trues.html#Tensor_CudaTensor_trues_int64_list_
  commentId: M:Tensor.trues(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.CudaTensor.trues: int64 list -> Tensor.Tensor<bool>'
  nameWithType: 'val CudaTensor.trues: int64 list -> Tensor<bool>'
- uid: Tensor.CudaTensor.trues*
  name: trues
  href: api/Tensor.CudaTensor.trues.html
  commentId: Overload:Tensor.CudaTensor.trues*
  fullName: Tensor.CudaTensor.trues
  nameWithType: CudaTensor.trues
- uid: Tensor.CudaTensor.usingPtr(ManagedCuda.BasicTypes.CUdeviceptr -> ManagedCuda.BasicTypes.SizeT -> Tensor.Backend.TensorLayout)
  name: "val usingPtr: CUdeviceptr -> SizeT -> TensorLayout -> Tensor<'T>"
  href: api/Tensor.CudaTensor.usingPtr.html#Tensor_CudaTensor_usingPtr_ManagedCuda_BasicTypes_CUdeviceptr____ManagedCuda_BasicTypes_SizeT____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.usingPtr``1(ManagedCuda.BasicTypes.CUdeviceptr,ManagedCuda.BasicTypes.SizeT,Tensor.Backend.TensorLayout)
  fullName: "val Tensor.CudaTensor.usingPtr: ManagedCuda.BasicTypes.CUdeviceptr -> ManagedCuda.BasicTypes.SizeT -> Tensor.Backend.TensorLayout -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.usingPtr: CUdeviceptr -> SizeT -> TensorLayout -> Tensor<'T>"
- uid: Tensor.CudaTensor.usingPtr*
  name: usingPtr
  href: api/Tensor.CudaTensor.usingPtr.html
  commentId: Overload:Tensor.CudaTensor.usingPtr*
  fullName: Tensor.CudaTensor.usingPtr
  nameWithType: CudaTensor.usingPtr
- uid: Tensor.CudaTensor.usingPtrAndType(ManagedCuda.BasicTypes.CUdeviceptr -> ManagedCuda.BasicTypes.SizeT -> System.Type -> Tensor.Backend.TensorLayout)
  name: 'val usingPtrAndType: CUdeviceptr -> SizeT -> Type -> TensorLayout -> ITensor'
  href: api/Tensor.CudaTensor.usingPtrAndType.html#Tensor_CudaTensor_usingPtrAndType_ManagedCuda_BasicTypes_CUdeviceptr____ManagedCuda_BasicTypes_SizeT____System_Type____Tensor_Backend_TensorLayout_
  commentId: M:Tensor.usingPtrAndType(ManagedCuda.BasicTypes.CUdeviceptr,ManagedCuda.BasicTypes.SizeT,System.Type,Tensor.Backend.TensorLayout)
  fullName: 'val Tensor.CudaTensor.usingPtrAndType: ManagedCuda.BasicTypes.CUdeviceptr -> ManagedCuda.BasicTypes.SizeT -> System.Type -> Tensor.Backend.TensorLayout -> Tensor.ITensor'
  nameWithType: 'val CudaTensor.usingPtrAndType: CUdeviceptr -> SizeT -> Type -> TensorLayout -> ITensor'
- uid: Tensor.CudaTensor.usingPtrAndType*
  name: usingPtrAndType
  href: api/Tensor.CudaTensor.usingPtrAndType.html
  commentId: Overload:Tensor.CudaTensor.usingPtrAndType*
  fullName: Tensor.CudaTensor.usingPtrAndType
  nameWithType: CudaTensor.usingPtrAndType
- uid: Tensor.CudaTensor.zeros(int64 list)
  name: "val zeros: int64 list -> Tensor<'T>"
  href: api/Tensor.CudaTensor.zeros.html#Tensor_CudaTensor_zeros_int64_list_
  commentId: M:Tensor.zeros``1(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "val Tensor.CudaTensor.zeros: int64 list -> Tensor.Tensor<'T>"
  nameWithType: "val CudaTensor.zeros: int64 list -> Tensor<'T>"
- uid: Tensor.CudaTensor.zeros*
  name: zeros
  href: api/Tensor.CudaTensor.zeros.html
  commentId: Overload:Tensor.CudaTensor.zeros*
  fullName: Tensor.CudaTensor.zeros
  nameWithType: CudaTensor.zeros
- uid: Tensor.HDF5
  name: HDF5
  href: api/Tensor.HDF5.html
  commentId: T:Tensor.HDF5
  fullName: Tensor.HDF5
  nameWithType: Tensor.HDF5
- uid: Tensor.HDF5.CreateGroups(string)
  name: 'member CreateGroups: string -> unit'
  href: api/Tensor.HDF5.CreateGroups.html#Tensor_HDF5_CreateGroups_string_
  commentId: M:Tensor.HDF5.CreateGroups(System.String)
  fullName: 'member Tensor.HDF5.CreateGroups: string -> unit'
  nameWithType: 'member HDF5.CreateGroups: string -> unit'
- uid: Tensor.HDF5.CreateGroups*
  name: CreateGroups
  href: api/Tensor.HDF5.CreateGroups.html
  commentId: Overload:Tensor.HDF5.CreateGroups*
  fullName: Tensor.HDF5.CreateGroups
  nameWithType: HDF5.CreateGroups
- uid: Tensor.HDF5.Dispose(unit)
  name: 'member Dispose: unit -> unit'
  href: api/Tensor.HDF5.Dispose.html#Tensor_HDF5_Dispose_unit_
  commentId: M:Tensor.HDF5.Dispose
  fullName: 'member Tensor.HDF5.Dispose: unit -> unit'
  nameWithType: 'member HDF5.Dispose: unit -> unit'
- uid: Tensor.HDF5.Dispose*
  name: Dispose
  href: api/Tensor.HDF5.Dispose.html
  commentId: Overload:Tensor.HDF5.Dispose*
  fullName: Tensor.HDF5.Dispose
  nameWithType: HDF5.Dispose
- uid: Tensor.HDF5.Exists(string)
  name: 'member Exists: string -> bool'
  href: api/Tensor.HDF5.Exists.html#Tensor_HDF5_Exists_string_
  commentId: M:Tensor.HDF5.Exists(System.String)
  fullName: 'member Tensor.HDF5.Exists: string -> bool'
  nameWithType: 'member HDF5.Exists: string -> bool'
- uid: Tensor.HDF5.Exists*
  name: Exists
  href: api/Tensor.HDF5.Exists.html
  commentId: Overload:Tensor.HDF5.Exists*
  fullName: Tensor.HDF5.Exists
  nameWithType: HDF5.Exists
- uid: Tensor.HDF5.Finalize(unit)
  name: 'override member Finalize: unit -> unit'
  href: api/Tensor.HDF5.Finalize.html#Tensor_HDF5_Finalize_unit_
  commentId: M:Tensor.HDF5.Finalize
  fullName: 'override member Tensor.HDF5.Finalize: unit -> unit'
  nameWithType: 'override member HDF5.Finalize: unit -> unit'
- uid: Tensor.HDF5.Finalize*
  name: Finalize
  href: api/Tensor.HDF5.Finalize.html
  commentId: Overload:Tensor.HDF5.Finalize*
  fullName: Tensor.HDF5.Finalize
  nameWithType: HDF5.Finalize
- uid: Tensor.HDF5.GetAttribute(string * string)
  name: "member GetAttribute: string * string -> 'T"
  href: api/Tensor.HDF5.GetAttribute.html#Tensor_HDF5_GetAttribute_string___string_
  commentId: M:Tensor.HDF5.GetAttribute``1(System.String,System.String)
  fullName: "member Tensor.HDF5.GetAttribute: string * string -> 'T"
  nameWithType: "member HDF5.GetAttribute: string * string -> 'T"
- uid: Tensor.HDF5.GetAttribute*
  name: GetAttribute
  href: api/Tensor.HDF5.GetAttribute.html
  commentId: Overload:Tensor.HDF5.GetAttribute*
  fullName: Tensor.HDF5.GetAttribute
  nameWithType: HDF5.GetAttribute
- uid: Tensor.HDF5.GetDataType(string)
  name: 'member GetDataType: string -> Type'
  href: api/Tensor.HDF5.GetDataType.html#Tensor_HDF5_GetDataType_string_
  commentId: M:Tensor.HDF5.GetDataType(System.String)
  fullName: 'member Tensor.HDF5.GetDataType: string -> System.Type'
  nameWithType: 'member HDF5.GetDataType: string -> Type'
- uid: Tensor.HDF5.GetDataType*
  name: GetDataType
  href: api/Tensor.HDF5.GetDataType.html
  commentId: Overload:Tensor.HDF5.GetDataType*
  fullName: Tensor.HDF5.GetDataType
  nameWithType: HDF5.GetDataType
- uid: Tensor.HDF5.GetRecord(string)
  name: "member GetRecord: string -> 'R"
  href: api/Tensor.HDF5.GetRecord.html#Tensor_HDF5_GetRecord_string_
  commentId: M:Tensor.HDF5.GetRecord``1(System.String)
  fullName: "member Tensor.HDF5.GetRecord: string -> 'R"
  nameWithType: "member HDF5.GetRecord: string -> 'R"
- uid: Tensor.HDF5.GetRecord*
  name: GetRecord
  href: api/Tensor.HDF5.GetRecord.html
  commentId: Overload:Tensor.HDF5.GetRecord*
  fullName: Tensor.HDF5.GetRecord
  nameWithType: HDF5.GetRecord
- uid: Tensor.HDF5.OpenRead(string)
  name: 'static member OpenRead: string -> HDF5'
  href: api/Tensor.HDF5.OpenRead.html#Tensor_HDF5_OpenRead_string_
  commentId: M:Tensor.HDF5.OpenRead(System.String)
  fullName: 'static member Tensor.HDF5.OpenRead: string -> Tensor.HDF5'
  nameWithType: 'static member HDF5.OpenRead: string -> HDF5'
- uid: Tensor.HDF5.OpenRead*
  name: OpenRead
  href: api/Tensor.HDF5.OpenRead.html
  commentId: Overload:Tensor.HDF5.OpenRead*
  fullName: Tensor.HDF5.OpenRead
  nameWithType: HDF5.OpenRead
- uid: Tensor.HDF5.OpenWrite(string)
  name: 'static member OpenWrite: string -> HDF5'
  href: api/Tensor.HDF5.OpenWrite.html#Tensor_HDF5_OpenWrite_string_
  commentId: M:Tensor.HDF5.OpenWrite(System.String)
  fullName: 'static member Tensor.HDF5.OpenWrite: string -> Tensor.HDF5'
  nameWithType: 'static member HDF5.OpenWrite: string -> HDF5'
- uid: Tensor.HDF5.OpenWrite*
  name: OpenWrite
  href: api/Tensor.HDF5.OpenWrite.html
  commentId: Overload:Tensor.HDF5.OpenWrite*
  fullName: Tensor.HDF5.OpenWrite
  nameWithType: HDF5.OpenWrite
- uid: Tensor.HDF5.Read(string)
  name: "member Read: string -> array<'T> * int64 list"
  href: api/Tensor.HDF5.Read.html#Tensor_HDF5_Read_string_
  commentId: M:Tensor.HDF5.Read``1(System.String)
  fullName: "member Tensor.HDF5.Read: string -> array<'T> * int64 list"
  nameWithType: "member HDF5.Read: string -> array<'T> * int64 list"
- uid: Tensor.HDF5.Read*
  name: Read
  href: api/Tensor.HDF5.Read.html
  commentId: Overload:Tensor.HDF5.Read*
  fullName: Tensor.HDF5.Read
  nameWithType: HDF5.Read
- uid: Tensor.HDF5.SetAttribute(string * string * 'T)
  name: "member SetAttribute: string * string * 'T -> unit"
  href: api/Tensor.HDF5.SetAttribute.html#Tensor_HDF5_SetAttribute_string___string____T_
  commentId: M:Tensor.HDF5.SetAttribute``1(System.String,System.String,``0)
  fullName: "member Tensor.HDF5.SetAttribute: string * string * 'T -> unit"
  nameWithType: "member HDF5.SetAttribute: string * string * 'T -> unit"
- uid: Tensor.HDF5.SetAttribute*
  name: SetAttribute
  href: api/Tensor.HDF5.SetAttribute.html
  commentId: Overload:Tensor.HDF5.SetAttribute*
  fullName: Tensor.HDF5.SetAttribute
  nameWithType: HDF5.SetAttribute
- uid: Tensor.HDF5.SetRecord(string * 'R)
  name: "member SetRecord: string * 'R -> unit"
  href: api/Tensor.HDF5.SetRecord.html#Tensor_HDF5_SetRecord_string____R_
  commentId: M:Tensor.HDF5.SetRecord``1(System.String,``0)
  fullName: "member Tensor.HDF5.SetRecord: string * 'R -> unit"
  nameWithType: "member HDF5.SetRecord: string * 'R -> unit"
- uid: Tensor.HDF5.SetRecord*
  name: SetRecord
  href: api/Tensor.HDF5.SetRecord.html
  commentId: Overload:Tensor.HDF5.SetRecord*
  fullName: Tensor.HDF5.SetRecord
  nameWithType: HDF5.SetRecord
- uid: Tensor.HDF5.System-IDisposable-Dispose(unit)
  name: 'interface IDisposable with member Dispose: unit -> unit'
  href: api/Tensor.HDF5.System-IDisposable-Dispose.html#Tensor_HDF5_System_IDisposable_Dispose_unit_
  commentId: M:Tensor.HDF5.System-IDisposable-Dispose
  fullName: 'interface System.IDisposable with member Tensor.HDF5.Dispose: unit -> unit'
  nameWithType: 'interface IDisposable with member HDF5.Dispose: unit -> unit'
- uid: Tensor.HDF5.System-IDisposable-Dispose*
  name: Dispose
  href: api/Tensor.HDF5.System-IDisposable-Dispose.html
  commentId: Overload:Tensor.HDF5.System-IDisposable-Dispose*
  fullName: Tensor.HDF5.Dispose
  nameWithType: HDF5.Dispose
- uid: Tensor.HDF5.Write(string * array<'T> * int64 list)
  name: "member Write: string * array<'T> * int64 list -> unit"
  href: api/Tensor.HDF5.Write.html#Tensor_HDF5_Write_string___array__T____int64_list_
  commentId: M:Tensor.HDF5.Write``1(System.String,``0[],Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "member Tensor.HDF5.Write: string * array<'T> * int64 list -> unit"
  nameWithType: "member HDF5.Write: string * array<'T> * int64 list -> unit"
- uid: Tensor.HDF5.Write*
  name: Write
  href: api/Tensor.HDF5.Write.html
  commentId: Overload:Tensor.HDF5.Write*
  fullName: Tensor.HDF5.Write
  nameWithType: HDF5.Write
- uid: Tensor.Host
  name: Tensor.Host
  href: api/Tensor.Host.html
  commentId: N:Tensor.Host
  fullName: Tensor.Host
  nameWithType: Tensor.Host
- uid: Tensor.Host.BLAS
  name: BLAS
  href: api/Tensor.Host.BLAS.html
  commentId: T:Tensor.Host.BLAS
  fullName: Tensor.Host.BLAS
  nameWithType: Tensor.Host.BLAS
- uid: Tensor.Host.BLAS.F(unit)
  name: 'static property F: Impl'
  href: api/Tensor.Host.BLAS.F.html#Tensor_Host_BLAS_F_unit_
  commentId: P:Tensor.Host.BLAS.F
  fullName: 'static property Tensor.Host.BLAS.F: Tensor.Host.BLASModule.Impl'
  nameWithType: 'static property BLAS.F: Impl'
- uid: Tensor.Host.BLAS.F*
  name: F
  href: api/Tensor.Host.BLAS.F.html
  commentId: Overload:Tensor.Host.BLAS.F*
  fullName: Tensor.Host.BLAS.F
  nameWithType: BLAS.F
- uid: Tensor.Host.BLASLib
  name: BLASLib (union)
  href: api/Tensor.Host.BLASLib.html
  commentId: T:Tensor.Host.BLASLib
  fullName: Tensor.Host.BLASLib
  nameWithType: Tensor.Host.BLASLib
- uid: Tensor.Host.BLASLib.Custom
  name: 'Custom of blas: NativeLibName * lapack: NativeLibName'
  href: api/Tensor.Host.BLASLib.Custom.html
  commentId: T:Tensor.Host.BLASLib.Custom
  fullName: 'Tensor.Host.BLASLib.Custom of blas: Tensor.Utils.NativeLibName * lapack: Tensor.Utils.NativeLibName'
  nameWithType: 'BLASLib.Custom of blas: NativeLibName * lapack: NativeLibName'
- uid: Tensor.Host.BLASLib.IntelMKL
  name: IntelMKL
  href: api/Tensor.Host.BLASLib.IntelMKL.html
  commentId: T:Tensor.Host.BLASLib.IntelMKL
  fullName: Tensor.Host.BLASLib.IntelMKL
  nameWithType: BLASLib.IntelMKL
- uid: Tensor.Host.BLASLib.OpenBLAS
  name: OpenBLAS
  href: api/Tensor.Host.BLASLib.OpenBLAS.html
  commentId: T:Tensor.Host.BLASLib.OpenBLAS
  fullName: Tensor.Host.BLASLib.OpenBLAS
  nameWithType: BLASLib.OpenBLAS
- uid: Tensor.Host.BLASLib.Vendor
  name: Vendor
  href: api/Tensor.Host.BLASLib.Vendor.html
  commentId: T:Tensor.Host.BLASLib.Vendor
  fullName: Tensor.Host.BLASLib.Vendor
  nameWithType: BLASLib.Vendor
- uid: Tensor.Host.BLASModule
  name: BLAS (mod)
  href: api/Tensor.Host.BLASModule.html
  commentId: T:Tensor.Host.BLASModule
  fullName: Tensor.Host.BLASModule
  nameWithType: Tensor.Host.BLASModule
- uid: Tensor.Host.BLASModule.__cblas_ddot
  name: BLAS.__cblas_ddot
  href: api/Tensor.Host.BLASModule.__cblas_ddot.html
  commentId: T:Tensor.Host.BLASModule.__cblas_ddot
  fullName: Tensor.Host.BLASModule.__cblas_ddot
  nameWithType: Tensor.Host.BLASModule.__cblas_ddot
- uid: Tensor.Host.BLASModule.__cblas_ddot.Invoke(Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'abstract member Invoke: blas_int * nativeint * blas_int * nativeint * blas_int -> double'
  href: api/Tensor.Host.BLASModule.__cblas_ddot.Invoke.html#Tensor_Host_BLASModule___cblas_ddot_Invoke_Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.__cblas_ddot.Invoke(System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_ddot.Invoke: Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int -> double'
  nameWithType: 'abstract member __cblas_ddot.Invoke: blas_int * nativeint * blas_int * nativeint * blas_int -> double'
- uid: Tensor.Host.BLASModule.__cblas_ddot.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_ddot.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_ddot.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_ddot.Invoke
  nameWithType: __cblas_ddot.Invoke
- uid: Tensor.Host.BLASModule.__cblas_dgemm
  name: BLAS.__cblas_dgemm
  href: api/Tensor.Host.BLASModule.__cblas_dgemm.html
  commentId: T:Tensor.Host.BLASModule.__cblas_dgemm
  fullName: Tensor.Host.BLASModule.__cblas_dgemm
  nameWithType: Tensor.Host.BLASModule.__cblas_dgemm
- uid: Tensor.Host.BLASModule.__cblas_dgemm.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'abstract member Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.__cblas_dgemm.Invoke.html#Tensor_Host_BLASModule___cblas_dgemm_Invoke_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.__cblas_dgemm.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Int64,System.Double,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Double,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_dgemm.Invoke: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'abstract member __cblas_dgemm.Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.__cblas_dgemm.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_dgemm.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_dgemm.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_dgemm.Invoke
  nameWithType: __cblas_dgemm.Invoke
- uid: Tensor.Host.BLASModule.__cblas_dgemm_batch
  name: BLAS.__cblas_dgemm_batch
  href: api/Tensor.Host.BLASModule.__cblas_dgemm_batch.html
  commentId: T:Tensor.Host.BLASModule.__cblas_dgemm_batch
  fullName: Tensor.Host.BLASModule.__cblas_dgemm_batch
  nameWithType: Tensor.Host.BLASModule.__cblas_dgemm_batch
- uid: Tensor.Host.BLASModule.__cblas_dgemm_batch.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [])
  name: 'abstract member Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * double [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * double [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
  href: api/Tensor.Host.BLASModule.__cblas_dgemm_batch.Invoke.html#Tensor_Host_BLASModule___cblas_dgemm_batch_Invoke_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______double______nativeint______Tensor_Host_BLASModule_blas_int______nativeint______Tensor_Host_BLASModule_blas_int______double______nativeint______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int____
  commentId: M:Tensor.Host.BLASModule.__cblas_dgemm_batch.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],System.Int64[],System.Int64[],System.Int64[],System.Double[],System.IntPtr[],System.Int64[],System.IntPtr[],System.Int64[],System.Double[],System.IntPtr[],System.Int64[],System.Int64,System.Int64[])
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_dgemm_batch.Invoke: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [] -> unit'
  nameWithType: 'abstract member __cblas_dgemm_batch.Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * double [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * double [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
- uid: Tensor.Host.BLASModule.__cblas_dgemm_batch.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_dgemm_batch.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_dgemm_batch.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_dgemm_batch.Invoke
  nameWithType: __cblas_dgemm_batch.Invoke
- uid: Tensor.Host.BLASModule.__cblas_dgemv
  name: BLAS.__cblas_dgemv
  href: api/Tensor.Host.BLASModule.__cblas_dgemv.html
  commentId: T:Tensor.Host.BLASModule.__cblas_dgemv
  fullName: Tensor.Host.BLASModule.__cblas_dgemv
  nameWithType: Tensor.Host.BLASModule.__cblas_dgemv
- uid: Tensor.Host.BLASModule.__cblas_dgemv.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'abstract member Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.__cblas_dgemv.Invoke.html#Tensor_Host_BLASModule___cblas_dgemv_Invoke_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.__cblas_dgemv.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Double,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Double,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_dgemv.Invoke: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'abstract member __cblas_dgemv.Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.__cblas_dgemv.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_dgemv.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_dgemv.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_dgemv.Invoke
  nameWithType: __cblas_dgemv.Invoke
- uid: Tensor.Host.BLASModule.__cblas_sdot
  name: BLAS.__cblas_sdot
  href: api/Tensor.Host.BLASModule.__cblas_sdot.html
  commentId: T:Tensor.Host.BLASModule.__cblas_sdot
  fullName: Tensor.Host.BLASModule.__cblas_sdot
  nameWithType: Tensor.Host.BLASModule.__cblas_sdot
- uid: Tensor.Host.BLASModule.__cblas_sdot.Invoke(Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'abstract member Invoke: blas_int * nativeint * blas_int * nativeint * blas_int -> single'
  href: api/Tensor.Host.BLASModule.__cblas_sdot.Invoke.html#Tensor_Host_BLASModule___cblas_sdot_Invoke_Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.__cblas_sdot.Invoke(System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_sdot.Invoke: Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int -> single'
  nameWithType: 'abstract member __cblas_sdot.Invoke: blas_int * nativeint * blas_int * nativeint * blas_int -> single'
- uid: Tensor.Host.BLASModule.__cblas_sdot.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_sdot.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_sdot.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_sdot.Invoke
  nameWithType: __cblas_sdot.Invoke
- uid: Tensor.Host.BLASModule.__cblas_sgemm
  name: BLAS.__cblas_sgemm
  href: api/Tensor.Host.BLASModule.__cblas_sgemm.html
  commentId: T:Tensor.Host.BLASModule.__cblas_sgemm
  fullName: Tensor.Host.BLASModule.__cblas_sgemm
  nameWithType: Tensor.Host.BLASModule.__cblas_sgemm
- uid: Tensor.Host.BLASModule.__cblas_sgemm.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'abstract member Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.__cblas_sgemm.Invoke.html#Tensor_Host_BLASModule___cblas_sgemm_Invoke_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.__cblas_sgemm.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Int64,System.Single,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Single,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_sgemm.Invoke: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'abstract member __cblas_sgemm.Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.__cblas_sgemm.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_sgemm.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_sgemm.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_sgemm.Invoke
  nameWithType: __cblas_sgemm.Invoke
- uid: Tensor.Host.BLASModule.__cblas_sgemm_batch
  name: BLAS.__cblas_sgemm_batch
  href: api/Tensor.Host.BLASModule.__cblas_sgemm_batch.html
  commentId: T:Tensor.Host.BLASModule.__cblas_sgemm_batch
  fullName: Tensor.Host.BLASModule.__cblas_sgemm_batch
  nameWithType: Tensor.Host.BLASModule.__cblas_sgemm_batch
- uid: Tensor.Host.BLASModule.__cblas_sgemm_batch.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [])
  name: 'abstract member Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * single [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * single [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
  href: api/Tensor.Host.BLASModule.__cblas_sgemm_batch.Invoke.html#Tensor_Host_BLASModule___cblas_sgemm_batch_Invoke_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______single______nativeint______Tensor_Host_BLASModule_blas_int______nativeint______Tensor_Host_BLASModule_blas_int______single______nativeint______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int____
  commentId: M:Tensor.Host.BLASModule.__cblas_sgemm_batch.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],System.Int64[],System.Int64[],System.Int64[],System.Single[],System.IntPtr[],System.Int64[],System.IntPtr[],System.Int64[],System.Single[],System.IntPtr[],System.Int64[],System.Int64,System.Int64[])
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_sgemm_batch.Invoke: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [] -> unit'
  nameWithType: 'abstract member __cblas_sgemm_batch.Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * single [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * single [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
- uid: Tensor.Host.BLASModule.__cblas_sgemm_batch.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_sgemm_batch.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_sgemm_batch.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_sgemm_batch.Invoke
  nameWithType: __cblas_sgemm_batch.Invoke
- uid: Tensor.Host.BLASModule.__cblas_sgemv
  name: BLAS.__cblas_sgemv
  href: api/Tensor.Host.BLASModule.__cblas_sgemv.html
  commentId: T:Tensor.Host.BLASModule.__cblas_sgemv
  fullName: Tensor.Host.BLASModule.__cblas_sgemv
  nameWithType: Tensor.Host.BLASModule.__cblas_sgemv
- uid: Tensor.Host.BLASModule.__cblas_sgemv.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'abstract member Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.__cblas_sgemv.Invoke.html#Tensor_Host_BLASModule___cblas_sgemv_Invoke_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.__cblas_sgemv.Invoke(Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Single,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Single,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__cblas_sgemv.Invoke: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'abstract member __cblas_sgemv.Invoke: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.__cblas_sgemv.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__cblas_sgemv.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__cblas_sgemv.Invoke*
  fullName: Tensor.Host.BLAS.__cblas_sgemv.Invoke
  nameWithType: __cblas_sgemv.Invoke
- uid: Tensor.Host.BLASModule.__LAPACKE_geev
  name: BLAS.__LAPACKE_geev
  href: api/Tensor.Host.BLASModule.__LAPACKE_geev.html
  commentId: T:Tensor.Host.BLASModule.__LAPACKE_geev
  fullName: Tensor.Host.BLASModule.__LAPACKE_geev
  nameWithType: Tensor.Host.BLASModule.__LAPACKE_geev
- uid: Tensor.Host.BLASModule.__LAPACKE_geev.Invoke(int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int)
  name: 'abstract member Invoke: int * char * char * lapack_int * nativeint * lapack_int * nativeint * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
  href: api/Tensor.Host.BLASModule.__LAPACKE_geev.Invoke.html#Tensor_Host_BLASModule___LAPACKE_geev_Invoke_int___char___char___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___nativeint___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int_
  commentId: M:Tensor.Host.BLASModule.__LAPACKE_geev.Invoke(System.Int32,System.Char,System.Char,System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.IntPtr,System.IntPtr,System.Int64,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__LAPACKE_geev.Invoke: int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'abstract member __LAPACKE_geev.Invoke: int * char * char * lapack_int * nativeint * lapack_int * nativeint * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
- uid: Tensor.Host.BLASModule.__LAPACKE_geev.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__LAPACKE_geev.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__LAPACKE_geev.Invoke*
  fullName: Tensor.Host.BLAS.__LAPACKE_geev.Invoke
  nameWithType: __LAPACKE_geev.Invoke
- uid: Tensor.Host.BLASModule.__LAPACKE_gesdd
  name: BLAS.__LAPACKE_gesdd
  href: api/Tensor.Host.BLASModule.__LAPACKE_gesdd.html
  commentId: T:Tensor.Host.BLASModule.__LAPACKE_gesdd
  fullName: Tensor.Host.BLASModule.__LAPACKE_gesdd
  nameWithType: Tensor.Host.BLASModule.__LAPACKE_gesdd
- uid: Tensor.Host.BLASModule.__LAPACKE_gesdd.Invoke(int * char * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int)
  name: 'abstract member Invoke: int * char * lapack_int * lapack_int * nativeint * lapack_int * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
  href: api/Tensor.Host.BLASModule.__LAPACKE_gesdd.Invoke.html#Tensor_Host_BLASModule___LAPACKE_gesdd_Invoke_int___char___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int_
  commentId: M:Tensor.Host.BLASModule.__LAPACKE_gesdd.Invoke(System.Int32,System.Char,System.Int64,System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.IntPtr,System.Int64,System.IntPtr,System.Int64)
  fullName: 'abstract member Tensor.Host.BLAS.__LAPACKE_gesdd.Invoke: int * char * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'abstract member __LAPACKE_gesdd.Invoke: int * char * lapack_int * lapack_int * nativeint * lapack_int * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
- uid: Tensor.Host.BLASModule.__LAPACKE_gesdd.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__LAPACKE_gesdd.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__LAPACKE_gesdd.Invoke*
  fullName: Tensor.Host.BLAS.__LAPACKE_gesdd.Invoke
  nameWithType: __LAPACKE_gesdd.Invoke
- uid: Tensor.Host.BLASModule.__LAPACKE_getrf
  name: BLAS.__LAPACKE_getrf
  href: api/Tensor.Host.BLASModule.__LAPACKE_getrf.html
  commentId: T:Tensor.Host.BLASModule.__LAPACKE_getrf
  fullName: Tensor.Host.BLASModule.__LAPACKE_getrf
  nameWithType: Tensor.Host.BLASModule.__LAPACKE_getrf
- uid: Tensor.Host.BLASModule.__LAPACKE_getrf.Invoke(int * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [])
  name: 'abstract member Invoke: int * lapack_int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
  href: api/Tensor.Host.BLASModule.__LAPACKE_getrf.Invoke.html#Tensor_Host_BLASModule___LAPACKE_getrf_Invoke_int___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int____
  commentId: M:Tensor.Host.BLASModule.__LAPACKE_getrf.Invoke(System.Int32,System.Int64,System.Int64,System.IntPtr,System.Int64,System.Int64[])
  fullName: 'abstract member Tensor.Host.BLAS.__LAPACKE_getrf.Invoke: int * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [] -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'abstract member __LAPACKE_getrf.Invoke: int * lapack_int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
- uid: Tensor.Host.BLASModule.__LAPACKE_getrf.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__LAPACKE_getrf.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__LAPACKE_getrf.Invoke*
  fullName: Tensor.Host.BLAS.__LAPACKE_getrf.Invoke
  nameWithType: __LAPACKE_getrf.Invoke
- uid: Tensor.Host.BLASModule.__LAPACKE_getri
  name: BLAS.__LAPACKE_getri
  href: api/Tensor.Host.BLASModule.__LAPACKE_getri.html
  commentId: T:Tensor.Host.BLASModule.__LAPACKE_getri
  fullName: Tensor.Host.BLASModule.__LAPACKE_getri
  nameWithType: Tensor.Host.BLASModule.__LAPACKE_getri
- uid: Tensor.Host.BLASModule.__LAPACKE_getri.Invoke(int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [])
  name: 'abstract member Invoke: int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
  href: api/Tensor.Host.BLASModule.__LAPACKE_getri.Invoke.html#Tensor_Host_BLASModule___LAPACKE_getri_Invoke_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int____
  commentId: M:Tensor.Host.BLASModule.__LAPACKE_getri.Invoke(System.Int32,System.Int64,System.IntPtr,System.Int64,System.Int64[])
  fullName: 'abstract member Tensor.Host.BLAS.__LAPACKE_getri.Invoke: int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [] -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'abstract member __LAPACKE_getri.Invoke: int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
- uid: Tensor.Host.BLASModule.__LAPACKE_getri.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__LAPACKE_getri.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__LAPACKE_getri.Invoke*
  fullName: Tensor.Host.BLAS.__LAPACKE_getri.Invoke
  nameWithType: __LAPACKE_getri.Invoke
- uid: Tensor.Host.BLASModule.__LAPACKE_syevd
  name: BLAS.__LAPACKE_syevd
  href: api/Tensor.Host.BLASModule.__LAPACKE_syevd.html
  commentId: T:Tensor.Host.BLASModule.__LAPACKE_syevd
  fullName: Tensor.Host.BLASModule.__LAPACKE_syevd
  nameWithType: Tensor.Host.BLASModule.__LAPACKE_syevd
- uid: Tensor.Host.BLASModule.__LAPACKE_syevd.Invoke(int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint)
  name: 'abstract member Invoke: int * char * char * lapack_int * nativeint * lapack_int * nativeint -> lapack_int'
  href: api/Tensor.Host.BLASModule.__LAPACKE_syevd.Invoke.html#Tensor_Host_BLASModule___LAPACKE_syevd_Invoke_int___char___char___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint_
  commentId: M:Tensor.Host.BLASModule.__LAPACKE_syevd.Invoke(System.Int32,System.Char,System.Char,System.Int64,System.IntPtr,System.Int64,System.IntPtr)
  fullName: 'abstract member Tensor.Host.BLAS.__LAPACKE_syevd.Invoke: int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'abstract member __LAPACKE_syevd.Invoke: int * char * char * lapack_int * nativeint * lapack_int * nativeint -> lapack_int'
- uid: Tensor.Host.BLASModule.__LAPACKE_syevd.Invoke*
  name: Invoke
  href: api/Tensor.Host.BLASModule.__LAPACKE_syevd.Invoke.html
  commentId: Overload:Tensor.Host.BLASModule.__LAPACKE_syevd.Invoke*
  fullName: Tensor.Host.BLAS.__LAPACKE_syevd.Invoke
  nameWithType: __LAPACKE_syevd.Invoke
- uid: Tensor.Host.BLASModule.blas_int
  name: BLAS.blas_int (abrv)
  href: api/Tensor.Host.BLASModule.blas_int.html
  commentId: T:Tensor.Host.BLASModule.blas_int
  fullName: Tensor.Host.BLASModule.blas_int
  nameWithType: Tensor.Host.BLASModule.blas_int
- uid: Tensor.Host.BLASModule.CBLAS_LAYOUT
  name: BLAS.CBLAS_LAYOUT
  href: api/Tensor.Host.BLASModule.CBLAS_LAYOUT.html
  commentId: T:Tensor.Host.BLASModule.CBLAS_LAYOUT
  fullName: Tensor.Host.BLASModule.CBLAS_LAYOUT
  nameWithType: Tensor.Host.BLASModule.CBLAS_LAYOUT
- uid: Tensor.Host.BLASModule.CBLAS_LAYOUT.CblasColMajor
  name: 'val CblasColMajor: CBLAS_LAYOUT'
  href: api/Tensor.Host.BLASModule.CBLAS_LAYOUT.html#Tensor_Host_BLASModule_CBLAS_LAYOUT_CblasColMajor
  commentId: P:Tensor.Host.BLASModule.CBLAS_LAYOUT.CblasColMajor
  fullName: 'val Tensor.Host.BLASModule.CBLAS_LAYOUT.CblasColMajor: Tensor.Host.BLASModule.CBLAS_LAYOUT'
  nameWithType: 'val CBLAS_LAYOUT.CblasColMajor: CBLAS_LAYOUT'
- uid: Tensor.Host.BLASModule.CBLAS_LAYOUT.CblasRowMajor
  name: 'val CblasRowMajor: CBLAS_LAYOUT'
  href: api/Tensor.Host.BLASModule.CBLAS_LAYOUT.html#Tensor_Host_BLASModule_CBLAS_LAYOUT_CblasRowMajor
  commentId: P:Tensor.Host.BLASModule.CBLAS_LAYOUT.CblasRowMajor
  fullName: 'val Tensor.Host.BLASModule.CBLAS_LAYOUT.CblasRowMajor: Tensor.Host.BLASModule.CBLAS_LAYOUT'
  nameWithType: 'val CBLAS_LAYOUT.CblasRowMajor: CBLAS_LAYOUT'
- uid: Tensor.Host.BLASModule.CBLAS_TRANSPOSE
  name: BLAS.CBLAS_TRANSPOSE
  href: api/Tensor.Host.BLASModule.CBLAS_TRANSPOSE.html
  commentId: T:Tensor.Host.BLASModule.CBLAS_TRANSPOSE
  fullName: Tensor.Host.BLASModule.CBLAS_TRANSPOSE
  nameWithType: Tensor.Host.BLASModule.CBLAS_TRANSPOSE
- uid: Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasConjTrans
  name: 'val CblasConjTrans: CBLAS_TRANSPOSE'
  href: api/Tensor.Host.BLASModule.CBLAS_TRANSPOSE.html#Tensor_Host_BLASModule_CBLAS_TRANSPOSE_CblasConjTrans
  commentId: P:Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasConjTrans
  fullName: 'val Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasConjTrans: Tensor.Host.BLASModule.CBLAS_TRANSPOSE'
  nameWithType: 'val CBLAS_TRANSPOSE.CblasConjTrans: CBLAS_TRANSPOSE'
- uid: Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasNoTrans
  name: 'val CblasNoTrans: CBLAS_TRANSPOSE'
  href: api/Tensor.Host.BLASModule.CBLAS_TRANSPOSE.html#Tensor_Host_BLASModule_CBLAS_TRANSPOSE_CblasNoTrans
  commentId: P:Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasNoTrans
  fullName: 'val Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasNoTrans: Tensor.Host.BLASModule.CBLAS_TRANSPOSE'
  nameWithType: 'val CBLAS_TRANSPOSE.CblasNoTrans: CBLAS_TRANSPOSE'
- uid: Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasTrans
  name: 'val CblasTrans: CBLAS_TRANSPOSE'
  href: api/Tensor.Host.BLASModule.CBLAS_TRANSPOSE.html#Tensor_Host_BLASModule_CBLAS_TRANSPOSE_CblasTrans
  commentId: P:Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasTrans
  fullName: 'val Tensor.Host.BLASModule.CBLAS_TRANSPOSE.CblasTrans: Tensor.Host.BLASModule.CBLAS_TRANSPOSE'
  nameWithType: 'val CBLAS_TRANSPOSE.CblasTrans: CBLAS_TRANSPOSE'
- uid: Tensor.Host.BLASModule.CBLAS_UPLO
  name: BLAS.CBLAS_UPLO
  href: api/Tensor.Host.BLASModule.CBLAS_UPLO.html
  commentId: T:Tensor.Host.BLASModule.CBLAS_UPLO
  fullName: Tensor.Host.BLASModule.CBLAS_UPLO
  nameWithType: Tensor.Host.BLASModule.CBLAS_UPLO
- uid: Tensor.Host.BLASModule.CBLAS_UPLO.CblasLower
  name: 'val CblasLower: CBLAS_UPLO'
  href: api/Tensor.Host.BLASModule.CBLAS_UPLO.html#Tensor_Host_BLASModule_CBLAS_UPLO_CblasLower
  commentId: P:Tensor.Host.BLASModule.CBLAS_UPLO.CblasLower
  fullName: 'val Tensor.Host.BLASModule.CBLAS_UPLO.CblasLower: Tensor.Host.BLASModule.CBLAS_UPLO'
  nameWithType: 'val CBLAS_UPLO.CblasLower: CBLAS_UPLO'
- uid: Tensor.Host.BLASModule.CBLAS_UPLO.CblasUpper
  name: 'val CblasUpper: CBLAS_UPLO'
  href: api/Tensor.Host.BLASModule.CBLAS_UPLO.html#Tensor_Host_BLASModule_CBLAS_UPLO_CblasUpper
  commentId: P:Tensor.Host.BLASModule.CBLAS_UPLO.CblasUpper
  fullName: 'val Tensor.Host.BLASModule.CBLAS_UPLO.CblasUpper: Tensor.Host.BLASModule.CBLAS_UPLO'
  nameWithType: 'val CBLAS_UPLO.CblasUpper: CBLAS_UPLO'
- uid: Tensor.Host.BLASModule.Impl
  name: BLAS.Impl
  href: api/Tensor.Host.BLASModule.Impl.html
  commentId: T:Tensor.Host.BLASModule.Impl
  fullName: Tensor.Host.BLASModule.Impl
  nameWithType: Tensor.Host.BLASModule.Impl
- uid: Tensor.Host.BLASModule.Impl.#ctor(Tensor.Utils.NativeLibName * Tensor.Utils.NativeLibName)
  name: 'new: NativeLibName * NativeLibName -> Impl'
  href: api/Tensor.Host.BLASModule.Impl.-ctor.html#Tensor_Host_BLASModule_Impl__ctor_Tensor_Utils_NativeLibName___Tensor_Utils_NativeLibName_
  commentId: M:Tensor.Host.BLASModule.Impl.#ctor(Tensor.Utils.NativeLibName,Tensor.Utils.NativeLibName)
  fullName: 'new: Tensor.Utils.NativeLibName * Tensor.Utils.NativeLibName -> Tensor.Host.BLASModule.Impl'
  nameWithType: 'new: NativeLibName * NativeLibName -> Impl'
- uid: Tensor.Host.BLASModule.Impl.#ctor*
  name: ( .ctor )
  href: api/Tensor.Host.BLASModule.Impl.-ctor.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.#ctor*
  fullName: Tensor.Host.BLAS.Impl
  nameWithType: Impl.( .ctor )
- uid: Tensor.Host.BLASModule.Impl.cblas_ddot(Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'member cblas_ddot: blas_int * nativeint * blas_int * nativeint * blas_int -> double'
  href: api/Tensor.Host.BLASModule.Impl.cblas_ddot.html#Tensor_Host_BLASModule_Impl_cblas_ddot_Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_ddot(System.Tuple{System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_ddot: Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int -> double'
  nameWithType: 'member Impl.cblas_ddot: blas_int * nativeint * blas_int * nativeint * blas_int -> double'
- uid: Tensor.Host.BLASModule.Impl.cblas_ddot*
  name: cblas_ddot
  href: api/Tensor.Host.BLASModule.Impl.cblas_ddot.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_ddot*
  fullName: Tensor.Host.BLAS.Impl.cblas_ddot
  nameWithType: Impl.cblas_ddot
- uid: Tensor.Host.BLASModule.Impl.cblas_dgemm(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'member cblas_dgemm: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.Impl.cblas_dgemm.html#Tensor_Host_BLASModule_Impl_cblas_dgemm_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_dgemm(System.Tuple{Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Int64,System.Double,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Double,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_dgemm: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'member Impl.cblas_dgemm: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.Impl.cblas_dgemm*
  name: cblas_dgemm
  href: api/Tensor.Host.BLASModule.Impl.cblas_dgemm.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_dgemm*
  fullName: Tensor.Host.BLAS.Impl.cblas_dgemm
  nameWithType: Impl.cblas_dgemm
- uid: Tensor.Host.BLASModule.Impl.cblas_dgemm_batch(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [])
  name: 'member cblas_dgemm_batch: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * double [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * double [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
  href: api/Tensor.Host.BLASModule.Impl.cblas_dgemm_batch.html#Tensor_Host_BLASModule_Impl_cblas_dgemm_batch_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______double______nativeint______Tensor_Host_BLASModule_blas_int______nativeint______Tensor_Host_BLASModule_blas_int______double______nativeint______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int____
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_dgemm_batch(System.Tuple{Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],System.Int64[],System.Int64[],System.Int64[],System.Double[],System.IntPtr[],System.Int64[],System.IntPtr[],System.Int64[],System.Double[],System.IntPtr[],System.Int64[],System.Int64,System.Int64[]})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_dgemm_batch: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * double [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [] -> unit'
  nameWithType: 'member Impl.cblas_dgemm_batch: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * double [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * double [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
- uid: Tensor.Host.BLASModule.Impl.cblas_dgemm_batch*
  name: cblas_dgemm_batch
  href: api/Tensor.Host.BLASModule.Impl.cblas_dgemm_batch.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_dgemm_batch*
  fullName: Tensor.Host.BLAS.Impl.cblas_dgemm_batch
  nameWithType: Impl.cblas_dgemm_batch
- uid: Tensor.Host.BLASModule.Impl.cblas_dgemv(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'member cblas_dgemv: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.Impl.cblas_dgemv.html#Tensor_Host_BLASModule_Impl_cblas_dgemv_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___double___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_dgemv(System.Tuple{Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Double,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Double,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_dgemv: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * double * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'member Impl.cblas_dgemv: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * double * nativeint * blas_int * nativeint * blas_int * double * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.Impl.cblas_dgemv*
  name: cblas_dgemv
  href: api/Tensor.Host.BLASModule.Impl.cblas_dgemv.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_dgemv*
  fullName: Tensor.Host.BLAS.Impl.cblas_dgemv
  nameWithType: Impl.cblas_dgemv
- uid: Tensor.Host.BLASModule.Impl.cblas_sdot(Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'member cblas_sdot: blas_int * nativeint * blas_int * nativeint * blas_int -> single'
  href: api/Tensor.Host.BLASModule.Impl.cblas_sdot.html#Tensor_Host_BLASModule_Impl_cblas_sdot_Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_sdot(System.Tuple{System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_sdot: Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int -> single'
  nameWithType: 'member Impl.cblas_sdot: blas_int * nativeint * blas_int * nativeint * blas_int -> single'
- uid: Tensor.Host.BLASModule.Impl.cblas_sdot*
  name: cblas_sdot
  href: api/Tensor.Host.BLASModule.Impl.cblas_sdot.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_sdot*
  fullName: Tensor.Host.BLAS.Impl.cblas_sdot
  nameWithType: Impl.cblas_sdot
- uid: Tensor.Host.BLASModule.Impl.cblas_sgemm(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'member cblas_sgemm: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.Impl.cblas_sgemm.html#Tensor_Host_BLASModule_Impl_cblas_sgemm_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_sgemm(System.Tuple{Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Int64,System.Single,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Single,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_sgemm: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'member Impl.cblas_sgemm: CBLAS_LAYOUT * CBLAS_TRANSPOSE * CBLAS_TRANSPOSE * blas_int * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.Impl.cblas_sgemm*
  name: cblas_sgemm
  href: api/Tensor.Host.BLASModule.Impl.cblas_sgemm.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_sgemm*
  fullName: Tensor.Host.BLAS.Impl.cblas_sgemm
  nameWithType: Impl.cblas_sgemm
- uid: Tensor.Host.BLASModule.Impl.cblas_sgemm_batch(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [])
  name: 'member cblas_sgemm_batch: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * single [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * single [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
  href: api/Tensor.Host.BLASModule.Impl.cblas_sgemm_batch.html#Tensor_Host_BLASModule_Impl_cblas_sgemm_batch_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_CBLAS_TRANSPOSE______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int______single______nativeint______Tensor_Host_BLASModule_blas_int______nativeint______Tensor_Host_BLASModule_blas_int______single______nativeint______Tensor_Host_BLASModule_blas_int______Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int____
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_sgemm_batch(System.Tuple{Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],Tensor.Host.BLASModule.CBLAS_TRANSPOSE[],System.Int64[],System.Int64[],System.Int64[],System.Single[],System.IntPtr[],System.Int64[],System.IntPtr[],System.Int64[],System.Single[],System.IntPtr[],System.Int64[],System.Int64,System.Int64[]})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_sgemm_batch: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.CBLAS_TRANSPOSE [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * single [] * nativeint [] * Tensor.Host.BLASModule.blas_int [] * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int [] -> unit'
  nameWithType: 'member Impl.cblas_sgemm_batch: CBLAS_LAYOUT * CBLAS_TRANSPOSE [] * CBLAS_TRANSPOSE [] * blas_int [] * blas_int [] * blas_int [] * single [] * nativeint [] * blas_int [] * nativeint [] * blas_int [] * single [] * nativeint [] * blas_int [] * blas_int * blas_int [] -> unit'
- uid: Tensor.Host.BLASModule.Impl.cblas_sgemm_batch*
  name: cblas_sgemm_batch
  href: api/Tensor.Host.BLASModule.Impl.cblas_sgemm_batch.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_sgemm_batch*
  fullName: Tensor.Host.BLAS.Impl.cblas_sgemm_batch
  nameWithType: Impl.cblas_sgemm_batch
- uid: Tensor.Host.BLASModule.Impl.cblas_sgemv(Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int)
  name: 'member cblas_sgemv: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
  href: api/Tensor.Host.BLASModule.Impl.cblas_sgemv.html#Tensor_Host_BLASModule_Impl_cblas_sgemv_Tensor_Host_BLASModule_CBLAS_LAYOUT___Tensor_Host_BLASModule_CBLAS_TRANSPOSE___Tensor_Host_BLASModule_blas_int___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int___nativeint___Tensor_Host_BLASModule_blas_int___single___nativeint___Tensor_Host_BLASModule_blas_int_
  commentId: M:Tensor.Host.BLASModule.Impl.cblas_sgemv(System.Tuple{Tensor.Host.BLASModule.CBLAS_LAYOUT,Tensor.Host.BLASModule.CBLAS_TRANSPOSE,System.Int64,System.Int64,System.Single,System.IntPtr,System.Int64,System.IntPtr,System.Int64,System.Single,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.cblas_sgemv: Tensor.Host.BLASModule.CBLAS_LAYOUT * Tensor.Host.BLASModule.CBLAS_TRANSPOSE * Tensor.Host.BLASModule.blas_int * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int * nativeint * Tensor.Host.BLASModule.blas_int * single * nativeint * Tensor.Host.BLASModule.blas_int -> unit'
  nameWithType: 'member Impl.cblas_sgemv: CBLAS_LAYOUT * CBLAS_TRANSPOSE * blas_int * blas_int * single * nativeint * blas_int * nativeint * blas_int * single * nativeint * blas_int -> unit'
- uid: Tensor.Host.BLASModule.Impl.cblas_sgemv*
  name: cblas_sgemv
  href: api/Tensor.Host.BLASModule.Impl.cblas_sgemv.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.cblas_sgemv*
  fullName: Tensor.Host.BLAS.Impl.cblas_sgemv
  nameWithType: Impl.cblas_sgemv
- uid: Tensor.Host.BLASModule.Impl.Has_cblas_gemm_batch(unit)
  name: 'property Has_cblas_gemm_batch: bool'
  href: api/Tensor.Host.BLASModule.Impl.Has_cblas_gemm_batch.html#Tensor_Host_BLASModule_Impl_Has_cblas_gemm_batch_unit_
  commentId: P:Tensor.Host.BLASModule.Impl.Has_cblas_gemm_batch
  fullName: 'property Tensor.Host.BLAS.Impl.Has_cblas_gemm_batch: bool'
  nameWithType: 'property Impl.Has_cblas_gemm_batch: bool'
- uid: Tensor.Host.BLASModule.Impl.Has_cblas_gemm_batch*
  name: Has_cblas_gemm_batch
  href: api/Tensor.Host.BLASModule.Impl.Has_cblas_gemm_batch.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.Has_cblas_gemm_batch*
  fullName: Tensor.Host.BLAS.Impl.Has_cblas_gemm_batch
  nameWithType: Impl.Has_cblas_gemm_batch
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgeev(int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int)
  name: 'member LAPACKE_dgeev: int * char * char * lapack_int * nativeint * lapack_int * nativeint * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgeev.html#Tensor_Host_BLASModule_Impl_LAPACKE_dgeev_int___char___char___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___nativeint___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int_
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_dgeev(System.Tuple{System.Int32,System.Char,System.Char,System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.IntPtr,System.IntPtr,System.Int64,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_dgeev: int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_dgeev: int * char * char * lapack_int * nativeint * lapack_int * nativeint * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgeev*
  name: LAPACKE_dgeev
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgeev.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_dgeev*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_dgeev
  nameWithType: Impl.LAPACKE_dgeev
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgesdd(int * char * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int)
  name: 'member LAPACKE_dgesdd: int * char * lapack_int * lapack_int * nativeint * lapack_int * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgesdd.html#Tensor_Host_BLASModule_Impl_LAPACKE_dgesdd_int___char___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int_
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_dgesdd(System.Tuple{System.Int32,System.Char,System.Int64,System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.IntPtr,System.Int64,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_dgesdd: int * char * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_dgesdd: int * char * lapack_int * lapack_int * nativeint * lapack_int * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgesdd*
  name: LAPACKE_dgesdd
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgesdd.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_dgesdd*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_dgesdd
  nameWithType: Impl.LAPACKE_dgesdd
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgetrf(int * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [])
  name: 'member LAPACKE_dgetrf: int * lapack_int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgetrf.html#Tensor_Host_BLASModule_Impl_LAPACKE_dgetrf_int___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int____
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_dgetrf(System.Tuple{System.Int32,System.Int64,System.Int64,System.IntPtr,System.Int64,System.Int64[]})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_dgetrf: int * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [] -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_dgetrf: int * lapack_int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgetrf*
  name: LAPACKE_dgetrf
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgetrf.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_dgetrf*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_dgetrf
  nameWithType: Impl.LAPACKE_dgetrf
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgetri(int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [])
  name: 'member LAPACKE_dgetri: int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgetri.html#Tensor_Host_BLASModule_Impl_LAPACKE_dgetri_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int____
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_dgetri(System.Tuple{System.Int32,System.Int64,System.IntPtr,System.Int64,System.Int64[]})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_dgetri: int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [] -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_dgetri: int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dgetri*
  name: LAPACKE_dgetri
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dgetri.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_dgetri*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_dgetri
  nameWithType: Impl.LAPACKE_dgetri
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dsyevd(int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint)
  name: 'member LAPACKE_dsyevd: int * char * char * lapack_int * nativeint * lapack_int * nativeint -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dsyevd.html#Tensor_Host_BLASModule_Impl_LAPACKE_dsyevd_int___char___char___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint_
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_dsyevd(System.Tuple{System.Int32,System.Char,System.Char,System.Int64,System.IntPtr,System.Int64,System.IntPtr})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_dsyevd: int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_dsyevd: int * char * char * lapack_int * nativeint * lapack_int * nativeint -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_dsyevd*
  name: LAPACKE_dsyevd
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_dsyevd.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_dsyevd*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_dsyevd
  nameWithType: Impl.LAPACKE_dsyevd
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgeev(int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int)
  name: 'member LAPACKE_sgeev: int * char * char * lapack_int * nativeint * lapack_int * nativeint * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgeev.html#Tensor_Host_BLASModule_Impl_LAPACKE_sgeev_int___char___char___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___nativeint___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int_
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_sgeev(System.Tuple{System.Int32,System.Char,System.Char,System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.IntPtr,System.IntPtr,System.Int64,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_sgeev: int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_sgeev: int * char * char * lapack_int * nativeint * lapack_int * nativeint * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgeev*
  name: LAPACKE_sgeev
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgeev.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_sgeev*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_sgeev
  nameWithType: Impl.LAPACKE_sgeev
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgesdd(int * char * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int)
  name: 'member LAPACKE_sgesdd: int * char * lapack_int * lapack_int * nativeint * lapack_int * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgesdd.html#Tensor_Host_BLASModule_Impl_LAPACKE_sgesdd_int___char___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int_
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_sgesdd(System.Tuple{System.Int32,System.Char,System.Int64,System.Int64,System.IntPtr,System.Int64,System.IntPtr,System.IntPtr,System.Int64,System.IntPtr,System.Int64})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_sgesdd: int * char * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_sgesdd: int * char * lapack_int * lapack_int * nativeint * lapack_int * nativeint * nativeint * lapack_int * nativeint * lapack_int -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgesdd*
  name: LAPACKE_sgesdd
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgesdd.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_sgesdd*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_sgesdd
  nameWithType: Impl.LAPACKE_sgesdd
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgetrf(int * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [])
  name: 'member LAPACKE_sgetrf: int * lapack_int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgetrf.html#Tensor_Host_BLASModule_Impl_LAPACKE_sgetrf_int___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int____
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_sgetrf(System.Tuple{System.Int32,System.Int64,System.Int64,System.IntPtr,System.Int64,System.Int64[]})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_sgetrf: int * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [] -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_sgetrf: int * lapack_int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgetrf*
  name: LAPACKE_sgetrf
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgetrf.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_sgetrf*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_sgetrf
  nameWithType: Impl.LAPACKE_sgetrf
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgetri(int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [])
  name: 'member LAPACKE_sgetri: int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgetri.html#Tensor_Host_BLASModule_Impl_LAPACKE_sgetri_int___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___Tensor_Host_BLASModule_lapack_int____
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_sgetri(System.Tuple{System.Int32,System.Int64,System.IntPtr,System.Int64,System.Int64[]})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_sgetri: int * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * Tensor.Host.BLASModule.lapack_int [] -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_sgetri: int * lapack_int * nativeint * lapack_int * lapack_int [] -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_sgetri*
  name: LAPACKE_sgetri
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_sgetri.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_sgetri*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_sgetri
  nameWithType: Impl.LAPACKE_sgetri
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_ssyevd(int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint)
  name: 'member LAPACKE_ssyevd: int * char * char * lapack_int * nativeint * lapack_int * nativeint -> lapack_int'
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_ssyevd.html#Tensor_Host_BLASModule_Impl_LAPACKE_ssyevd_int___char___char___Tensor_Host_BLASModule_lapack_int___nativeint___Tensor_Host_BLASModule_lapack_int___nativeint_
  commentId: M:Tensor.Host.BLASModule.Impl.LAPACKE_ssyevd(System.Tuple{System.Int32,System.Char,System.Char,System.Int64,System.IntPtr,System.Int64,System.IntPtr})
  fullName: 'member Tensor.Host.BLAS.Impl.LAPACKE_ssyevd: int * char * char * Tensor.Host.BLASModule.lapack_int * nativeint * Tensor.Host.BLASModule.lapack_int * nativeint -> Tensor.Host.BLASModule.lapack_int'
  nameWithType: 'member Impl.LAPACKE_ssyevd: int * char * char * lapack_int * nativeint * lapack_int * nativeint -> lapack_int'
- uid: Tensor.Host.BLASModule.Impl.LAPACKE_ssyevd*
  name: LAPACKE_ssyevd
  href: api/Tensor.Host.BLASModule.Impl.LAPACKE_ssyevd.html
  commentId: Overload:Tensor.Host.BLASModule.Impl.LAPACKE_ssyevd*
  fullName: Tensor.Host.BLAS.Impl.LAPACKE_ssyevd
  nameWithType: Impl.LAPACKE_ssyevd
- uid: Tensor.Host.BLASModule.LAPACK_COL_MAJOR()
  name: val LAPACK_COL_MAJOR
  href: api/Tensor.Host.BLASModule.LAPACK_COL_MAJOR%28%29.html
  commentId: P:Tensor.Host.LAPACK_COL_MAJOR
  fullName: 'val Tensor.Host.BLASModule.LAPACK_COL_MAJOR: int'
  nameWithType: 'val BLAS.LAPACK_COL_MAJOR: int'
- uid: Tensor.Host.BLASModule.lapack_int
  name: BLAS.lapack_int (abrv)
  href: api/Tensor.Host.BLASModule.lapack_int.html
  commentId: T:Tensor.Host.BLASModule.lapack_int
  fullName: Tensor.Host.BLASModule.lapack_int
  nameWithType: Tensor.Host.BLASModule.lapack_int
- uid: Tensor.Host.BLASModule.LAPACK_ROW_MAJOR()
  name: val LAPACK_ROW_MAJOR
  href: api/Tensor.Host.BLASModule.LAPACK_ROW_MAJOR%28%29.html
  commentId: P:Tensor.Host.LAPACK_ROW_MAJOR
  fullName: 'val Tensor.Host.BLASModule.LAPACK_ROW_MAJOR: int'
  nameWithType: 'val BLAS.LAPACK_ROW_MAJOR: int'
- uid: Tensor.Host.Cfg
  name: Cfg
  href: api/Tensor.Host.Cfg.html
  commentId: T:Tensor.Host.Cfg
  fullName: Tensor.Host.Cfg
  nameWithType: Tensor.Host.Cfg
- uid: Tensor.Host.Cfg.BLASLib(unit)
  name: 'static property BLASLib: BLASLib'
  href: api/Tensor.Host.Cfg.BLASLib.html#Tensor_Host_Cfg_BLASLib_unit_
  commentId: P:Tensor.Host.Cfg.BLASLib
  fullName: 'static property Tensor.Host.Cfg.BLASLib: Tensor.Host.BLASLib'
  nameWithType: 'static property Cfg.BLASLib: BLASLib'
- uid: Tensor.Host.Cfg.BLASLib*
  name: BLASLib
  href: api/Tensor.Host.Cfg.BLASLib.html
  commentId: Overload:Tensor.Host.Cfg.BLASLib*
  fullName: Tensor.Host.Cfg.BLASLib
  nameWithType: Cfg.BLASLib
- uid: Tensor.Host.ITensorHostStorage
  name: ITensorHostStorage
  href: api/Tensor.Host.ITensorHostStorage.html
  commentId: T:Tensor.Host.ITensorHostStorage
  fullName: Tensor.Host.ITensorHostStorage
  nameWithType: Tensor.Host.ITensorHostStorage
- uid: Tensor.Host.ITensorHostStorage.Data(unit)
  name: 'abstract property Data: Array'
  href: api/Tensor.Host.ITensorHostStorage.Data.html#Tensor_Host_ITensorHostStorage_Data_unit_
  commentId: P:Tensor.Host.ITensorHostStorage.Data
  fullName: 'abstract property Tensor.Host.ITensorHostStorage.Data: System.Array'
  nameWithType: 'abstract property ITensorHostStorage.Data: Array'
- uid: Tensor.Host.ITensorHostStorage.Data*
  name: Data
  href: api/Tensor.Host.ITensorHostStorage.Data.html
  commentId: Overload:Tensor.Host.ITensorHostStorage.Data*
  fullName: Tensor.Host.ITensorHostStorage.Data
  nameWithType: ITensorHostStorage.Data
- uid: Tensor.Host.ITensorHostStorage.DataSize(unit)
  name: 'abstract property DataSize: int64'
  href: api/Tensor.Host.ITensorHostStorage.DataSize.html#Tensor_Host_ITensorHostStorage_DataSize_unit_
  commentId: P:Tensor.Host.ITensorHostStorage.DataSize
  fullName: 'abstract property Tensor.Host.ITensorHostStorage.DataSize: int64'
  nameWithType: 'abstract property ITensorHostStorage.DataSize: int64'
- uid: Tensor.Host.ITensorHostStorage.DataSize*
  name: DataSize
  href: api/Tensor.Host.ITensorHostStorage.DataSize.html
  commentId: Overload:Tensor.Host.ITensorHostStorage.DataSize*
  fullName: Tensor.Host.ITensorHostStorage.DataSize
  nameWithType: ITensorHostStorage.DataSize
- uid: Tensor.Host.ITensorHostStorage.DataSizeInBytes(unit)
  name: 'abstract property DataSizeInBytes: int64'
  href: api/Tensor.Host.ITensorHostStorage.DataSizeInBytes.html#Tensor_Host_ITensorHostStorage_DataSizeInBytes_unit_
  commentId: P:Tensor.Host.ITensorHostStorage.DataSizeInBytes
  fullName: 'abstract property Tensor.Host.ITensorHostStorage.DataSizeInBytes: int64'
  nameWithType: 'abstract property ITensorHostStorage.DataSizeInBytes: int64'
- uid: Tensor.Host.ITensorHostStorage.DataSizeInBytes*
  name: DataSizeInBytes
  href: api/Tensor.Host.ITensorHostStorage.DataSizeInBytes.html
  commentId: Overload:Tensor.Host.ITensorHostStorage.DataSizeInBytes*
  fullName: Tensor.Host.ITensorHostStorage.DataSizeInBytes
  nameWithType: ITensorHostStorage.DataSizeInBytes
- uid: Tensor.Host.ITensorHostStorage.Pin(unit)
  name: 'abstract member Pin: unit -> PinnedMemory'
  href: api/Tensor.Host.ITensorHostStorage.Pin.html#Tensor_Host_ITensorHostStorage_Pin_unit_
  commentId: M:Tensor.Host.ITensorHostStorage.Pin
  fullName: 'abstract member Tensor.Host.ITensorHostStorage.Pin: unit -> Tensor.Host.PinnedMemory'
  nameWithType: 'abstract member ITensorHostStorage.Pin: unit -> PinnedMemory'
- uid: Tensor.Host.ITensorHostStorage.Pin*
  name: Pin
  href: api/Tensor.Host.ITensorHostStorage.Pin.html
  commentId: Overload:Tensor.Host.ITensorHostStorage.Pin*
  fullName: Tensor.Host.ITensorHostStorage.Pin
  nameWithType: ITensorHostStorage.Pin
- uid: Tensor.Host.PinnedMemory
  name: PinnedMemory
  href: api/Tensor.Host.PinnedMemory.html
  commentId: T:Tensor.Host.PinnedMemory
  fullName: Tensor.Host.PinnedMemory
  nameWithType: Tensor.Host.PinnedMemory
- uid: Tensor.Host.PinnedMemory.#ctor(System.Runtime.InteropServices.GCHandle * int64)
  name: 'new: GCHandle * int64 -> PinnedMemory'
  href: api/Tensor.Host.PinnedMemory.-ctor.html#Tensor_Host_PinnedMemory__ctor_System_Runtime_InteropServices_GCHandle___int64_
  commentId: M:Tensor.Host.PinnedMemory.#ctor(System.Runtime.InteropServices.GCHandle,System.Int64)
  fullName: 'new: System.Runtime.InteropServices.GCHandle * int64 -> Tensor.Host.PinnedMemory'
  nameWithType: 'new: GCHandle * int64 -> PinnedMemory'
- uid: Tensor.Host.PinnedMemory.#ctor*
  name: ( .ctor )
  href: api/Tensor.Host.PinnedMemory.-ctor.html
  commentId: Overload:Tensor.Host.PinnedMemory.#ctor*
  fullName: Tensor.Host.PinnedMemory
  nameWithType: PinnedMemory.( .ctor )
- uid: Tensor.Host.PinnedMemory.Finalize(unit)
  name: 'override member Finalize: unit -> unit'
  href: api/Tensor.Host.PinnedMemory.Finalize.html#Tensor_Host_PinnedMemory_Finalize_unit_
  commentId: M:Tensor.Host.PinnedMemory.Finalize
  fullName: 'override member Tensor.Host.PinnedMemory.Finalize: unit -> unit'
  nameWithType: 'override member PinnedMemory.Finalize: unit -> unit'
- uid: Tensor.Host.PinnedMemory.Finalize*
  name: Finalize
  href: api/Tensor.Host.PinnedMemory.Finalize.html
  commentId: Overload:Tensor.Host.PinnedMemory.Finalize*
  fullName: Tensor.Host.PinnedMemory.Finalize
  nameWithType: PinnedMemory.Finalize
- uid: Tensor.Host.PinnedMemory.Ptr(unit)
  name: 'property Ptr: nativeint'
  href: api/Tensor.Host.PinnedMemory.Ptr.html#Tensor_Host_PinnedMemory_Ptr_unit_
  commentId: P:Tensor.Host.PinnedMemory.Ptr
  fullName: 'property Tensor.Host.PinnedMemory.Ptr: nativeint'
  nameWithType: 'property PinnedMemory.Ptr: nativeint'
- uid: Tensor.Host.PinnedMemory.Ptr*
  name: Ptr
  href: api/Tensor.Host.PinnedMemory.Ptr.html
  commentId: Overload:Tensor.Host.PinnedMemory.Ptr*
  fullName: Tensor.Host.PinnedMemory.Ptr
  nameWithType: PinnedMemory.Ptr
- uid: Tensor.Host.PinnedMemory.Size(unit)
  name: 'property Size: int64'
  href: api/Tensor.Host.PinnedMemory.Size.html#Tensor_Host_PinnedMemory_Size_unit_
  commentId: P:Tensor.Host.PinnedMemory.Size
  fullName: 'property Tensor.Host.PinnedMemory.Size: int64'
  nameWithType: 'property PinnedMemory.Size: int64'
- uid: Tensor.Host.PinnedMemory.Size*
  name: Size
  href: api/Tensor.Host.PinnedMemory.Size.html
  commentId: Overload:Tensor.Host.PinnedMemory.Size*
  fullName: Tensor.Host.PinnedMemory.Size
  nameWithType: PinnedMemory.Size
- uid: Tensor.Host.PinnedMemory.System-IDisposable-Dispose(unit)
  name: 'interface IDisposable with member Dispose: unit -> unit'
  href: api/Tensor.Host.PinnedMemory.System-IDisposable-Dispose.html#Tensor_Host_PinnedMemory_System_IDisposable_Dispose_unit_
  commentId: M:Tensor.Host.PinnedMemory.System-IDisposable-Dispose
  fullName: 'interface System.IDisposable with member Tensor.Host.PinnedMemory.Dispose: unit -> unit'
  nameWithType: 'interface IDisposable with member PinnedMemory.Dispose: unit -> unit'
- uid: Tensor.Host.PinnedMemory.System-IDisposable-Dispose*
  name: Dispose
  href: api/Tensor.Host.PinnedMemory.System-IDisposable-Dispose.html
  commentId: Overload:Tensor.Host.PinnedMemory.System-IDisposable-Dispose*
  fullName: Tensor.Host.PinnedMemory.Dispose
  nameWithType: PinnedMemory.Dispose
- uid: Tensor.Host.TensorHostBackend`1
  name: TensorHostBackend<'T>
  href: api/Tensor.Host.TensorHostBackend-1.html
  commentId: T:Tensor.Host.TensorHostBackend`1
  fullName: Tensor.Host.TensorHostBackend`1
  nameWithType: Tensor.Host.TensorHostBackend`1
- uid: Tensor.Host.TensorHostBackend`1.#ctor(Tensor.Backend.TensorLayout * Tensor.Host.TensorHostStorage<'T>)
  name: "new: TensorLayout * TensorHostStorage<'T> -> TensorHostBackend<'T>"
  href: api/Tensor.Host.TensorHostBackend-1.-ctor.html#Tensor_Host_TensorHostBackend_1__ctor_Tensor_Backend_TensorLayout___Tensor_Host_TensorHostStorage__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.#ctor(Tensor.Backend.TensorLayout,Tensor.Host.TensorHostStorage{`0})
  fullName: "new: Tensor.Backend.TensorLayout * Tensor.Host.TensorHostStorage<'T> -> Tensor.Host.TensorHostBackend<'T>"
  nameWithType: "new: TensorLayout * TensorHostStorage<'T> -> TensorHostBackend<'T>"
- uid: Tensor.Host.TensorHostBackend`1.#ctor*
  name: ( .ctor )
  href: api/Tensor.Host.TensorHostBackend-1.-ctor.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.#ctor*
  fullName: Tensor.Host.TensorHostBackend
  nameWithType: TensorHostBackend.( .ctor )
- uid: Tensor.Host.TensorHostBackend`1.Data(unit)
  name: "property Data: 'T []"
  href: api/Tensor.Host.TensorHostBackend-1.Data.html#Tensor_Host_TensorHostBackend_1_Data_unit_
  commentId: P:Tensor.Host.TensorHostBackend`1.Data
  fullName: "property Tensor.Host.TensorHostBackend.Data: 'T []"
  nameWithType: "property TensorHostBackend.Data: 'T []"
- uid: Tensor.Host.TensorHostBackend`1.Data*
  name: Data
  href: api/Tensor.Host.TensorHostBackend-1.Data.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Data*
  fullName: Tensor.Host.TensorHostBackend.Data
  nameWithType: TensorHostBackend.Data
- uid: Tensor.Host.TensorHostBackend`1.Fill(unit -> 'b * Tensor.Backend.ITensorFrontend<'b> * bool)
  name: "member Fill: unit -> 'b * ITensorFrontend<'b> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Fill.html#Tensor_Host_TensorHostBackend_1_Fill_unit_____b___Tensor_Backend_ITensorFrontend__b____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.Fill``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Tensor.Backend.ITensorFrontend{``0},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.Fill: unit -> 'b * Tensor.Backend.ITensorFrontend<'b> * bool -> unit"
  nameWithType: "member TensorHostBackend.Fill: unit -> 'b * ITensorFrontend<'b> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Fill*
  name: Fill
  href: api/Tensor.Host.TensorHostBackend-1.Fill.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Fill*
  fullName: Tensor.Host.TensorHostBackend.Fill
  nameWithType: TensorHostBackend.Fill
- uid: Tensor.Host.TensorHostBackend`1.FillIndexed(int64 [] -> 'b * Tensor.Backend.ITensorFrontend<'b> * bool)
  name: "member FillIndexed: int64 [] -> 'b * ITensorFrontend<'b> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.FillIndexed.html#Tensor_Host_TensorHostBackend_1_FillIndexed_int64________b___Tensor_Backend_ITensorFrontend__b____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.FillIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],``0},Tensor.Backend.ITensorFrontend{``0},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.FillIndexed: int64 [] -> 'b * Tensor.Backend.ITensorFrontend<'b> * bool -> unit"
  nameWithType: "member TensorHostBackend.FillIndexed: int64 [] -> 'b * ITensorFrontend<'b> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.FillIndexed*
  name: FillIndexed
  href: api/Tensor.Host.TensorHostBackend-1.FillIndexed.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.FillIndexed*
  fullName: Tensor.Host.TensorHostBackend.FillIndexed
  nameWithType: TensorHostBackend.FillIndexed
- uid: Tensor.Host.TensorHostBackend`1.FoldLastAxis('b -> 'c -> 'b * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'c> * bool)
  name: "member FoldLastAxis: 'b -> 'c -> 'b * ITensorFrontend<'b> * ITensorFrontend<'b> * ITensorFrontend<'c> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.FoldLastAxis.html#Tensor_Host_TensorHostBackend_1_FoldLastAxis__b_____c_____b___Tensor_Backend_ITensorFrontend__b____Tensor_Backend_ITensorFrontend__b____Tensor_Backend_ITensorFrontend__c____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.FoldLastAxis``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},Tensor.Backend.ITensorFrontend{``0},Tensor.Backend.ITensorFrontend{``0},Tensor.Backend.ITensorFrontend{``1},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.FoldLastAxis: 'b -> 'c -> 'b * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'c> * bool -> unit"
  nameWithType: "member TensorHostBackend.FoldLastAxis: 'b -> 'c -> 'b * ITensorFrontend<'b> * ITensorFrontend<'b> * ITensorFrontend<'c> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.FoldLastAxis*
  name: FoldLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.FoldLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.FoldLastAxis*
  fullName: Tensor.Host.TensorHostBackend.FoldLastAxis
  nameWithType: TensorHostBackend.FoldLastAxis
- uid: Tensor.Host.TensorHostBackend`1.FoldLastAxisIndexed(int64 [] -> '?123649 -> '?123650 -> '?123649 * Tensor.Backend.ITensorFrontend<'?123649> * Tensor.Backend.ITensorFrontend<'?123649> * Tensor.Backend.ITensorFrontend<'?123650> * bool)
  name: "member FoldLastAxisIndexed: int64 [] -> '?123649 -> '?123650 -> '?123649 * ITensorFrontend<'?123649> * ITensorFrontend<'?123649> * ITensorFrontend<'?123650> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.FoldLastAxisIndexed.html#Tensor_Host_TensorHostBackend_1_FoldLastAxisIndexed_int64_________123649______123650______123649___Tensor_Backend_ITensorFrontend___123649____Tensor_Backend_ITensorFrontend___123649____Tensor_Backend_ITensorFrontend___123650____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.FoldLastAxisIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}}},Tensor.Backend.ITensorFrontend{``0},Tensor.Backend.ITensorFrontend{``0},Tensor.Backend.ITensorFrontend{``1},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.FoldLastAxisIndexed: int64 [] -> '?123649 -> '?123650 -> '?123649 * Tensor.Backend.ITensorFrontend<'?123649> * Tensor.Backend.ITensorFrontend<'?123649> * Tensor.Backend.ITensorFrontend<'?123650> * bool -> unit"
  nameWithType: "member TensorHostBackend.FoldLastAxisIndexed: int64 [] -> '?123649 -> '?123650 -> '?123649 * ITensorFrontend<'?123649> * ITensorFrontend<'?123649> * ITensorFrontend<'?123650> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.FoldLastAxisIndexed*
  name: FoldLastAxisIndexed
  href: api/Tensor.Host.TensorHostBackend-1.FoldLastAxisIndexed.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.FoldLastAxisIndexed*
  fullName: Tensor.Host.TensorHostBackend.FoldLastAxisIndexed
  nameWithType: TensorHostBackend.FoldLastAxisIndexed
- uid: Tensor.Host.TensorHostBackend`1.Map('b -> 'c * Tensor.Backend.ITensorFrontend<'c> * Tensor.Backend.ITensorFrontend<'b> * bool)
  name: "member Map: 'b -> 'c * ITensorFrontend<'c> * ITensorFrontend<'b> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Map.html#Tensor_Host_TensorHostBackend_1_Map__b_____c___Tensor_Backend_ITensorFrontend__c____Tensor_Backend_ITensorFrontend__b____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Tensor.Backend.ITensorFrontend{``1},Tensor.Backend.ITensorFrontend{``0},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.Map: 'b -> 'c * Tensor.Backend.ITensorFrontend<'c> * Tensor.Backend.ITensorFrontend<'b> * bool -> unit"
  nameWithType: "member TensorHostBackend.Map: 'b -> 'c * ITensorFrontend<'c> * ITensorFrontend<'b> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Map*
  name: Map
  href: api/Tensor.Host.TensorHostBackend-1.Map.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Map*
  fullName: Tensor.Host.TensorHostBackend.Map
  nameWithType: TensorHostBackend.Map
- uid: Tensor.Host.TensorHostBackend`1.Map2('b -> 'c -> 'd * Tensor.Backend.ITensorFrontend<'d> * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'c> * bool)
  name: "member Map2: 'b -> 'c -> 'd * ITensorFrontend<'d> * ITensorFrontend<'b> * ITensorFrontend<'c> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Map2.html#Tensor_Host_TensorHostBackend_1_Map2__b_____c_____d___Tensor_Backend_ITensorFrontend__d____Tensor_Backend_ITensorFrontend__b____Tensor_Backend_ITensorFrontend__c____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},Tensor.Backend.ITensorFrontend{``2},Tensor.Backend.ITensorFrontend{``0},Tensor.Backend.ITensorFrontend{``1},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.Map2: 'b -> 'c -> 'd * Tensor.Backend.ITensorFrontend<'d> * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'c> * bool -> unit"
  nameWithType: "member TensorHostBackend.Map2: 'b -> 'c -> 'd * ITensorFrontend<'d> * ITensorFrontend<'b> * ITensorFrontend<'c> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Map2*
  name: Map2
  href: api/Tensor.Host.TensorHostBackend-1.Map2.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Map2*
  fullName: Tensor.Host.TensorHostBackend.Map2
  nameWithType: TensorHostBackend.Map2
- uid: Tensor.Host.TensorHostBackend`1.MapIndexed(int64 [] -> 'b -> 'c * Tensor.Backend.ITensorFrontend<'c> * Tensor.Backend.ITensorFrontend<'b> * bool)
  name: "member MapIndexed: int64 [] -> 'b -> 'c * ITensorFrontend<'c> * ITensorFrontend<'b> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.MapIndexed.html#Tensor_Host_TensorHostBackend_1_MapIndexed_int64________b_____c___Tensor_Backend_ITensorFrontend__c____Tensor_Backend_ITensorFrontend__b____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,``1}},Tensor.Backend.ITensorFrontend{``1},Tensor.Backend.ITensorFrontend{``0},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.MapIndexed: int64 [] -> 'b -> 'c * Tensor.Backend.ITensorFrontend<'c> * Tensor.Backend.ITensorFrontend<'b> * bool -> unit"
  nameWithType: "member TensorHostBackend.MapIndexed: int64 [] -> 'b -> 'c * ITensorFrontend<'c> * ITensorFrontend<'b> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.MapIndexed*
  name: MapIndexed
  href: api/Tensor.Host.TensorHostBackend-1.MapIndexed.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.MapIndexed*
  fullName: Tensor.Host.TensorHostBackend.MapIndexed
  nameWithType: TensorHostBackend.MapIndexed
- uid: Tensor.Host.TensorHostBackend`1.MapIndexed2(int64 [] -> 'b -> 'c -> 'd * Tensor.Backend.ITensorFrontend<'d> * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'c> * bool)
  name: "member MapIndexed2: int64 [] -> 'b -> 'c -> 'd * ITensorFrontend<'d> * ITensorFrontend<'b> * ITensorFrontend<'c> * bool -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.MapIndexed2.html#Tensor_Host_TensorHostBackend_1_MapIndexed2_int64________b_____c_____d___Tensor_Backend_ITensorFrontend__d____Tensor_Backend_ITensorFrontend__b____Tensor_Backend_ITensorFrontend__c____bool_
  commentId: M:Tensor.Host.TensorHostBackend`1.MapIndexed2``3(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},Tensor.Backend.ITensorFrontend{``2},Tensor.Backend.ITensorFrontend{``0},Tensor.Backend.ITensorFrontend{``1},System.Boolean)
  fullName: "member Tensor.Host.TensorHostBackend.MapIndexed2: int64 [] -> 'b -> 'c -> 'd * Tensor.Backend.ITensorFrontend<'d> * Tensor.Backend.ITensorFrontend<'b> * Tensor.Backend.ITensorFrontend<'c> * bool -> unit"
  nameWithType: "member TensorHostBackend.MapIndexed2: int64 [] -> 'b -> 'c -> 'd * ITensorFrontend<'d> * ITensorFrontend<'b> * ITensorFrontend<'c> * bool -> unit"
- uid: Tensor.Host.TensorHostBackend`1.MapIndexed2*
  name: MapIndexed2
  href: api/Tensor.Host.TensorHostBackend-1.MapIndexed2.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.MapIndexed2*
  fullName: Tensor.Host.TensorHostBackend.MapIndexed2
  nameWithType: TensorHostBackend.MapIndexed2
- uid: Tensor.Host.TensorHostBackend`1.Storage(unit)
  name: "property Storage: TensorHostStorage<'T>"
  href: api/Tensor.Host.TensorHostBackend-1.Storage.html#Tensor_Host_TensorHostBackend_1_Storage_unit_
  commentId: P:Tensor.Host.TensorHostBackend`1.Storage
  fullName: "property Tensor.Host.TensorHostBackend.Storage: Tensor.Host.TensorHostStorage<'T>"
  nameWithType: "property TensorHostBackend.Storage: TensorHostStorage<'T>"
- uid: Tensor.Host.TensorHostBackend`1.Storage*
  name: Storage
  href: api/Tensor.Host.TensorHostBackend-1.Storage.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Storage*
  fullName: Tensor.Host.TensorHostBackend.Storage
  nameWithType: TensorHostBackend.Storage
- uid: Tensor.Host.TensorHostBackend`1.System-Collections-Generic-IEnumerable`1-GetEnumerator(unit)
  name: "interface IEnumerable<'T> with member GetEnumerator: unit -> IEnumerator<'T>"
  href: api/Tensor.Host.TensorHostBackend-1.System-Collections-Generic-IEnumerable-1-GetEnumerator.html#Tensor_Host_TensorHostBackend_1_System_Collections_Generic_IEnumerable_1_GetEnumerator_unit_
  commentId: M:Tensor.Host.TensorHostBackend`1.System-Collections-Generic-IEnumerable`1-GetEnumerator
  fullName: "interface System.Collections.Generic.IEnumerable<'T> with member Tensor.Host.TensorHostBackend.GetEnumerator: unit -> System.Collections.Generic.IEnumerator<'T>"
  nameWithType: "interface IEnumerable<'T> with member TensorHostBackend.GetEnumerator: unit -> IEnumerator<'T>"
- uid: Tensor.Host.TensorHostBackend`1.System-Collections-Generic-IEnumerable`1-GetEnumerator*
  name: GetEnumerator
  href: api/Tensor.Host.TensorHostBackend-1.System-Collections-Generic-IEnumerable-1-GetEnumerator.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.System-Collections-Generic-IEnumerable`1-GetEnumerator*
  fullName: Tensor.Host.TensorHostBackend.GetEnumerator
  nameWithType: TensorHostBackend.GetEnumerator
- uid: Tensor.Host.TensorHostBackend`1.System-Collections-IEnumerable-GetEnumerator(unit)
  name: 'interface IEnumerable with member GetEnumerator: unit -> IEnumerator'
  href: api/Tensor.Host.TensorHostBackend-1.System-Collections-IEnumerable-GetEnumerator.html#Tensor_Host_TensorHostBackend_1_System_Collections_IEnumerable_GetEnumerator_unit_
  commentId: M:Tensor.Host.TensorHostBackend`1.System-Collections-IEnumerable-GetEnumerator
  fullName: 'interface System.Collections.IEnumerable with member Tensor.Host.TensorHostBackend.GetEnumerator: unit -> System.Collections.IEnumerator'
  nameWithType: 'interface IEnumerable with member TensorHostBackend.GetEnumerator: unit -> IEnumerator'
- uid: Tensor.Host.TensorHostBackend`1.System-Collections-IEnumerable-GetEnumerator*
  name: GetEnumerator
  href: api/Tensor.Host.TensorHostBackend-1.System-Collections-IEnumerable-GetEnumerator.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.System-Collections-IEnumerable-GetEnumerator*
  fullName: Tensor.Host.TensorHostBackend.GetEnumerator
  nameWithType: TensorHostBackend.GetEnumerator
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Abs(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Abs: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Abs.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Abs_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Abs(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Abs: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Abs: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Abs*
  name: Abs
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Abs.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Abs*
  fullName: Tensor.Host.TensorHostBackend.Abs
  nameWithType: TensorHostBackend.Abs
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Acos(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Acos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Acos.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Acos_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Acos(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Acos: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Acos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Acos*
  name: Acos
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Acos.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Acos*
  fullName: Tensor.Host.TensorHostBackend.Acos
  nameWithType: TensorHostBackend.Acos
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Add(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Add: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Add.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Add_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Add(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Add: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Add: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Add*
  name: Add
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Add.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Add*
  fullName: Tensor.Host.TensorHostBackend.Add
  nameWithType: TensorHostBackend.Add
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member AllLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-AllLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_AllLastAxis_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.AllLastAxis: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.AllLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis*
  name: AllLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-AllLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AllLastAxis*
  fullName: Tensor.Host.TensorHostBackend.AllLastAxis
  nameWithType: TensorHostBackend.AllLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-And(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member And: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-And.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_And_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-And(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.And: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.And: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-And*
  name: And
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-And.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-And*
  fullName: Tensor.Host.TensorHostBackend.And
  nameWithType: TensorHostBackend.And
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member AnyLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-AnyLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_AnyLastAxis_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.AnyLastAxis: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.AnyLastAxis: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis*
  name: AnyLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-AnyLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-AnyLastAxis*
  fullName: Tensor.Host.TensorHostBackend.AnyLastAxis
  nameWithType: TensorHostBackend.AnyLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member ArgMaxLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-ArgMaxLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_ArgMaxLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.ArgMaxLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.ArgMaxLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis*
  name: ArgMaxLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-ArgMaxLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMaxLastAxis*
  fullName: Tensor.Host.TensorHostBackend.ArgMaxLastAxis
  nameWithType: TensorHostBackend.ArgMaxLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member ArgMinLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-ArgMinLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_ArgMinLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.ArgMinLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.ArgMinLastAxis: ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis*
  name: ArgMinLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-ArgMinLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ArgMinLastAxis*
  fullName: Tensor.Host.TensorHostBackend.ArgMinLastAxis
  nameWithType: TensorHostBackend.ArgMinLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Asin(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Asin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Asin.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Asin_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Asin(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Asin: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Asin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Asin*
  name: Asin
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Asin.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Asin*
  fullName: Tensor.Host.TensorHostBackend.Asin
  nameWithType: TensorHostBackend.Asin
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Atan(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Atan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Atan.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Atan_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Atan(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Atan: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Atan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Atan*
  name: Atan
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Atan.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Atan*
  fullName: Tensor.Host.TensorHostBackend.Atan
  nameWithType: TensorHostBackend.Atan
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member BatchedInvert: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-BatchedInvert.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_BatchedInvert_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.BatchedInvert: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.BatchedInvert: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert*
  name: BatchedInvert
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-BatchedInvert.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedInvert*
  fullName: Tensor.Host.TensorHostBackend.BatchedInvert
  nameWithType: TensorHostBackend.BatchedInvert
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member BatchedMatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-BatchedMatMatDot.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_BatchedMatMatDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.BatchedMatMatDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.BatchedMatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot*
  name: BatchedMatMatDot
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-BatchedMatMatDot.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedMatMatDot*
  fullName: Tensor.Host.TensorHostBackend.BatchedMatMatDot
  nameWithType: TensorHostBackend.BatchedMatMatDot
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> option * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member BatchedSVD: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> option * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-BatchedSVD.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_BatchedSVD_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__option___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{System.Tuple{Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.BatchedSVD: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> option * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.BatchedSVD: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> option * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD*
  name: BatchedSVD
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-BatchedSVD.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-BatchedSVD*
  fullName: Tensor.Host.TensorHostBackend.BatchedSVD
  nameWithType: TensorHostBackend.BatchedSVD
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Ceiling: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Ceiling.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Ceiling_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Ceiling: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Ceiling: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling*
  name: Ceiling
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Ceiling.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Ceiling*
  fullName: Tensor.Host.TensorHostBackend.Ceiling
  nameWithType: TensorHostBackend.Ceiling
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Convert(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'?123664>)
  name: "interface ITensorBackend<'T> with member Convert: ITensorFrontend<'T> * ITensorFrontend<'?123664> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Convert.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Convert_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend___123664__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Convert``1(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{``0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Convert: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'?123664> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Convert: ITensorFrontend<'T> * ITensorFrontend<'?123664> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Convert*
  name: Convert
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Convert.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Convert*
  fullName: Tensor.Host.TensorHostBackend.Convert
  nameWithType: TensorHostBackend.Convert
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Copy(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Copy: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Copy.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Copy_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Copy(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Copy: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Copy: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Copy*
  name: Copy
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Copy.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Copy*
  fullName: Tensor.Host.TensorHostBackend.Copy
  nameWithType: TensorHostBackend.Copy
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cos(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Cos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Cos.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Cos_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cos(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Cos: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Cos: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cos*
  name: Cos
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Cos.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cos*
  fullName: Tensor.Host.TensorHostBackend.Cos
  nameWithType: TensorHostBackend.Cos
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cosh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Cosh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Cosh.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Cosh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cosh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Cosh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Cosh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cosh*
  name: Cosh
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Cosh.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Cosh*
  fullName: Tensor.Host.TensorHostBackend.Cosh
  nameWithType: TensorHostBackend.Cosh
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member CountTrueLastAxis: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-CountTrueLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_CountTrueLastAxis_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.CountTrueLastAxis: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.CountTrueLastAxis: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis*
  name: CountTrueLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-CountTrueLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-CountTrueLastAxis*
  fullName: Tensor.Host.TensorHostBackend.CountTrueLastAxis
  nameWithType: TensorHostBackend.CountTrueLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Divide(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Divide: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Divide.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Divide_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Divide(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Divide: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Divide: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Divide*
  name: Divide
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Divide.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Divide*
  fullName: Tensor.Host.TensorHostBackend.Divide
  nameWithType: TensorHostBackend.Divide
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Equal(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Equal: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Equal.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Equal_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Equal(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Equal: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Equal: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Equal*
  name: Equal
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Equal.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Equal*
  fullName: Tensor.Host.TensorHostBackend.Equal
  nameWithType: TensorHostBackend.Equal
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Exp(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Exp: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Exp.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Exp_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Exp(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Exp: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Exp: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Exp*
  name: Exp
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Exp.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Exp*
  fullName: Tensor.Host.TensorHostBackend.Exp
  nameWithType: TensorHostBackend.Exp
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillConst('T * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member FillConst: 'T * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-FillConst.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_FillConst__T___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillConst(`0,Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.FillConst: 'T * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.FillConst: 'T * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillConst*
  name: FillConst
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-FillConst.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillConst*
  fullName: Tensor.Host.TensorHostBackend.FillConst
  nameWithType: TensorHostBackend.FillConst
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing('T * 'T * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member FillIncrementing: 'T * 'T * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-FillIncrementing.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_FillIncrementing__T____T___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing(`0,`0,Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.FillIncrementing: 'T * 'T * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.FillIncrementing: 'T * 'T * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing*
  name: FillIncrementing
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-FillIncrementing.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FillIncrementing*
  fullName: Tensor.Host.TensorHostBackend.FillIncrementing
  nameWithType: TensorHostBackend.FillIncrementing
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis('T * Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member FindLastAxis: 'T * ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-FindLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_FindLastAxis__T___Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis(`0,Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.FindLastAxis: 'T * Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.FindLastAxis: 'T * ITensorFrontend<int64> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis*
  name: FindLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-FindLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-FindLastAxis*
  fullName: Tensor.Host.TensorHostBackend.FindLastAxis
  nameWithType: TensorHostBackend.FindLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Floor(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Floor: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Floor.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Floor_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Floor(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Floor: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Floor: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Floor*
  name: Floor
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Floor.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Floor*
  fullName: Tensor.Host.TensorHostBackend.Floor
  nameWithType: TensorHostBackend.Floor
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Gather(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Gather: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Gather.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Gather_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_int64__option_list___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Gather(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Int64}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Gather: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Gather: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Gather*
  name: Gather
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Gather.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Gather*
  fullName: Tensor.Host.TensorHostBackend.Gather
  nameWithType: TensorHostBackend.Gather
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-get_Item(int64 [])
  name: "interface ITensorBackend<'T> with member Item: int64 [] -> 'T"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-get_Item.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_get_Item_int64____
  commentId: P:Tensor.Host.TensorHostBackend`1.Item(System.Int64[])
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Item: int64 [] -> 'T"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Item: int64 [] -> 'T"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-get_Item*
  name: Item
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-get_Item.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-get_Item*
  fullName: Tensor.Host.TensorHostBackend.Item
  nameWithType: TensorHostBackend.Item
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Greater(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Greater: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Greater.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Greater_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Greater(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Greater: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Greater: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Greater*
  name: Greater
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Greater.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Greater*
  fullName: Tensor.Host.TensorHostBackend.Greater
  nameWithType: TensorHostBackend.Greater
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member GreaterOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-GreaterOrEqual.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_GreaterOrEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.GreaterOrEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.GreaterOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual*
  name: GreaterOrEqual
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-GreaterOrEqual.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-GreaterOrEqual*
  fullName: Tensor.Host.TensorHostBackend.GreaterOrEqual
  nameWithType: TensorHostBackend.GreaterOrEqual
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member IfThenElse: ITensorFrontend<'T> * ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-IfThenElse.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_IfThenElse_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.IfThenElse: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.IfThenElse: ITensorFrontend<'T> * ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse*
  name: IfThenElse
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-IfThenElse.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IfThenElse*
  fullName: Tensor.Host.TensorHostBackend.IfThenElse
  nameWithType: TensorHostBackend.IfThenElse
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member IsFinite: ITensorFrontend<bool> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-IsFinite.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_IsFinite_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.IsFinite: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.IsFinite: ITensorFrontend<bool> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite*
  name: IsFinite
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-IsFinite.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-IsFinite*
  fullName: Tensor.Host.TensorHostBackend.IsFinite
  nameWithType: TensorHostBackend.IsFinite
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Less(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Less: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Less.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Less_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Less(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Less: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Less: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Less*
  name: Less
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Less.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Less*
  fullName: Tensor.Host.TensorHostBackend.Less
  nameWithType: TensorHostBackend.Less
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member LessOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-LessOrEqual.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_LessOrEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.LessOrEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.LessOrEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual*
  name: LessOrEqual
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-LessOrEqual.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-LessOrEqual*
  fullName: Tensor.Host.TensorHostBackend.LessOrEqual
  nameWithType: TensorHostBackend.LessOrEqual
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Log: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Log.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Log_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Log: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Log: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log*
  name: Log
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Log.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log*
  fullName: Tensor.Host.TensorHostBackend.Log
  nameWithType: TensorHostBackend.Log
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log10(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Log10: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Log10.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Log10_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log10(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Log10: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Log10: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log10*
  name: Log10
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Log10.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Log10*
  fullName: Tensor.Host.TensorHostBackend.Log10
  nameWithType: TensorHostBackend.Log10
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [])
  name: "interface ITensorBackend<'T> with member MaskedGet: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<bool> option [] -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaskedGet.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MaskedGet_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool__option____
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Boolean}}[])
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MaskedGet: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MaskedGet: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<bool> option [] -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet*
  name: MaskedGet
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaskedGet.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedGet*
  fullName: Tensor.Host.TensorHostBackend.MaskedGet
  nameWithType: TensorHostBackend.MaskedGet
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MaskedSet: ITensorFrontend<'T> * ITensorFrontend<bool> option [] * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaskedSet.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MaskedSet_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_bool__option______Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Boolean}}[],Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MaskedSet: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<bool> option [] * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MaskedSet: ITensorFrontend<'T> * ITensorFrontend<bool> option [] * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet*
  name: MaskedSet
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaskedSet.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaskedSet*
  fullName: Tensor.Host.TensorHostBackend.MaskedSet
  nameWithType: TensorHostBackend.MaskedSet
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MatMatDot.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MatMatDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MatMatDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MatMatDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot*
  name: MatMatDot
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MatMatDot.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatMatDot*
  fullName: Tensor.Host.TensorHostBackend.MatMatDot
  nameWithType: TensorHostBackend.MatMatDot
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MatVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MatVecDot.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MatVecDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MatVecDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MatVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot*
  name: MatVecDot
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MatVecDot.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MatVecDot*
  fullName: Tensor.Host.TensorHostBackend.MatVecDot
  nameWithType: TensorHostBackend.MatVecDot
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MaxElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaxElemwise.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MaxElemwise_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MaxElemwise: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MaxElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise*
  name: MaxElemwise
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaxElemwise.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxElemwise*
  fullName: Tensor.Host.TensorHostBackend.MaxElemwise
  nameWithType: TensorHostBackend.MaxElemwise
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MaxLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaxLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MaxLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MaxLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MaxLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis*
  name: MaxLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MaxLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MaxLastAxis*
  fullName: Tensor.Host.TensorHostBackend.MaxLastAxis
  nameWithType: TensorHostBackend.MaxLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MinElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MinElemwise.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MinElemwise_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MinElemwise: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MinElemwise: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise*
  name: MinElemwise
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MinElemwise.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinElemwise*
  fullName: Tensor.Host.TensorHostBackend.MinElemwise
  nameWithType: TensorHostBackend.MinElemwise
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member MinLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MinLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_MinLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.MinLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.MinLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis*
  name: MinLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-MinLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-MinLastAxis*
  fullName: Tensor.Host.TensorHostBackend.MinLastAxis
  nameWithType: TensorHostBackend.MinLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Modulo(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Modulo: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Modulo.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Modulo_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Modulo(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Modulo: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Modulo: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Modulo*
  name: Modulo
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Modulo.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Modulo*
  fullName: Tensor.Host.TensorHostBackend.Modulo
  nameWithType: TensorHostBackend.Modulo
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Multiply(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Multiply: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Multiply.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Multiply_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Multiply(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Multiply: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Multiply: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Multiply*
  name: Multiply
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Multiply.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Multiply*
  fullName: Tensor.Host.TensorHostBackend.Multiply
  nameWithType: TensorHostBackend.Multiply
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Negate(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member Negate: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Negate.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Negate_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Negate(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Negate: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Negate: ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Negate*
  name: Negate
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Negate.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Negate*
  fullName: Tensor.Host.TensorHostBackend.Negate
  nameWithType: TensorHostBackend.Negate
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member NotEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-NotEqual.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_NotEqual_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.NotEqual: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.NotEqual: ITensorFrontend<bool> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual*
  name: NotEqual
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-NotEqual.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-NotEqual*
  fullName: Tensor.Host.TensorHostBackend.NotEqual
  nameWithType: TensorHostBackend.NotEqual
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Or(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member Or: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Or.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Or_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Or(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Or: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Or: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Or*
  name: Or
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Or.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Or*
  fullName: Tensor.Host.TensorHostBackend.Or
  nameWithType: TensorHostBackend.Or
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Power(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Power: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Power.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Power_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Power(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Power: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Power: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Power*
  name: Power
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Power.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Power*
  fullName: Tensor.Host.TensorHostBackend.Power
  nameWithType: TensorHostBackend.Power
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member ProductLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-ProductLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_ProductLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.ProductLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.ProductLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis*
  name: ProductLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-ProductLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-ProductLastAxis*
  fullName: Tensor.Host.TensorHostBackend.ProductLastAxis
  nameWithType: TensorHostBackend.ProductLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Round(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Round: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Round.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Round_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Round(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Round: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Round: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Round*
  name: Round
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Round.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Round*
  fullName: Tensor.Host.TensorHostBackend.Round
  nameWithType: TensorHostBackend.Round
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Scatter(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Scatter: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Scatter.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Scatter_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend_int64__option_list___Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Scatter(Tensor.Backend.ITensorFrontend{`0},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Backend.ITensorFrontend{System.Int64}}},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Scatter: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<int64> option list * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Scatter: ITensorFrontend<'T> * ITensorFrontend<int64> option list * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Scatter*
  name: Scatter
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Scatter.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Scatter*
  fullName: Tensor.Host.TensorHostBackend.Scatter
  nameWithType: TensorHostBackend.Scatter
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-set_Item(int64 [] * 'T)
  name: "interface ITensorBackend<'T> with member Item: int64 [] * 'T -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-set_Item.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_set_Item_int64_______T_
  commentId: P:Tensor.Host.TensorHostBackend`1.Item(System.Int64[],`0)
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Item: int64 [] * 'T -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Item: int64 [] * 'T -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-set_Item*
  name: Item
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-set_Item.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-set_Item*
  fullName: Tensor.Host.TensorHostBackend.Item
  nameWithType: TensorHostBackend.Item
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sgn(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sgn: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sgn.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Sgn_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sgn(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Sgn: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Sgn: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sgn*
  name: Sgn
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sgn.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sgn*
  fullName: Tensor.Host.TensorHostBackend.Sgn
  nameWithType: TensorHostBackend.Sgn
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sin(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sin.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Sin_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sin(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Sin: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Sin: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sin*
  name: Sin
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sin.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sin*
  fullName: Tensor.Host.TensorHostBackend.Sin
  nameWithType: TensorHostBackend.Sin
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sinh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sinh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sinh.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Sinh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sinh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Sinh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Sinh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sinh*
  name: Sinh
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sinh.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sinh*
  fullName: Tensor.Host.TensorHostBackend.Sinh
  nameWithType: TensorHostBackend.Sinh
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Sqrt: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sqrt.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Sqrt_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Sqrt: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Sqrt: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt*
  name: Sqrt
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Sqrt.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Sqrt*
  fullName: Tensor.Host.TensorHostBackend.Sqrt
  nameWithType: TensorHostBackend.Sqrt
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Subtract(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Subtract: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Subtract.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Subtract_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Subtract(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Subtract: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Subtract: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Subtract*
  name: Subtract
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Subtract.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Subtract*
  fullName: Tensor.Host.TensorHostBackend.Subtract
  nameWithType: TensorHostBackend.Subtract
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member SumLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-SumLastAxis.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_SumLastAxis_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.SumLastAxis: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.SumLastAxis: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis*
  name: SumLastAxis
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-SumLastAxis.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SumLastAxis*
  fullName: Tensor.Host.TensorHostBackend.SumLastAxis
  nameWithType: TensorHostBackend.SumLastAxis
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition(Tensor.MatrixPart * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member SymmetricEigenDecomposition: MatrixPart * ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-SymmetricEigenDecomposition.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_SymmetricEigenDecomposition_Tensor_MatrixPart___Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition(Tensor.MatrixPart,Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.SymmetricEigenDecomposition: Tensor.MatrixPart * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.SymmetricEigenDecomposition: MatrixPart * ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition*
  name: SymmetricEigenDecomposition
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-SymmetricEigenDecomposition.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-SymmetricEigenDecomposition*
  fullName: Tensor.Host.TensorHostBackend.SymmetricEigenDecomposition
  nameWithType: TensorHostBackend.SymmetricEigenDecomposition
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tan(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Tan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Tan.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Tan_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tan(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Tan: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Tan: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tan*
  name: Tan
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Tan.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tan*
  fullName: Tensor.Host.TensorHostBackend.Tan
  nameWithType: TensorHostBackend.Tan
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tanh(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Tanh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Tanh.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Tanh_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tanh(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Tanh: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Tanh: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tanh*
  name: Tanh
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Tanh.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Tanh*
  fullName: Tensor.Host.TensorHostBackend.Tanh
  nameWithType: TensorHostBackend.Tanh
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Transfer(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Transfer: ITensorFrontend<'T> * ITensorFrontend<'T> -> bool"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Transfer.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Transfer_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Transfer(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Transfer: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> bool"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Transfer: ITensorFrontend<'T> * ITensorFrontend<'T> -> bool"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Transfer*
  name: Transfer
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Transfer.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Transfer*
  fullName: Tensor.Host.TensorHostBackend.Transfer
  nameWithType: TensorHostBackend.Transfer
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices(Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member TrueIndices: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-TrueIndices.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_TrueIndices_Tensor_Backend_ITensorFrontend_int64____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices(Tensor.Backend.ITensorFrontend{System.Int64},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.TrueIndices: Tensor.Backend.ITensorFrontend<int64> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.TrueIndices: ITensorFrontend<int64> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices*
  name: TrueIndices
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-TrueIndices.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-TrueIndices*
  fullName: Tensor.Host.TensorHostBackend.TrueIndices
  nameWithType: TensorHostBackend.TrueIndices
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Truncate(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member Truncate: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Truncate.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Truncate_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Truncate(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Truncate: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Truncate: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Truncate*
  name: Truncate
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Truncate.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Truncate*
  fullName: Tensor.Host.TensorHostBackend.Truncate
  nameWithType: TensorHostBackend.Truncate
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member UnaryMinus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-UnaryMinus.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_UnaryMinus_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.UnaryMinus: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.UnaryMinus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus*
  name: UnaryMinus
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-UnaryMinus.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryMinus*
  fullName: Tensor.Host.TensorHostBackend.UnaryMinus
  nameWithType: TensorHostBackend.UnaryMinus
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member UnaryPlus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-UnaryPlus.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_UnaryPlus_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.UnaryPlus: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.UnaryPlus: ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus*
  name: UnaryPlus
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-UnaryPlus.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-UnaryPlus*
  fullName: Tensor.Host.TensorHostBackend.UnaryPlus
  nameWithType: TensorHostBackend.UnaryPlus
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot(Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T>)
  name: "interface ITensorBackend<'T> with member VecVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-VecVecDot.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_VecVecDot_Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T____Tensor_Backend_ITensorFrontend__T__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot(Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0},Tensor.Backend.ITensorFrontend{`0})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.VecVecDot: Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> * Tensor.Backend.ITensorFrontend<'T> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.VecVecDot: ITensorFrontend<'T> * ITensorFrontend<'T> * ITensorFrontend<'T> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot*
  name: VecVecDot
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-VecVecDot.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-VecVecDot*
  fullName: Tensor.Host.TensorHostBackend.VecVecDot
  nameWithType: TensorHostBackend.VecVecDot
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Xor(Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool>)
  name: "interface ITensorBackend<'T> with member Xor: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Xor.html#Tensor_Host_TensorHostBackend_1_Tensor_Backend_ITensorBackend_1_Xor_Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool____Tensor_Backend_ITensorFrontend_bool__
  commentId: M:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Xor(Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean},Tensor.Backend.ITensorFrontend{System.Boolean})
  fullName: "interface Tensor.Backend.ITensorBackend<'T> with member Tensor.Host.TensorHostBackend.Xor: Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> * Tensor.Backend.ITensorFrontend<bool> -> unit"
  nameWithType: "interface ITensorBackend<'T> with member TensorHostBackend.Xor: ITensorFrontend<bool> * ITensorFrontend<bool> * ITensorFrontend<bool> -> unit"
- uid: Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Xor*
  name: Xor
  href: api/Tensor.Host.TensorHostBackend-1.Tensor-Backend-ITensorBackend-1-Xor.html
  commentId: Overload:Tensor.Host.TensorHostBackend`1.Tensor-Backend-ITensorBackend`1-Xor*
  fullName: Tensor.Host.TensorHostBackend.Xor
  nameWithType: TensorHostBackend.Xor
- uid: Tensor.Host.TensorHostDevice
  name: TensorHostDevice
  href: api/Tensor.Host.TensorHostDevice.html
  commentId: T:Tensor.Host.TensorHostDevice
  fullName: Tensor.Host.TensorHostDevice
  nameWithType: Tensor.Host.TensorHostDevice
- uid: Tensor.Host.TensorHostDevice.Create(int64)
  name: "override member Create: int64 -> ITensorStorage<'?123796>"
  href: api/Tensor.Host.TensorHostDevice.Create.html#Tensor_Host_TensorHostDevice_Create_int64_
  commentId: M:Tensor.Host.TensorHostDevice.Create``1(System.Int64)
  fullName: "override member Tensor.Host.TensorHostDevice.Create: int64 -> Tensor.Backend.ITensorStorage<'?123796>"
  nameWithType: "override member TensorHostDevice.Create: int64 -> ITensorStorage<'?123796>"
- uid: Tensor.Host.TensorHostDevice.Create*
  name: Create
  href: api/Tensor.Host.TensorHostDevice.Create.html
  commentId: Overload:Tensor.Host.TensorHostDevice.Create*
  fullName: Tensor.Host.TensorHostDevice.Create
  nameWithType: TensorHostDevice.Create
- uid: Tensor.Host.TensorHostDevice.Id(unit)
  name: 'override property Id: string'
  href: api/Tensor.Host.TensorHostDevice.Id.html#Tensor_Host_TensorHostDevice_Id_unit_
  commentId: P:Tensor.Host.TensorHostDevice.Id
  fullName: 'override property Tensor.Host.TensorHostDevice.Id: string'
  nameWithType: 'override property TensorHostDevice.Id: string'
- uid: Tensor.Host.TensorHostDevice.Id*
  name: Id
  href: api/Tensor.Host.TensorHostDevice.Id.html
  commentId: Overload:Tensor.Host.TensorHostDevice.Id*
  fullName: Tensor.Host.TensorHostDevice.Id
  nameWithType: TensorHostDevice.Id
- uid: Tensor.Host.TensorHostDevice.Instance(unit)
  name: 'static property Instance: TensorHostDevice'
  href: api/Tensor.Host.TensorHostDevice.Instance.html#Tensor_Host_TensorHostDevice_Instance_unit_
  commentId: P:Tensor.Host.TensorHostDevice.Instance
  fullName: 'static property Tensor.Host.TensorHostDevice.Instance: Tensor.Host.TensorHostDevice'
  nameWithType: 'static property TensorHostDevice.Instance: TensorHostDevice'
- uid: Tensor.Host.TensorHostDevice.Instance*
  name: Instance
  href: api/Tensor.Host.TensorHostDevice.Instance.html
  commentId: Overload:Tensor.Host.TensorHostDevice.Instance*
  fullName: Tensor.Host.TensorHostDevice.Instance
  nameWithType: TensorHostDevice.Instance
- uid: Tensor.Host.TensorHostDevice.Zeroed(unit)
  name: 'override property Zeroed: bool'
  href: api/Tensor.Host.TensorHostDevice.Zeroed.html#Tensor_Host_TensorHostDevice_Zeroed_unit_
  commentId: P:Tensor.Host.TensorHostDevice.Zeroed
  fullName: 'override property Tensor.Host.TensorHostDevice.Zeroed: bool'
  nameWithType: 'override property TensorHostDevice.Zeroed: bool'
- uid: Tensor.Host.TensorHostDevice.Zeroed*
  name: Zeroed
  href: api/Tensor.Host.TensorHostDevice.Zeroed.html
  commentId: Overload:Tensor.Host.TensorHostDevice.Zeroed*
  fullName: Tensor.Host.TensorHostDevice.Zeroed
  nameWithType: TensorHostDevice.Zeroed
- uid: Tensor.Host.TensorHostStorage`1
  name: TensorHostStorage<'T>
  href: api/Tensor.Host.TensorHostStorage-1.html
  commentId: T:Tensor.Host.TensorHostStorage`1
  fullName: Tensor.Host.TensorHostStorage`1
  nameWithType: Tensor.Host.TensorHostStorage`1
- uid: Tensor.Host.TensorHostStorage`1.#ctor(int64)
  name: "new: int64 -> TensorHostStorage<'T>"
  href: api/Tensor.Host.TensorHostStorage-1.-ctor.html#Tensor_Host_TensorHostStorage_1__ctor_int64_
  commentId: M:Tensor.Host.TensorHostStorage`1.#ctor(System.Int64)
  fullName: "new: int64 -> Tensor.Host.TensorHostStorage<'T>"
  nameWithType: "new: int64 -> TensorHostStorage<'T>"
- uid: Tensor.Host.TensorHostStorage`1.#ctor('T [])
  name: "new: 'T [] -> TensorHostStorage<'T>"
  href: api/Tensor.Host.TensorHostStorage-1.-ctor.html#Tensor_Host_TensorHostStorage_1__ctor__T____
  commentId: M:Tensor.Host.TensorHostStorage`1.#ctor(`0[])
  fullName: "new: 'T [] -> Tensor.Host.TensorHostStorage<'T>"
  nameWithType: "new: 'T [] -> TensorHostStorage<'T>"
- uid: Tensor.Host.TensorHostStorage`1.#ctor*
  name: ( .ctor )
  href: api/Tensor.Host.TensorHostStorage-1.-ctor.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.#ctor*
  fullName: Tensor.Host.TensorHostStorage
  nameWithType: TensorHostStorage.( .ctor )
- uid: Tensor.Host.TensorHostStorage`1.Data(unit)
  name: "property Data: 'T []"
  href: api/Tensor.Host.TensorHostStorage-1.Data.html#Tensor_Host_TensorHostStorage_1_Data_unit_
  commentId: P:Tensor.Host.TensorHostStorage`1.Data
  fullName: "property Tensor.Host.TensorHostStorage.Data: 'T []"
  nameWithType: "property TensorHostStorage.Data: 'T []"
- uid: Tensor.Host.TensorHostStorage`1.Data*
  name: Data
  href: api/Tensor.Host.TensorHostStorage-1.Data.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.Data*
  fullName: Tensor.Host.TensorHostStorage.Data
  nameWithType: TensorHostStorage.Data
- uid: Tensor.Host.TensorHostStorage`1.DataSize(unit)
  name: 'property DataSize: int64'
  href: api/Tensor.Host.TensorHostStorage-1.DataSize.html#Tensor_Host_TensorHostStorage_1_DataSize_unit_
  commentId: P:Tensor.Host.TensorHostStorage`1.DataSize
  fullName: 'property Tensor.Host.TensorHostStorage.DataSize: int64'
  nameWithType: 'property TensorHostStorage.DataSize: int64'
- uid: Tensor.Host.TensorHostStorage`1.DataSize*
  name: DataSize
  href: api/Tensor.Host.TensorHostStorage-1.DataSize.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.DataSize*
  fullName: Tensor.Host.TensorHostStorage.DataSize
  nameWithType: TensorHostStorage.DataSize
- uid: Tensor.Host.TensorHostStorage`1.DataSizeInBytes(unit)
  name: 'property DataSizeInBytes: int64'
  href: api/Tensor.Host.TensorHostStorage-1.DataSizeInBytes.html#Tensor_Host_TensorHostStorage_1_DataSizeInBytes_unit_
  commentId: P:Tensor.Host.TensorHostStorage`1.DataSizeInBytes
  fullName: 'property Tensor.Host.TensorHostStorage.DataSizeInBytes: int64'
  nameWithType: 'property TensorHostStorage.DataSizeInBytes: int64'
- uid: Tensor.Host.TensorHostStorage`1.DataSizeInBytes*
  name: DataSizeInBytes
  href: api/Tensor.Host.TensorHostStorage-1.DataSizeInBytes.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.DataSizeInBytes*
  fullName: Tensor.Host.TensorHostStorage.DataSizeInBytes
  nameWithType: TensorHostStorage.DataSizeInBytes
- uid: Tensor.Host.TensorHostStorage`1.Equals(obj)
  name: 'override member Equals: obj -> bool'
  href: api/Tensor.Host.TensorHostStorage-1.Equals.html#Tensor_Host_TensorHostStorage_1_Equals_obj_
  commentId: M:Tensor.Host.TensorHostStorage`1.Equals(System.Object)
  fullName: 'override member Tensor.Host.TensorHostStorage.Equals: obj -> bool'
  nameWithType: 'override member TensorHostStorage.Equals: obj -> bool'
- uid: Tensor.Host.TensorHostStorage`1.Equals*
  name: Equals
  href: api/Tensor.Host.TensorHostStorage-1.Equals.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.Equals*
  fullName: Tensor.Host.TensorHostStorage.Equals
  nameWithType: TensorHostStorage.Equals
- uid: Tensor.Host.TensorHostStorage`1.GetHashCode(unit)
  name: 'override member GetHashCode: unit -> int'
  href: api/Tensor.Host.TensorHostStorage-1.GetHashCode.html#Tensor_Host_TensorHostStorage_1_GetHashCode_unit_
  commentId: M:Tensor.Host.TensorHostStorage`1.GetHashCode
  fullName: 'override member Tensor.Host.TensorHostStorage.GetHashCode: unit -> int'
  nameWithType: 'override member TensorHostStorage.GetHashCode: unit -> int'
- uid: Tensor.Host.TensorHostStorage`1.GetHashCode*
  name: GetHashCode
  href: api/Tensor.Host.TensorHostStorage-1.GetHashCode.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.GetHashCode*
  fullName: Tensor.Host.TensorHostStorage.GetHashCode
  nameWithType: TensorHostStorage.GetHashCode
- uid: Tensor.Host.TensorHostStorage`1.Pin(unit)
  name: 'member Pin: unit -> PinnedMemory'
  href: api/Tensor.Host.TensorHostStorage-1.Pin.html#Tensor_Host_TensorHostStorage_1_Pin_unit_
  commentId: M:Tensor.Host.TensorHostStorage`1.Pin
  fullName: 'member Tensor.Host.TensorHostStorage.Pin: unit -> Tensor.Host.PinnedMemory'
  nameWithType: 'member TensorHostStorage.Pin: unit -> PinnedMemory'
- uid: Tensor.Host.TensorHostStorage`1.Pin*
  name: Pin
  href: api/Tensor.Host.TensorHostStorage-1.Pin.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.Pin*
  fullName: Tensor.Host.TensorHostStorage.Pin
  nameWithType: TensorHostStorage.Pin
- uid: Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-Backend(Tensor.Backend.TensorLayout)
  name: "interface ITensorStorage<'T> with member Backend: TensorLayout -> ITensorBackend<'T>"
  href: api/Tensor.Host.TensorHostStorage-1.Tensor-Backend-ITensorStorage-1-Backend.html#Tensor_Host_TensorHostStorage_1_Tensor_Backend_ITensorStorage_1_Backend_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-Backend(Tensor.Backend.TensorLayout)
  fullName: "interface Tensor.Backend.ITensorStorage<'T> with member Tensor.Host.TensorHostStorage.Backend: Tensor.Backend.TensorLayout -> Tensor.Backend.ITensorBackend<'T>"
  nameWithType: "interface ITensorStorage<'T> with member TensorHostStorage.Backend: TensorLayout -> ITensorBackend<'T>"
- uid: Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-Backend*
  name: Backend
  href: api/Tensor.Host.TensorHostStorage-1.Tensor-Backend-ITensorStorage-1-Backend.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-Backend*
  fullName: Tensor.Host.TensorHostStorage.Backend
  nameWithType: TensorHostStorage.Backend
- uid: Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-get_Dev(unit)
  name: 'interface ITensorStorage with member Dev: unit -> ITensorDevice'
  href: api/Tensor.Host.TensorHostStorage-1.Tensor-Backend-ITensorStorage-1-get_Dev.html#Tensor_Host_TensorHostStorage_1_Tensor_Backend_ITensorStorage_1_get_Dev_unit_
  commentId: P:Tensor.Host.TensorHostStorage`1.Dev
  fullName: 'interface Tensor.Backend.ITensorStorage with member Tensor.Host.TensorHostStorage.Dev: unit -> Tensor.Backend.ITensorDevice'
  nameWithType: 'interface ITensorStorage with member TensorHostStorage.Dev: unit -> ITensorDevice'
- uid: Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-get_Dev*
  name: Dev
  href: api/Tensor.Host.TensorHostStorage-1.Tensor-Backend-ITensorStorage-1-get_Dev.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.Tensor-Backend-ITensorStorage`1-get_Dev*
  fullName: Tensor.Host.TensorHostStorage.Dev
  nameWithType: TensorHostStorage.Dev
- uid: Tensor.Host.TensorHostStorage`1.Tensor-Host-ITensorHostStorage-Pin(unit)
  name: 'interface ITensorHostStorage with member Pin: unit -> PinnedMemory'
  href: api/Tensor.Host.TensorHostStorage-1.Tensor-Host-ITensorHostStorage-Pin.html#Tensor_Host_TensorHostStorage_1_Tensor_Host_ITensorHostStorage_Pin_unit_
  commentId: M:Tensor.Host.TensorHostStorage`1.Tensor-Host-ITensorHostStorage-Pin
  fullName: 'interface Tensor.Host.ITensorHostStorage with member Tensor.Host.TensorHostStorage.Pin: unit -> Tensor.Host.PinnedMemory'
  nameWithType: 'interface ITensorHostStorage with member TensorHostStorage.Pin: unit -> PinnedMemory'
- uid: Tensor.Host.TensorHostStorage`1.Tensor-Host-ITensorHostStorage-Pin*
  name: Pin
  href: api/Tensor.Host.TensorHostStorage-1.Tensor-Host-ITensorHostStorage-Pin.html
  commentId: Overload:Tensor.Host.TensorHostStorage`1.Tensor-Host-ITensorHostStorage-Pin*
  fullName: Tensor.Host.TensorHostStorage.Pin
  nameWithType: TensorHostStorage.Pin
- uid: Tensor.HostTensor
  name: HostTensor (mod)
  href: api/Tensor.HostTensor.html
  commentId: T:Tensor.HostTensor
  fullName: Tensor.HostTensor
  nameWithType: Tensor.HostTensor
- uid: Tensor.HostTensor.arange('T -> 'T -> 'T)
  name: "val arange: 'T -> 'T -> 'T -> Tensor<'T>"
  href: api/Tensor.HostTensor.arange.html#Tensor_HostTensor_arange__T_____T_____T_
  commentId: M:Tensor.arange``1(``0,``0,``0)
  fullName: "val Tensor.HostTensor.arange: 'T -> 'T -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.arange: 'T -> 'T -> 'T -> Tensor<'T>"
- uid: Tensor.HostTensor.arange*
  name: arange
  href: api/Tensor.HostTensor.arange.html
  commentId: Overload:Tensor.HostTensor.arange*
  fullName: Tensor.HostTensor.arange
  nameWithType: HostTensor.arange
- uid: Tensor.HostTensor.counting(int64)
  name: 'val counting: int64 -> Tensor<int64>'
  href: api/Tensor.HostTensor.counting.html#Tensor_HostTensor_counting_int64_
  commentId: M:Tensor.counting(System.Int64)
  fullName: 'val Tensor.HostTensor.counting: int64 -> Tensor.Tensor<int64>'
  nameWithType: 'val HostTensor.counting: int64 -> Tensor<int64>'
- uid: Tensor.HostTensor.counting*
  name: counting
  href: api/Tensor.HostTensor.counting.html
  commentId: Overload:Tensor.HostTensor.counting*
  fullName: Tensor.HostTensor.counting
  nameWithType: HostTensor.counting
- uid: Tensor.HostTensor.Dev()
  name: val Dev
  href: api/Tensor.HostTensor.Dev%28%29.html
  commentId: P:Tensor.Dev
  fullName: 'val Tensor.HostTensor.Dev: Tensor.Backend.ITensorDevice'
  nameWithType: 'val HostTensor.Dev: ITensorDevice'
- uid: Tensor.HostTensor.empty(int)
  name: "val empty: int -> Tensor<'T>"
  href: api/Tensor.HostTensor.empty.html#Tensor_HostTensor_empty_int_
  commentId: M:Tensor.empty``1(System.Int32)
  fullName: "val Tensor.HostTensor.empty: int -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.empty: int -> Tensor<'T>"
- uid: Tensor.HostTensor.empty*
  name: empty
  href: api/Tensor.HostTensor.empty.html
  commentId: Overload:Tensor.HostTensor.empty*
  fullName: Tensor.HostTensor.empty
  nameWithType: HostTensor.empty
- uid: Tensor.HostTensor.falses(int64 list)
  name: 'val falses: int64 list -> Tensor<bool>'
  href: api/Tensor.HostTensor.falses.html#Tensor_HostTensor_falses_int64_list_
  commentId: M:Tensor.falses(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.HostTensor.falses: int64 list -> Tensor.Tensor<bool>'
  nameWithType: 'val HostTensor.falses: int64 list -> Tensor<bool>'
- uid: Tensor.HostTensor.falses*
  name: falses
  href: api/Tensor.HostTensor.falses.html
  commentId: Overload:Tensor.HostTensor.falses*
  fullName: Tensor.HostTensor.falses
  nameWithType: HostTensor.falses
- uid: Tensor.HostTensor.Fill(Tensor.Tensor<'T> -> unit -> 'T)
  name: "val Fill: Tensor<'T> -> unit -> 'T -> unit"
  href: api/Tensor.HostTensor.Fill.html#Tensor_HostTensor_Fill_Tensor_Tensor__T_____unit_____T_
  commentId: M:Tensor.Fill``1(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})
  fullName: "val Tensor.HostTensor.Fill: Tensor.Tensor<'T> -> unit -> 'T -> unit"
  nameWithType: "val HostTensor.Fill: Tensor<'T> -> unit -> 'T -> unit"
- uid: Tensor.HostTensor.Fill*
  name: Fill
  href: api/Tensor.HostTensor.Fill.html
  commentId: Overload:Tensor.HostTensor.Fill*
  fullName: Tensor.HostTensor.Fill
  nameWithType: HostTensor.Fill
- uid: Tensor.HostTensor.filled(int64 list -> 'T)
  name: "val filled: int64 list -> 'T -> Tensor<'T>"
  href: api/Tensor.HostTensor.filled.html#Tensor_HostTensor_filled_int64_list_____T_
  commentId: M:Tensor.filled``1(Microsoft.FSharp.Collections.FSharpList{System.Int64},``0)
  fullName: "val Tensor.HostTensor.filled: int64 list -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.filled: int64 list -> 'T -> Tensor<'T>"
- uid: Tensor.HostTensor.filled*
  name: filled
  href: api/Tensor.HostTensor.filled.html
  commentId: Overload:Tensor.HostTensor.filled*
  fullName: Tensor.HostTensor.filled
  nameWithType: HostTensor.filled
- uid: Tensor.HostTensor.FillFoldAxis(Tensor.Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor.Tensor<'T> -> int -> Tensor.Tensor<'TA>)
  name: "val FillFoldAxis: Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor<'T> -> int -> Tensor<'TA> -> unit"
  href: api/Tensor.HostTensor.FillFoldAxis.html#Tensor_HostTensor_FillFoldAxis_Tensor_Tensor__T______T_____TA_____T____Tensor_Tensor__T_____int____Tensor_Tensor__TA__
  commentId: M:Tensor.FillFoldAxis``2(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},Tensor.Tensor{``0},System.Int32,Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.FillFoldAxis: Tensor.Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor.Tensor<'T> -> int -> Tensor.Tensor<'TA> -> unit"
  nameWithType: "val HostTensor.FillFoldAxis: Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor<'T> -> int -> Tensor<'TA> -> unit"
- uid: Tensor.HostTensor.FillFoldAxis*
  name: FillFoldAxis
  href: api/Tensor.HostTensor.FillFoldAxis.html
  commentId: Overload:Tensor.HostTensor.FillFoldAxis*
  fullName: Tensor.HostTensor.FillFoldAxis
  nameWithType: HostTensor.FillFoldAxis
- uid: Tensor.HostTensor.FillIndexed(Tensor.Tensor<'T> -> int64 [] -> 'T)
  name: "val FillIndexed: Tensor<'T> -> int64 [] -> 'T -> unit"
  href: api/Tensor.HostTensor.FillIndexed.html#Tensor_HostTensor_FillIndexed_Tensor_Tensor__T_____int64________T_
  commentId: M:Tensor.FillIndexed``1(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],``0})
  fullName: "val Tensor.HostTensor.FillIndexed: Tensor.Tensor<'T> -> int64 [] -> 'T -> unit"
  nameWithType: "val HostTensor.FillIndexed: Tensor<'T> -> int64 [] -> 'T -> unit"
- uid: Tensor.HostTensor.FillIndexed*
  name: FillIndexed
  href: api/Tensor.HostTensor.FillIndexed.html
  commentId: Overload:Tensor.HostTensor.FillIndexed*
  fullName: Tensor.HostTensor.FillIndexed
  nameWithType: HostTensor.FillIndexed
- uid: Tensor.HostTensor.FillMap(Tensor.Tensor<'T> -> 'TA -> 'T -> Tensor.Tensor<'TA>)
  name: "val FillMap: Tensor<'T> -> 'TA -> 'T -> Tensor<'TA> -> unit"
  href: api/Tensor.HostTensor.FillMap.html#Tensor_HostTensor_FillMap_Tensor_Tensor__T______TA_____T____Tensor_Tensor__TA__
  commentId: M:Tensor.FillMap``2(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{``1,``0},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.FillMap: Tensor.Tensor<'T> -> 'TA -> 'T -> Tensor.Tensor<'TA> -> unit"
  nameWithType: "val HostTensor.FillMap: Tensor<'T> -> 'TA -> 'T -> Tensor<'TA> -> unit"
- uid: Tensor.HostTensor.FillMap*
  name: FillMap
  href: api/Tensor.HostTensor.FillMap.html
  commentId: Overload:Tensor.HostTensor.FillMap*
  fullName: Tensor.HostTensor.FillMap
  nameWithType: HostTensor.FillMap
- uid: Tensor.HostTensor.FillMap2(Tensor.Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val FillMap2: Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
  href: api/Tensor.HostTensor.FillMap2.html#Tensor_HostTensor_FillMap2_Tensor_Tensor__T______TA_____TB_____T____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.FillMap2``3(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``0}},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "val Tensor.HostTensor.FillMap2: Tensor.Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> unit"
  nameWithType: "val HostTensor.FillMap2: Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
- uid: Tensor.HostTensor.FillMap2*
  name: FillMap2
  href: api/Tensor.HostTensor.FillMap2.html
  commentId: Overload:Tensor.HostTensor.FillMap2*
  fullName: Tensor.HostTensor.FillMap2
  nameWithType: HostTensor.FillMap2
- uid: Tensor.HostTensor.FillMapIndexed(Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor.Tensor<'TA>)
  name: "val FillMapIndexed: Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor<'TA> -> unit"
  href: api/Tensor.HostTensor.FillMapIndexed.html#Tensor_HostTensor_FillMapIndexed_Tensor_Tensor__T_____int64________TA_____T____Tensor_Tensor__TA__
  commentId: M:Tensor.FillMapIndexed``2(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``1,``0}},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.FillMapIndexed: Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor.Tensor<'TA> -> unit"
  nameWithType: "val HostTensor.FillMapIndexed: Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor<'TA> -> unit"
- uid: Tensor.HostTensor.FillMapIndexed*
  name: FillMapIndexed
  href: api/Tensor.HostTensor.FillMapIndexed.html
  commentId: Overload:Tensor.HostTensor.FillMapIndexed*
  fullName: Tensor.HostTensor.FillMapIndexed
  nameWithType: HostTensor.FillMapIndexed
- uid: Tensor.HostTensor.FillMapIndexed2(Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val FillMapIndexed2: Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
  href: api/Tensor.HostTensor.FillMapIndexed2.html#Tensor_HostTensor_FillMapIndexed2_Tensor_Tensor__T_____int64________TA_____TB_____T____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.FillMapIndexed2``3(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``0}}},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "val Tensor.HostTensor.FillMapIndexed2: Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> unit"
  nameWithType: "val HostTensor.FillMapIndexed2: Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
- uid: Tensor.HostTensor.FillMapIndexed2*
  name: FillMapIndexed2
  href: api/Tensor.HostTensor.FillMapIndexed2.html
  commentId: Overload:Tensor.HostTensor.FillMapIndexed2*
  fullName: Tensor.HostTensor.FillMapIndexed2
  nameWithType: HostTensor.FillMapIndexed2
- uid: Tensor.HostTensor.FillSeq(Tensor.Tensor<'T> -> seq<'T>)
  name: "val FillSeq: Tensor<'T> -> seq<'T> -> unit"
  href: api/Tensor.HostTensor.FillSeq.html#Tensor_HostTensor_FillSeq_Tensor_Tensor__T_____seq__T__
  commentId: M:Tensor.FillSeq``1(Tensor.Tensor{``0},System.Collections.Generic.IEnumerable{``0})
  fullName: "val Tensor.HostTensor.FillSeq: Tensor.Tensor<'T> -> seq<'T> -> unit"
  nameWithType: "val HostTensor.FillSeq: Tensor<'T> -> seq<'T> -> unit"
- uid: Tensor.HostTensor.FillSeq*
  name: FillSeq
  href: api/Tensor.HostTensor.FillSeq.html
  commentId: Overload:Tensor.HostTensor.FillSeq*
  fullName: Tensor.HostTensor.FillSeq
  nameWithType: HostTensor.FillSeq
- uid: Tensor.HostTensor.foldAxis('T -> 'TA -> 'T -> Tensor.Tensor<'T> -> int -> Tensor.Tensor<'TA>)
  name: "val foldAxis: 'T -> 'TA -> 'T -> Tensor<'T> -> int -> Tensor<'TA> -> Tensor<'T>"
  href: api/Tensor.HostTensor.foldAxis.html#Tensor_HostTensor_foldAxis__T_____TA_____T____Tensor_Tensor__T_____int____Tensor_Tensor__TA__
  commentId: M:Tensor.foldAxis``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},Tensor.Tensor{``0},System.Int32,Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.foldAxis: 'T -> 'TA -> 'T -> Tensor.Tensor<'T> -> int -> Tensor.Tensor<'TA> -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.foldAxis: 'T -> 'TA -> 'T -> Tensor<'T> -> int -> Tensor<'TA> -> Tensor<'T>"
- uid: Tensor.HostTensor.foldAxis*
  name: foldAxis
  href: api/Tensor.HostTensor.foldAxis.html
  commentId: Overload:Tensor.HostTensor.foldAxis*
  fullName: Tensor.HostTensor.foldAxis
  nameWithType: HostTensor.foldAxis
- uid: Tensor.HostTensor.identity(int64)
  name: "val identity: int64 -> Tensor<'T>"
  href: api/Tensor.HostTensor.identity.html#Tensor_HostTensor_identity_int64_
  commentId: M:Tensor.identity``1(System.Int64)
  fullName: "val Tensor.HostTensor.identity: int64 -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.identity: int64 -> Tensor<'T>"
- uid: Tensor.HostTensor.identity*
  name: identity
  href: api/Tensor.HostTensor.identity.html
  commentId: Overload:Tensor.HostTensor.identity*
  fullName: Tensor.HostTensor.identity
  nameWithType: HostTensor.identity
- uid: Tensor.HostTensor.init(int64 list -> int64 [] -> 'T)
  name: "val init: int64 list -> int64 [] -> 'T -> Tensor<'T>"
  href: api/Tensor.HostTensor.init.html#Tensor_HostTensor_init_int64_list____int64________T_
  commentId: M:Tensor.init``1(Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],``0})
  fullName: "val Tensor.HostTensor.init: int64 list -> int64 [] -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.init: int64 list -> int64 [] -> 'T -> Tensor<'T>"
- uid: Tensor.HostTensor.init*
  name: init
  href: api/Tensor.HostTensor.init.html
  commentId: Overload:Tensor.HostTensor.init*
  fullName: Tensor.HostTensor.init
  nameWithType: HostTensor.init
- uid: Tensor.HostTensor.linspace('T -> 'T -> int64)
  name: "val linspace: 'T -> 'T -> int64 -> Tensor<'T>"
  href: api/Tensor.HostTensor.linspace.html#Tensor_HostTensor_linspace__T_____T____int64_
  commentId: M:Tensor.linspace``1(``0,``0,System.Int64)
  fullName: "val Tensor.HostTensor.linspace: 'T -> 'T -> int64 -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.linspace: 'T -> 'T -> int64 -> Tensor<'T>"
- uid: Tensor.HostTensor.linspace*
  name: linspace
  href: api/Tensor.HostTensor.linspace.html
  commentId: Overload:Tensor.HostTensor.linspace*
  fullName: Tensor.HostTensor.linspace
  nameWithType: HostTensor.linspace
- uid: Tensor.HostTensor.map('T -> 'R -> Tensor.Tensor<'T>)
  name: "val map: 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
  href: api/Tensor.HostTensor.map.html#Tensor_HostTensor_map__T_____R____Tensor_Tensor__T__
  commentId: M:Tensor.map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.map: 'T -> 'R -> Tensor.Tensor<'T> -> Tensor.Tensor<'R>"
  nameWithType: "val HostTensor.map: 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
- uid: Tensor.HostTensor.map*
  name: map
  href: api/Tensor.HostTensor.map.html
  commentId: Overload:Tensor.HostTensor.map*
  fullName: Tensor.HostTensor.map
  nameWithType: HostTensor.map
- uid: Tensor.HostTensor.map2('TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val map2: 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
  href: api/Tensor.HostTensor.map2.html#Tensor_HostTensor_map2__TA_____TB_____R____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.map2: 'TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> Tensor.Tensor<'R>"
  nameWithType: "val HostTensor.map2: 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
- uid: Tensor.HostTensor.map2*
  name: map2
  href: api/Tensor.HostTensor.map2.html
  commentId: Overload:Tensor.HostTensor.map2*
  fullName: Tensor.HostTensor.map2
  nameWithType: HostTensor.map2
- uid: Tensor.HostTensor.mapi(int64 [] -> 'T -> 'R -> Tensor.Tensor<'T>)
  name: "val mapi: int64 [] -> 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
  href: api/Tensor.HostTensor.mapi.html#Tensor_HostTensor_mapi_int64________T_____R____Tensor_Tensor__T__
  commentId: M:Tensor.mapi``2(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,``1}},Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.mapi: int64 [] -> 'T -> 'R -> Tensor.Tensor<'T> -> Tensor.Tensor<'R>"
  nameWithType: "val HostTensor.mapi: int64 [] -> 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
- uid: Tensor.HostTensor.mapi*
  name: mapi
  href: api/Tensor.HostTensor.mapi.html
  commentId: Overload:Tensor.HostTensor.mapi*
  fullName: Tensor.HostTensor.mapi
  nameWithType: HostTensor.mapi
- uid: Tensor.HostTensor.mapi2(int64 [] -> 'TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val mapi2: int64 [] -> 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
  href: api/Tensor.HostTensor.mapi2.html#Tensor_HostTensor_mapi2_int64________TA_____TB_____R____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.mapi2``3(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.mapi2: int64 [] -> 'TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> Tensor.Tensor<'R>"
  nameWithType: "val HostTensor.mapi2: int64 [] -> 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
- uid: Tensor.HostTensor.mapi2*
  name: mapi2
  href: api/Tensor.HostTensor.mapi2.html
  commentId: Overload:Tensor.HostTensor.mapi2*
  fullName: Tensor.HostTensor.mapi2
  nameWithType: HostTensor.mapi2
- uid: Tensor.HostTensor.ofArray('T [])
  name: "val ofArray: 'T [] -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofArray.html#Tensor_HostTensor_ofArray__T____
  commentId: M:Tensor.ofArray``1(``0[])
  fullName: "val Tensor.HostTensor.ofArray: 'T [] -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofArray: 'T [] -> Tensor<'T>"
- uid: Tensor.HostTensor.ofArray*
  name: ofArray
  href: api/Tensor.HostTensor.ofArray.html
  commentId: Overload:Tensor.HostTensor.ofArray*
  fullName: Tensor.HostTensor.ofArray
  nameWithType: HostTensor.ofArray
- uid: Tensor.HostTensor.ofArray2D('T [,])
  name: "val ofArray2D: 'T [,] -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofArray2D.html#Tensor_HostTensor_ofArray2D__T_____
  commentId: M:Tensor.ofArray2D``1(``0[0:, 0:])
  fullName: "val Tensor.HostTensor.ofArray2D: 'T [,] -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofArray2D: 'T [,] -> Tensor<'T>"
- uid: Tensor.HostTensor.ofArray2D*
  name: ofArray2D
  href: api/Tensor.HostTensor.ofArray2D.html
  commentId: Overload:Tensor.HostTensor.ofArray2D*
  fullName: Tensor.HostTensor.ofArray2D
  nameWithType: HostTensor.ofArray2D
- uid: Tensor.HostTensor.ofArray3D('T [,,])
  name: "val ofArray3D: 'T [,,] -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofArray3D.html#Tensor_HostTensor_ofArray3D__T______
  commentId: M:Tensor.ofArray3D``1(``0[0:, 0:, 0:])
  fullName: "val Tensor.HostTensor.ofArray3D: 'T [,,] -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofArray3D: 'T [,,] -> Tensor<'T>"
- uid: Tensor.HostTensor.ofArray3D*
  name: ofArray3D
  href: api/Tensor.HostTensor.ofArray3D.html
  commentId: Overload:Tensor.HostTensor.ofArray3D*
  fullName: Tensor.HostTensor.ofArray3D
  nameWithType: HostTensor.ofArray3D
- uid: Tensor.HostTensor.ofArray4D('T [,,,])
  name: "val ofArray4D: 'T [,,,] -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofArray4D.html#Tensor_HostTensor_ofArray4D__T_______
  commentId: M:Tensor.ofArray4D``1(``0[0:, 0:, 0:, 0:])
  fullName: "val Tensor.HostTensor.ofArray4D: 'T [,,,] -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofArray4D: 'T [,,,] -> Tensor<'T>"
- uid: Tensor.HostTensor.ofArray4D*
  name: ofArray4D
  href: api/Tensor.HostTensor.ofArray4D.html
  commentId: Overload:Tensor.HostTensor.ofArray4D*
  fullName: Tensor.HostTensor.ofArray4D
  nameWithType: HostTensor.ofArray4D
- uid: Tensor.HostTensor.ofList('T list)
  name: "val ofList: 'T list -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofList.html#Tensor_HostTensor_ofList__T_list_
  commentId: M:Tensor.ofList``1(Microsoft.FSharp.Collections.FSharpList{``0})
  fullName: "val Tensor.HostTensor.ofList: 'T list -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofList: 'T list -> Tensor<'T>"
- uid: Tensor.HostTensor.ofList*
  name: ofList
  href: api/Tensor.HostTensor.ofList.html
  commentId: Overload:Tensor.HostTensor.ofList*
  fullName: Tensor.HostTensor.ofList
  nameWithType: HostTensor.ofList
- uid: Tensor.HostTensor.ofList2D('T list list)
  name: "val ofList2D: 'T list list -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofList2D.html#Tensor_HostTensor_ofList2D__T_list_list_
  commentId: M:Tensor.ofList2D``1(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{``0}})
  fullName: "val Tensor.HostTensor.ofList2D: 'T list list -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofList2D: 'T list list -> Tensor<'T>"
- uid: Tensor.HostTensor.ofList2D*
  name: ofList2D
  href: api/Tensor.HostTensor.ofList2D.html
  commentId: Overload:Tensor.HostTensor.ofList2D*
  fullName: Tensor.HostTensor.ofList2D
  nameWithType: HostTensor.ofList2D
- uid: Tensor.HostTensor.ofSeq(seq<'T>)
  name: "val ofSeq: seq<'T> -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofSeq.html#Tensor_HostTensor_ofSeq_seq__T__
  commentId: M:Tensor.ofSeq``1(System.Collections.Generic.IEnumerable{``0})
  fullName: "val Tensor.HostTensor.ofSeq: seq<'T> -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofSeq: seq<'T> -> Tensor<'T>"
- uid: Tensor.HostTensor.ofSeq*
  name: ofSeq
  href: api/Tensor.HostTensor.ofSeq.html
  commentId: Overload:Tensor.HostTensor.ofSeq*
  fullName: Tensor.HostTensor.ofSeq
  nameWithType: HostTensor.ofSeq
- uid: Tensor.HostTensor.ofSeqWithShape(int64 list -> seq<'T>)
  name: "val ofSeqWithShape: int64 list -> seq<'T> -> Tensor<'T>"
  href: api/Tensor.HostTensor.ofSeqWithShape.html#Tensor_HostTensor_ofSeqWithShape_int64_list____seq__T__
  commentId: M:Tensor.ofSeqWithShape``1(Microsoft.FSharp.Collections.FSharpList{System.Int64},System.Collections.Generic.IEnumerable{``0})
  fullName: "val Tensor.HostTensor.ofSeqWithShape: int64 list -> seq<'T> -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ofSeqWithShape: int64 list -> seq<'T> -> Tensor<'T>"
- uid: Tensor.HostTensor.ofSeqWithShape*
  name: ofSeqWithShape
  href: api/Tensor.HostTensor.ofSeqWithShape.html
  commentId: Overload:Tensor.HostTensor.ofSeqWithShape*
  fullName: Tensor.HostTensor.ofSeqWithShape
  nameWithType: HostTensor.ofSeqWithShape
- uid: Tensor.HostTensor.ones(int64 list)
  name: "val ones: int64 list -> Tensor<'T>"
  href: api/Tensor.HostTensor.ones.html#Tensor_HostTensor_ones_int64_list_
  commentId: M:Tensor.ones``1(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "val Tensor.HostTensor.ones: int64 list -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.ones: int64 list -> Tensor<'T>"
- uid: Tensor.HostTensor.ones*
  name: ones
  href: api/Tensor.HostTensor.ones.html
  commentId: Overload:Tensor.HostTensor.ones*
  fullName: Tensor.HostTensor.ones
  nameWithType: HostTensor.ones
- uid: Tensor.HostTensor.Parallel
  name: HostTensor.Parallel (mod)
  href: api/Tensor.HostTensor.Parallel.html
  commentId: T:Tensor.HostTensor.Parallel
  fullName: Tensor.HostTensor.Parallel
  nameWithType: Tensor.HostTensor.Parallel
- uid: Tensor.HostTensor.Parallel.Fill(Tensor.Tensor<'T> -> unit -> 'T)
  name: "val Fill: Tensor<'T> -> unit -> 'T -> unit"
  href: api/Tensor.HostTensor.Parallel.Fill.html#Tensor_HostTensor_Parallel_Fill_Tensor_Tensor__T_____unit_____T_
  commentId: M:Tensor.HostTensor.Fill``1(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})
  fullName: "val Tensor.HostTensor.Parallel.Fill: Tensor.Tensor<'T> -> unit -> 'T -> unit"
  nameWithType: "val Parallel.Fill: Tensor<'T> -> unit -> 'T -> unit"
- uid: Tensor.HostTensor.Parallel.Fill*
  name: Fill
  href: api/Tensor.HostTensor.Parallel.Fill.html
  commentId: Overload:Tensor.HostTensor.Parallel.Fill*
  fullName: Tensor.HostTensor.Parallel.Fill
  nameWithType: Parallel.Fill
- uid: Tensor.HostTensor.Parallel.FillFoldAxis(Tensor.Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor.Tensor<'T> -> int -> Tensor.Tensor<'TA>)
  name: "val FillFoldAxis: Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor<'T> -> int -> Tensor<'TA> -> unit"
  href: api/Tensor.HostTensor.Parallel.FillFoldAxis.html#Tensor_HostTensor_Parallel_FillFoldAxis_Tensor_Tensor__T______T_____TA_____T____Tensor_Tensor__T_____int____Tensor_Tensor__TA__
  commentId: M:Tensor.HostTensor.FillFoldAxis``2(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},Tensor.Tensor{``0},System.Int32,Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.Parallel.FillFoldAxis: Tensor.Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor.Tensor<'T> -> int -> Tensor.Tensor<'TA> -> unit"
  nameWithType: "val Parallel.FillFoldAxis: Tensor<'T> -> 'T -> 'TA -> 'T -> Tensor<'T> -> int -> Tensor<'TA> -> unit"
- uid: Tensor.HostTensor.Parallel.FillFoldAxis*
  name: FillFoldAxis
  href: api/Tensor.HostTensor.Parallel.FillFoldAxis.html
  commentId: Overload:Tensor.HostTensor.Parallel.FillFoldAxis*
  fullName: Tensor.HostTensor.Parallel.FillFoldAxis
  nameWithType: Parallel.FillFoldAxis
- uid: Tensor.HostTensor.Parallel.FillIndexed(Tensor.Tensor<'T> -> int64 [] -> 'T)
  name: "val FillIndexed: Tensor<'T> -> int64 [] -> 'T -> unit"
  href: api/Tensor.HostTensor.Parallel.FillIndexed.html#Tensor_HostTensor_Parallel_FillIndexed_Tensor_Tensor__T_____int64________T_
  commentId: M:Tensor.HostTensor.FillIndexed``1(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],``0})
  fullName: "val Tensor.HostTensor.Parallel.FillIndexed: Tensor.Tensor<'T> -> int64 [] -> 'T -> unit"
  nameWithType: "val Parallel.FillIndexed: Tensor<'T> -> int64 [] -> 'T -> unit"
- uid: Tensor.HostTensor.Parallel.FillIndexed*
  name: FillIndexed
  href: api/Tensor.HostTensor.Parallel.FillIndexed.html
  commentId: Overload:Tensor.HostTensor.Parallel.FillIndexed*
  fullName: Tensor.HostTensor.Parallel.FillIndexed
  nameWithType: Parallel.FillIndexed
- uid: Tensor.HostTensor.Parallel.FillMap(Tensor.Tensor<'T> -> 'TA -> 'T -> Tensor.Tensor<'TA>)
  name: "val FillMap: Tensor<'T> -> 'TA -> 'T -> Tensor<'TA> -> unit"
  href: api/Tensor.HostTensor.Parallel.FillMap.html#Tensor_HostTensor_Parallel_FillMap_Tensor_Tensor__T______TA_____T____Tensor_Tensor__TA__
  commentId: M:Tensor.HostTensor.FillMap``2(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{``1,``0},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.Parallel.FillMap: Tensor.Tensor<'T> -> 'TA -> 'T -> Tensor.Tensor<'TA> -> unit"
  nameWithType: "val Parallel.FillMap: Tensor<'T> -> 'TA -> 'T -> Tensor<'TA> -> unit"
- uid: Tensor.HostTensor.Parallel.FillMap*
  name: FillMap
  href: api/Tensor.HostTensor.Parallel.FillMap.html
  commentId: Overload:Tensor.HostTensor.Parallel.FillMap*
  fullName: Tensor.HostTensor.Parallel.FillMap
  nameWithType: Parallel.FillMap
- uid: Tensor.HostTensor.Parallel.FillMap2(Tensor.Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val FillMap2: Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
  href: api/Tensor.HostTensor.Parallel.FillMap2.html#Tensor_HostTensor_Parallel_FillMap2_Tensor_Tensor__T______TA_____TB_____T____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.HostTensor.FillMap2``3(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``0}},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "val Tensor.HostTensor.Parallel.FillMap2: Tensor.Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> unit"
  nameWithType: "val Parallel.FillMap2: Tensor<'T> -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
- uid: Tensor.HostTensor.Parallel.FillMap2*
  name: FillMap2
  href: api/Tensor.HostTensor.Parallel.FillMap2.html
  commentId: Overload:Tensor.HostTensor.Parallel.FillMap2*
  fullName: Tensor.HostTensor.Parallel.FillMap2
  nameWithType: Parallel.FillMap2
- uid: Tensor.HostTensor.Parallel.FillMapIndexed(Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor.Tensor<'TA>)
  name: "val FillMapIndexed: Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor<'TA> -> unit"
  href: api/Tensor.HostTensor.Parallel.FillMapIndexed.html#Tensor_HostTensor_Parallel_FillMapIndexed_Tensor_Tensor__T_____int64________TA_____T____Tensor_Tensor__TA__
  commentId: M:Tensor.HostTensor.FillMapIndexed``2(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``1,``0}},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.Parallel.FillMapIndexed: Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor.Tensor<'TA> -> unit"
  nameWithType: "val Parallel.FillMapIndexed: Tensor<'T> -> int64 [] -> 'TA -> 'T -> Tensor<'TA> -> unit"
- uid: Tensor.HostTensor.Parallel.FillMapIndexed*
  name: FillMapIndexed
  href: api/Tensor.HostTensor.Parallel.FillMapIndexed.html
  commentId: Overload:Tensor.HostTensor.Parallel.FillMapIndexed*
  fullName: Tensor.HostTensor.Parallel.FillMapIndexed
  nameWithType: Parallel.FillMapIndexed
- uid: Tensor.HostTensor.Parallel.FillMapIndexed2(Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val FillMapIndexed2: Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
  href: api/Tensor.HostTensor.Parallel.FillMapIndexed2.html#Tensor_HostTensor_Parallel_FillMapIndexed2_Tensor_Tensor__T_____int64________TA_____TB_____T____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.HostTensor.FillMapIndexed2``3(Tensor.Tensor{``0},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``0}}},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "val Tensor.HostTensor.Parallel.FillMapIndexed2: Tensor.Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> unit"
  nameWithType: "val Parallel.FillMapIndexed2: Tensor<'T> -> int64 [] -> 'TA -> 'TB -> 'T -> Tensor<'TA> -> Tensor<'TB> -> unit"
- uid: Tensor.HostTensor.Parallel.FillMapIndexed2*
  name: FillMapIndexed2
  href: api/Tensor.HostTensor.Parallel.FillMapIndexed2.html
  commentId: Overload:Tensor.HostTensor.Parallel.FillMapIndexed2*
  fullName: Tensor.HostTensor.Parallel.FillMapIndexed2
  nameWithType: Parallel.FillMapIndexed2
- uid: Tensor.HostTensor.Parallel.foldAxis('T -> 'TA -> 'T -> 'T -> int -> Tensor.Tensor<'TA>)
  name: "val foldAxis: 'T -> 'TA -> 'T -> 'T -> int -> Tensor<'TA> -> Tensor<'T>"
  href: api/Tensor.HostTensor.Parallel.foldAxis.html#Tensor_HostTensor_Parallel_foldAxis__T_____TA_____T_____T____int____Tensor_Tensor__TA__
  commentId: M:Tensor.HostTensor.foldAxis``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.Int32,Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.Parallel.foldAxis: 'T -> 'TA -> 'T -> 'T -> int -> Tensor.Tensor<'TA> -> Tensor.Tensor<'T>"
  nameWithType: "val Parallel.foldAxis: 'T -> 'TA -> 'T -> 'T -> int -> Tensor<'TA> -> Tensor<'T>"
- uid: Tensor.HostTensor.Parallel.foldAxis*
  name: foldAxis
  href: api/Tensor.HostTensor.Parallel.foldAxis.html
  commentId: Overload:Tensor.HostTensor.Parallel.foldAxis*
  fullName: Tensor.HostTensor.Parallel.foldAxis
  nameWithType: Parallel.foldAxis
- uid: Tensor.HostTensor.Parallel.init(int64 list -> int64 [] -> 'T)
  name: "val init: int64 list -> int64 [] -> 'T -> Tensor<'T>"
  href: api/Tensor.HostTensor.Parallel.init.html#Tensor_HostTensor_Parallel_init_int64_list____int64________T_
  commentId: M:Tensor.HostTensor.init``1(Microsoft.FSharp.Collections.FSharpList{System.Int64},Microsoft.FSharp.Core.FSharpFunc{System.Int64[],``0})
  fullName: "val Tensor.HostTensor.Parallel.init: int64 list -> int64 [] -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "val Parallel.init: int64 list -> int64 [] -> 'T -> Tensor<'T>"
- uid: Tensor.HostTensor.Parallel.init*
  name: init
  href: api/Tensor.HostTensor.Parallel.init.html
  commentId: Overload:Tensor.HostTensor.Parallel.init*
  fullName: Tensor.HostTensor.Parallel.init
  nameWithType: Parallel.init
- uid: Tensor.HostTensor.Parallel.map('T -> 'R -> Tensor.Tensor<'T>)
  name: "val map: 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
  href: api/Tensor.HostTensor.Parallel.map.html#Tensor_HostTensor_Parallel_map__T_____R____Tensor_Tensor__T__
  commentId: M:Tensor.HostTensor.map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.Parallel.map: 'T -> 'R -> Tensor.Tensor<'T> -> Tensor.Tensor<'R>"
  nameWithType: "val Parallel.map: 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
- uid: Tensor.HostTensor.Parallel.map*
  name: map
  href: api/Tensor.HostTensor.Parallel.map.html
  commentId: Overload:Tensor.HostTensor.Parallel.map*
  fullName: Tensor.HostTensor.Parallel.map
  nameWithType: Parallel.map
- uid: Tensor.HostTensor.Parallel.map2('TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val map2: 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
  href: api/Tensor.HostTensor.Parallel.map2.html#Tensor_HostTensor_Parallel_map2__TA_____TB_____R____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.HostTensor.map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.Parallel.map2: 'TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> Tensor.Tensor<'R>"
  nameWithType: "val Parallel.map2: 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
- uid: Tensor.HostTensor.Parallel.map2*
  name: map2
  href: api/Tensor.HostTensor.Parallel.map2.html
  commentId: Overload:Tensor.HostTensor.Parallel.map2*
  fullName: Tensor.HostTensor.Parallel.map2
  nameWithType: Parallel.map2
- uid: Tensor.HostTensor.Parallel.mapi(int64 [] -> 'T -> 'R -> Tensor.Tensor<'T>)
  name: "val mapi: int64 [] -> 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
  href: api/Tensor.HostTensor.Parallel.mapi.html#Tensor_HostTensor_Parallel_mapi_int64________T_____R____Tensor_Tensor__T__
  commentId: M:Tensor.HostTensor.mapi``2(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,``1}},Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.Parallel.mapi: int64 [] -> 'T -> 'R -> Tensor.Tensor<'T> -> Tensor.Tensor<'R>"
  nameWithType: "val Parallel.mapi: int64 [] -> 'T -> 'R -> Tensor<'T> -> Tensor<'R>"
- uid: Tensor.HostTensor.Parallel.mapi*
  name: mapi
  href: api/Tensor.HostTensor.Parallel.mapi.html
  commentId: Overload:Tensor.HostTensor.Parallel.mapi*
  fullName: Tensor.HostTensor.Parallel.mapi
  nameWithType: Parallel.mapi
- uid: Tensor.HostTensor.Parallel.mapi2(int64 [] -> 'TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB>)
  name: "val mapi2: int64 [] -> 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
  href: api/Tensor.HostTensor.Parallel.mapi2.html#Tensor_HostTensor_Parallel_mapi2_int64________TA_____TB_____R____Tensor_Tensor__TA_____Tensor_Tensor__TB__
  commentId: M:Tensor.HostTensor.mapi2``3(Microsoft.FSharp.Core.FSharpFunc{System.Int64[],Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "val Tensor.HostTensor.Parallel.mapi2: int64 [] -> 'TA -> 'TB -> 'R -> Tensor.Tensor<'TA> -> Tensor.Tensor<'TB> -> Tensor.Tensor<'R>"
  nameWithType: "val Parallel.mapi2: int64 [] -> 'TA -> 'TB -> 'R -> Tensor<'TA> -> Tensor<'TB> -> Tensor<'R>"
- uid: Tensor.HostTensor.Parallel.mapi2*
  name: mapi2
  href: api/Tensor.HostTensor.Parallel.mapi2.html
  commentId: Overload:Tensor.HostTensor.Parallel.mapi2*
  fullName: Tensor.HostTensor.Parallel.mapi2
  nameWithType: Parallel.mapi2
- uid: Tensor.HostTensor.randomInt(System.Random -> int * int -> int64 list)
  name: 'val randomInt: Random -> int * int -> int64 list -> Tensor<int>'
  href: api/Tensor.HostTensor.randomInt.html#Tensor_HostTensor_randomInt_System_Random____int___int____int64_list_
  commentId: M:Tensor.randomInt(System.Random,System.Int32,System.Int32,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.HostTensor.randomInt: System.Random -> int * int -> int64 list -> Tensor.Tensor<int>'
  nameWithType: 'val HostTensor.randomInt: Random -> int * int -> int64 list -> Tensor<int>'
- uid: Tensor.HostTensor.randomInt*
  name: randomInt
  href: api/Tensor.HostTensor.randomInt.html
  commentId: Overload:Tensor.HostTensor.randomInt*
  fullName: Tensor.HostTensor.randomInt
  nameWithType: HostTensor.randomInt
- uid: Tensor.HostTensor.randomNormal(System.Random -> 'T * 'T -> int64 list)
  name: "val randomNormal: Random -> 'T * 'T -> int64 list -> Tensor<'T>"
  href: api/Tensor.HostTensor.randomNormal.html#Tensor_HostTensor_randomNormal_System_Random_____T____T____int64_list_
  commentId: M:Tensor.randomNormal``1(System.Random,``0,``0,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "val Tensor.HostTensor.randomNormal: System.Random -> 'T * 'T -> int64 list -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.randomNormal: Random -> 'T * 'T -> int64 list -> Tensor<'T>"
- uid: Tensor.HostTensor.randomNormal*
  name: randomNormal
  href: api/Tensor.HostTensor.randomNormal.html
  commentId: Overload:Tensor.HostTensor.randomNormal*
  fullName: Tensor.HostTensor.randomNormal
  nameWithType: HostTensor.randomNormal
- uid: Tensor.HostTensor.randomUniform(System.Random -> 'T * 'T -> int64 list)
  name: "val randomUniform: Random -> 'T * 'T -> int64 list -> Tensor<'T>"
  href: api/Tensor.HostTensor.randomUniform.html#Tensor_HostTensor_randomUniform_System_Random_____T____T____int64_list_
  commentId: M:Tensor.randomUniform``1(System.Random,``0,``0,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "val Tensor.HostTensor.randomUniform: System.Random -> 'T * 'T -> int64 list -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.randomUniform: Random -> 'T * 'T -> int64 list -> Tensor<'T>"
- uid: Tensor.HostTensor.randomUniform*
  name: randomUniform
  href: api/Tensor.HostTensor.randomUniform.html
  commentId: Overload:Tensor.HostTensor.randomUniform*
  fullName: Tensor.HostTensor.randomUniform
  nameWithType: HostTensor.randomUniform
- uid: Tensor.HostTensor.read(Tensor.HDF5 -> string)
  name: "val read: HDF5 -> string -> Tensor<'T>"
  href: api/Tensor.HostTensor.read.html#Tensor_HostTensor_read_Tensor_HDF5____string_
  commentId: M:Tensor.read``1(Tensor.HDF5,System.String)
  fullName: "val Tensor.HostTensor.read: Tensor.HDF5 -> string -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.read: HDF5 -> string -> Tensor<'T>"
- uid: Tensor.HostTensor.read*
  name: read
  href: api/Tensor.HostTensor.read.html
  commentId: Overload:Tensor.HostTensor.read*
  fullName: Tensor.HostTensor.read
  nameWithType: HostTensor.read
- uid: Tensor.HostTensor.readUntyped(Tensor.HDF5 -> string)
  name: 'val readUntyped: HDF5 -> string -> ITensor'
  href: api/Tensor.HostTensor.readUntyped.html#Tensor_HostTensor_readUntyped_Tensor_HDF5____string_
  commentId: M:Tensor.readUntyped(Tensor.HDF5,System.String)
  fullName: 'val Tensor.HostTensor.readUntyped: Tensor.HDF5 -> string -> Tensor.ITensor'
  nameWithType: 'val HostTensor.readUntyped: HDF5 -> string -> ITensor'
- uid: Tensor.HostTensor.readUntyped*
  name: readUntyped
  href: api/Tensor.HostTensor.readUntyped.html
  commentId: Overload:Tensor.HostTensor.readUntyped*
  fullName: Tensor.HostTensor.readUntyped
  nameWithType: HostTensor.readUntyped
- uid: Tensor.HostTensor.scalar('T)
  name: "val scalar: 'T -> Tensor<'T>"
  href: api/Tensor.HostTensor.scalar.html#Tensor_HostTensor_scalar__T_
  commentId: M:Tensor.scalar``1(``0)
  fullName: "val Tensor.HostTensor.scalar: 'T -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.scalar: 'T -> Tensor<'T>"
- uid: Tensor.HostTensor.scalar*
  name: scalar
  href: api/Tensor.HostTensor.scalar.html
  commentId: Overload:Tensor.HostTensor.scalar*
  fullName: Tensor.HostTensor.scalar
  nameWithType: HostTensor.scalar
- uid: Tensor.HostTensor.toArray(Tensor.Tensor<'T>)
  name: "val toArray: Tensor<'T> -> 'T []"
  href: api/Tensor.HostTensor.toArray.html#Tensor_HostTensor_toArray_Tensor_Tensor__T__
  commentId: M:Tensor.toArray``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toArray: Tensor.Tensor<'T> -> 'T []"
  nameWithType: "val HostTensor.toArray: Tensor<'T> -> 'T []"
- uid: Tensor.HostTensor.toArray*
  name: toArray
  href: api/Tensor.HostTensor.toArray.html
  commentId: Overload:Tensor.HostTensor.toArray*
  fullName: Tensor.HostTensor.toArray
  nameWithType: HostTensor.toArray
- uid: Tensor.HostTensor.toArray2D(Tensor.Tensor<'T>)
  name: "val toArray2D: Tensor<'T> -> 'T [,]"
  href: api/Tensor.HostTensor.toArray2D.html#Tensor_HostTensor_toArray2D_Tensor_Tensor__T__
  commentId: M:Tensor.toArray2D``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toArray2D: Tensor.Tensor<'T> -> 'T [,]"
  nameWithType: "val HostTensor.toArray2D: Tensor<'T> -> 'T [,]"
- uid: Tensor.HostTensor.toArray2D*
  name: toArray2D
  href: api/Tensor.HostTensor.toArray2D.html
  commentId: Overload:Tensor.HostTensor.toArray2D*
  fullName: Tensor.HostTensor.toArray2D
  nameWithType: HostTensor.toArray2D
- uid: Tensor.HostTensor.toArray3D(Tensor.Tensor<'T>)
  name: "val toArray3D: Tensor<'T> -> 'T [,,]"
  href: api/Tensor.HostTensor.toArray3D.html#Tensor_HostTensor_toArray3D_Tensor_Tensor__T__
  commentId: M:Tensor.toArray3D``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toArray3D: Tensor.Tensor<'T> -> 'T [,,]"
  nameWithType: "val HostTensor.toArray3D: Tensor<'T> -> 'T [,,]"
- uid: Tensor.HostTensor.toArray3D*
  name: toArray3D
  href: api/Tensor.HostTensor.toArray3D.html
  commentId: Overload:Tensor.HostTensor.toArray3D*
  fullName: Tensor.HostTensor.toArray3D
  nameWithType: HostTensor.toArray3D
- uid: Tensor.HostTensor.toArray4D(Tensor.Tensor<'T>)
  name: "val toArray4D: Tensor<'T> -> 'T [,,,]"
  href: api/Tensor.HostTensor.toArray4D.html#Tensor_HostTensor_toArray4D_Tensor_Tensor__T__
  commentId: M:Tensor.toArray4D``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toArray4D: Tensor.Tensor<'T> -> 'T [,,,]"
  nameWithType: "val HostTensor.toArray4D: Tensor<'T> -> 'T [,,,]"
- uid: Tensor.HostTensor.toArray4D*
  name: toArray4D
  href: api/Tensor.HostTensor.toArray4D.html
  commentId: Overload:Tensor.HostTensor.toArray4D*
  fullName: Tensor.HostTensor.toArray4D
  nameWithType: HostTensor.toArray4D
- uid: Tensor.HostTensor.toList(Tensor.Tensor<'T>)
  name: "val toList: Tensor<'T> -> 'T list"
  href: api/Tensor.HostTensor.toList.html#Tensor_HostTensor_toList_Tensor_Tensor__T__
  commentId: M:Tensor.toList``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toList: Tensor.Tensor<'T> -> 'T list"
  nameWithType: "val HostTensor.toList: Tensor<'T> -> 'T list"
- uid: Tensor.HostTensor.toList*
  name: toList
  href: api/Tensor.HostTensor.toList.html
  commentId: Overload:Tensor.HostTensor.toList*
  fullName: Tensor.HostTensor.toList
  nameWithType: HostTensor.toList
- uid: Tensor.HostTensor.toList2D(Tensor.Tensor<'T>)
  name: "val toList2D: Tensor<'T> -> 'T list list"
  href: api/Tensor.HostTensor.toList2D.html#Tensor_HostTensor_toList2D_Tensor_Tensor__T__
  commentId: M:Tensor.toList2D``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toList2D: Tensor.Tensor<'T> -> 'T list list"
  nameWithType: "val HostTensor.toList2D: Tensor<'T> -> 'T list list"
- uid: Tensor.HostTensor.toList2D*
  name: toList2D
  href: api/Tensor.HostTensor.toList2D.html
  commentId: Overload:Tensor.HostTensor.toList2D*
  fullName: Tensor.HostTensor.toList2D
  nameWithType: HostTensor.toList2D
- uid: Tensor.HostTensor.toSeq(Tensor.Tensor<'T>)
  name: "val toSeq: Tensor<'T> -> seq<'T>"
  href: api/Tensor.HostTensor.toSeq.html#Tensor_HostTensor_toSeq_Tensor_Tensor__T__
  commentId: M:Tensor.toSeq``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.toSeq: Tensor.Tensor<'T> -> seq<'T>"
  nameWithType: "val HostTensor.toSeq: Tensor<'T> -> seq<'T>"
- uid: Tensor.HostTensor.toSeq*
  name: toSeq
  href: api/Tensor.HostTensor.toSeq.html
  commentId: Overload:Tensor.HostTensor.toSeq*
  fullName: Tensor.HostTensor.toSeq
  nameWithType: HostTensor.toSeq
- uid: Tensor.HostTensor.transfer(Tensor.Tensor<'T>)
  name: "val transfer: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.HostTensor.transfer.html#Tensor_HostTensor_transfer_Tensor_Tensor__T__
  commentId: M:Tensor.transfer``1(Tensor.Tensor{``0})
  fullName: "val Tensor.HostTensor.transfer: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.transfer: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.HostTensor.transfer*
  name: transfer
  href: api/Tensor.HostTensor.transfer.html
  commentId: Overload:Tensor.HostTensor.transfer*
  fullName: Tensor.HostTensor.transfer
  nameWithType: HostTensor.transfer
- uid: Tensor.HostTensor.trues(int64 list)
  name: 'val trues: int64 list -> Tensor<bool>'
  href: api/Tensor.HostTensor.trues.html#Tensor_HostTensor_trues_int64_list_
  commentId: M:Tensor.trues(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'val Tensor.HostTensor.trues: int64 list -> Tensor.Tensor<bool>'
  nameWithType: 'val HostTensor.trues: int64 list -> Tensor<bool>'
- uid: Tensor.HostTensor.trues*
  name: trues
  href: api/Tensor.HostTensor.trues.html
  commentId: Overload:Tensor.HostTensor.trues*
  fullName: Tensor.HostTensor.trues
  nameWithType: HostTensor.trues
- uid: Tensor.HostTensor.usingArray('T [])
  name: "val usingArray: 'T [] -> Tensor<'T>"
  href: api/Tensor.HostTensor.usingArray.html#Tensor_HostTensor_usingArray__T____
  commentId: M:Tensor.usingArray``1(``0[])
  fullName: "val Tensor.HostTensor.usingArray: 'T [] -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.usingArray: 'T [] -> Tensor<'T>"
- uid: Tensor.HostTensor.usingArray*
  name: usingArray
  href: api/Tensor.HostTensor.usingArray.html
  commentId: Overload:Tensor.HostTensor.usingArray*
  fullName: Tensor.HostTensor.usingArray
  nameWithType: HostTensor.usingArray
- uid: Tensor.HostTensor.write(Tensor.HDF5 -> string -> Tensor.ITensor)
  name: 'val write: HDF5 -> string -> ITensor -> unit'
  href: api/Tensor.HostTensor.write.html#Tensor_HostTensor_write_Tensor_HDF5____string____Tensor_ITensor_
  commentId: M:Tensor.write(Tensor.HDF5,System.String,Tensor.ITensor)
  fullName: 'val Tensor.HostTensor.write: Tensor.HDF5 -> string -> Tensor.ITensor -> unit'
  nameWithType: 'val HostTensor.write: HDF5 -> string -> ITensor -> unit'
- uid: Tensor.HostTensor.write*
  name: write
  href: api/Tensor.HostTensor.write.html
  commentId: Overload:Tensor.HostTensor.write*
  fullName: Tensor.HostTensor.write
  nameWithType: HostTensor.write
- uid: Tensor.HostTensor.zeros(int64 list)
  name: "val zeros: int64 list -> Tensor<'T>"
  href: api/Tensor.HostTensor.zeros.html#Tensor_HostTensor_zeros_int64_list_
  commentId: M:Tensor.zeros``1(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "val Tensor.HostTensor.zeros: int64 list -> Tensor.Tensor<'T>"
  nameWithType: "val HostTensor.zeros: int64 list -> Tensor<'T>"
- uid: Tensor.HostTensor.zeros*
  name: zeros
  href: api/Tensor.HostTensor.zeros.html
  commentId: Overload:Tensor.HostTensor.zeros*
  fullName: Tensor.HostTensor.zeros
  nameWithType: HostTensor.zeros
- uid: Tensor.ITensor
  name: ITensor
  href: api/Tensor.ITensor.html
  commentId: T:Tensor.ITensor
  fullName: Tensor.ITensor
  nameWithType: Tensor.ITensor
- uid: Tensor.ITensor.Copy(Tensor.TensorOrder option)
  name: 'abstract member Copy: TensorOrder option -> ITensor'
  href: api/Tensor.ITensor.Copy.html#Tensor_ITensor_Copy_Tensor_TensorOrder_option_
  commentId: M:Tensor.ITensor.Copy(Microsoft.FSharp.Core.FSharpOption{Tensor.TensorOrder})
  fullName: 'abstract member Tensor.ITensor.Copy: Tensor.TensorOrder option -> Tensor.ITensor'
  nameWithType: 'abstract member ITensor.Copy: TensorOrder option -> ITensor'
- uid: Tensor.ITensor.Copy*
  name: Copy
  href: api/Tensor.ITensor.Copy.html
  commentId: Overload:Tensor.ITensor.Copy*
  fullName: Tensor.ITensor.Copy
  nameWithType: ITensor.Copy
- uid: Tensor.ITensor.DataType(unit)
  name: 'abstract property DataType: Type'
  href: api/Tensor.ITensor.DataType.html#Tensor_ITensor_DataType_unit_
  commentId: P:Tensor.ITensor.DataType
  fullName: 'abstract property Tensor.ITensor.DataType: System.Type'
  nameWithType: 'abstract property ITensor.DataType: Type'
- uid: Tensor.ITensor.DataType*
  name: DataType
  href: api/Tensor.ITensor.DataType.html
  commentId: Overload:Tensor.ITensor.DataType*
  fullName: Tensor.ITensor.DataType
  nameWithType: ITensor.DataType
- uid: Tensor.ITensor.Dev(unit)
  name: 'abstract property Dev: ITensorDevice'
  href: api/Tensor.ITensor.Dev.html#Tensor_ITensor_Dev_unit_
  commentId: P:Tensor.ITensor.Dev
  fullName: 'abstract property Tensor.ITensor.Dev: Tensor.Backend.ITensorDevice'
  nameWithType: 'abstract property ITensor.Dev: ITensorDevice'
- uid: Tensor.ITensor.Dev*
  name: Dev
  href: api/Tensor.ITensor.Dev.html
  commentId: Overload:Tensor.ITensor.Dev*
  fullName: Tensor.ITensor.Dev
  nameWithType: ITensor.Dev
- uid: Tensor.ITensor.FillZero(unit)
  name: 'abstract member FillZero: unit -> unit'
  href: api/Tensor.ITensor.FillZero.html#Tensor_ITensor_FillZero_unit_
  commentId: M:Tensor.ITensor.FillZero
  fullName: 'abstract member Tensor.ITensor.FillZero: unit -> unit'
  nameWithType: 'abstract member ITensor.FillZero: unit -> unit'
- uid: Tensor.ITensor.FillZero*
  name: FillZero
  href: api/Tensor.ITensor.FillZero.html
  commentId: Overload:Tensor.ITensor.FillZero*
  fullName: Tensor.ITensor.FillZero
  nameWithType: ITensor.FillZero
- uid: Tensor.ITensor.Full(unit)
  name: 'abstract property Full: string'
  href: api/Tensor.ITensor.Full.html#Tensor_ITensor_Full_unit_
  commentId: P:Tensor.ITensor.Full
  fullName: 'abstract property Tensor.ITensor.Full: string'
  nameWithType: 'abstract property ITensor.Full: string'
- uid: Tensor.ITensor.Full*
  name: Full
  href: api/Tensor.ITensor.Full.html
  commentId: Overload:Tensor.ITensor.Full*
  fullName: Tensor.ITensor.Full
  nameWithType: ITensor.Full
- uid: Tensor.ITensor.Item(int64)
  name: 'abstract property Item: int64 -> ITensor'
  href: api/Tensor.ITensor.Item.html#Tensor_ITensor_Item_int64_
  commentId: P:Tensor.ITensor.Item(System.Int64)
  fullName: 'abstract property Tensor.ITensor.Item: int64 -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.Item: int64 -> ITensor'
- uid: Tensor.ITensor.Item(Tensor.Rng list)
  name: 'abstract property Item: Rng list -> ITensor'
  href: api/Tensor.ITensor.Item.html#Tensor_ITensor_Item_Tensor_Rng_list_
  commentId: P:Tensor.ITensor.Item(Microsoft.FSharp.Collections.FSharpList{Tensor.Rng})
  fullName: 'abstract property Tensor.ITensor.Item: Tensor.Rng list -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.Item: Rng list -> ITensor'
- uid: Tensor.ITensor.Item*
  name: Item
  href: api/Tensor.ITensor.Item.html
  commentId: Overload:Tensor.ITensor.Item*
  fullName: Tensor.ITensor.Item
  nameWithType: ITensor.Item
- uid: Tensor.ITensor.Layout(unit)
  name: 'abstract property Layout: TensorLayout'
  href: api/Tensor.ITensor.Layout.html#Tensor_ITensor_Layout_unit_
  commentId: P:Tensor.ITensor.Layout
  fullName: 'abstract property Tensor.ITensor.Layout: Tensor.Backend.TensorLayout'
  nameWithType: 'abstract property ITensor.Layout: TensorLayout'
- uid: Tensor.ITensor.Layout*
  name: Layout
  href: api/Tensor.ITensor.Layout.html
  commentId: Overload:Tensor.ITensor.Layout*
  fullName: Tensor.ITensor.Layout
  nameWithType: ITensor.Layout
- uid: Tensor.ITensor.M(Tensor.ITensor * Tensor.ITensor * Tensor.ITensor * Tensor.ITensor * Tensor.ITensor)
  name: 'abstract property M: ITensor * ITensor * ITensor * ITensor * ITensor -> ITensor'
  href: api/Tensor.ITensor.M.html#Tensor_ITensor_M_Tensor_ITensor___Tensor_ITensor___Tensor_ITensor___Tensor_ITensor___Tensor_ITensor_
  commentId: P:Tensor.ITensor.M(Tensor.ITensor,Tensor.ITensor,Tensor.ITensor,Tensor.ITensor,Tensor.ITensor)
  fullName: 'abstract property Tensor.ITensor.M: Tensor.ITensor * Tensor.ITensor * Tensor.ITensor * Tensor.ITensor * Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.M: ITensor * ITensor * ITensor * ITensor * ITensor -> ITensor'
- uid: Tensor.ITensor.M(Tensor.ITensor * Tensor.ITensor * Tensor.ITensor * Tensor.ITensor)
  name: 'abstract property M: ITensor * ITensor * ITensor * ITensor -> ITensor'
  href: api/Tensor.ITensor.M.html#Tensor_ITensor_M_Tensor_ITensor___Tensor_ITensor___Tensor_ITensor___Tensor_ITensor_
  commentId: P:Tensor.ITensor.M(Tensor.ITensor,Tensor.ITensor,Tensor.ITensor,Tensor.ITensor)
  fullName: 'abstract property Tensor.ITensor.M: Tensor.ITensor * Tensor.ITensor * Tensor.ITensor * Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.M: ITensor * ITensor * ITensor * ITensor -> ITensor'
- uid: Tensor.ITensor.M(Tensor.ITensor * Tensor.ITensor * Tensor.ITensor)
  name: 'abstract property M: ITensor * ITensor * ITensor -> ITensor'
  href: api/Tensor.ITensor.M.html#Tensor_ITensor_M_Tensor_ITensor___Tensor_ITensor___Tensor_ITensor_
  commentId: P:Tensor.ITensor.M(Tensor.ITensor,Tensor.ITensor,Tensor.ITensor)
  fullName: 'abstract property Tensor.ITensor.M: Tensor.ITensor * Tensor.ITensor * Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.M: ITensor * ITensor * ITensor -> ITensor'
- uid: Tensor.ITensor.M(Tensor.ITensor * Tensor.ITensor)
  name: 'abstract property M: ITensor * ITensor -> ITensor'
  href: api/Tensor.ITensor.M.html#Tensor_ITensor_M_Tensor_ITensor___Tensor_ITensor_
  commentId: P:Tensor.ITensor.M(Tensor.ITensor,Tensor.ITensor)
  fullName: 'abstract property Tensor.ITensor.M: Tensor.ITensor * Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.M: ITensor * ITensor -> ITensor'
- uid: Tensor.ITensor.M(Tensor.ITensor list)
  name: 'abstract property M: ITensor list -> ITensor'
  href: api/Tensor.ITensor.M.html#Tensor_ITensor_M_Tensor_ITensor_list_
  commentId: P:Tensor.ITensor.M(Microsoft.FSharp.Collections.FSharpList{Tensor.ITensor})
  fullName: 'abstract property Tensor.ITensor.M: Tensor.ITensor list -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.M: ITensor list -> ITensor'
- uid: Tensor.ITensor.M(Tensor.ITensor)
  name: 'abstract property M: ITensor -> ITensor'
  href: api/Tensor.ITensor.M.html#Tensor_ITensor_M_Tensor_ITensor_
  commentId: P:Tensor.ITensor.M(Tensor.ITensor)
  fullName: 'abstract property Tensor.ITensor.M: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'abstract property ITensor.M: ITensor -> ITensor'
- uid: Tensor.ITensor.M*
  name: M
  href: api/Tensor.ITensor.M.html
  commentId: Overload:Tensor.ITensor.M*
  fullName: Tensor.ITensor.M
  nameWithType: ITensor.M
- uid: Tensor.ITensor.NDims(unit)
  name: 'abstract property NDims: int'
  href: api/Tensor.ITensor.NDims.html#Tensor_ITensor_NDims_unit_
  commentId: P:Tensor.ITensor.NDims
  fullName: 'abstract property Tensor.ITensor.NDims: int'
  nameWithType: 'abstract property ITensor.NDims: int'
- uid: Tensor.ITensor.NDims*
  name: NDims
  href: api/Tensor.ITensor.NDims.html
  commentId: Overload:Tensor.ITensor.NDims*
  fullName: Tensor.ITensor.NDims
  nameWithType: ITensor.NDims
- uid: Tensor.ITensor.NElems(unit)
  name: 'abstract property NElems: int64'
  href: api/Tensor.ITensor.NElems.html#Tensor_ITensor_NElems_unit_
  commentId: P:Tensor.ITensor.NElems
  fullName: 'abstract property Tensor.ITensor.NElems: int64'
  nameWithType: 'abstract property ITensor.NElems: int64'
- uid: Tensor.ITensor.NElems*
  name: NElems
  href: api/Tensor.ITensor.NElems.html
  commentId: Overload:Tensor.ITensor.NElems*
  fullName: Tensor.ITensor.NElems
  nameWithType: ITensor.NElems
- uid: Tensor.ITensor.Pretty(unit)
  name: 'abstract property Pretty: string'
  href: api/Tensor.ITensor.Pretty.html#Tensor_ITensor_Pretty_unit_
  commentId: P:Tensor.ITensor.Pretty
  fullName: 'abstract property Tensor.ITensor.Pretty: string'
  nameWithType: 'abstract property ITensor.Pretty: string'
- uid: Tensor.ITensor.Pretty*
  name: Pretty
  href: api/Tensor.ITensor.Pretty.html
  commentId: Overload:Tensor.ITensor.Pretty*
  fullName: Tensor.ITensor.Pretty
  nameWithType: ITensor.Pretty
- uid: Tensor.ITensor.Relayout(Tensor.Backend.TensorLayout)
  name: 'abstract member Relayout: TensorLayout -> ITensor'
  href: api/Tensor.ITensor.Relayout.html#Tensor_ITensor_Relayout_Tensor_Backend_TensorLayout_
  commentId: M:Tensor.ITensor.Relayout(Tensor.Backend.TensorLayout)
  fullName: 'abstract member Tensor.ITensor.Relayout: Tensor.Backend.TensorLayout -> Tensor.ITensor'
  nameWithType: 'abstract member ITensor.Relayout: TensorLayout -> ITensor'
- uid: Tensor.ITensor.Relayout*
  name: Relayout
  href: api/Tensor.ITensor.Relayout.html
  commentId: Overload:Tensor.ITensor.Relayout*
  fullName: Tensor.ITensor.Relayout
  nameWithType: ITensor.Relayout
- uid: Tensor.ITensor.Shape(unit)
  name: 'abstract property Shape: int64 list'
  href: api/Tensor.ITensor.Shape.html#Tensor_ITensor_Shape_unit_
  commentId: P:Tensor.ITensor.Shape
  fullName: 'abstract property Tensor.ITensor.Shape: int64 list'
  nameWithType: 'abstract property ITensor.Shape: int64 list'
- uid: Tensor.ITensor.Shape*
  name: Shape
  href: api/Tensor.ITensor.Shape.html
  commentId: Overload:Tensor.ITensor.Shape*
  fullName: Tensor.ITensor.Shape
  nameWithType: ITensor.Shape
- uid: Tensor.ITensor.Storage(unit)
  name: 'abstract property Storage: ITensorStorage'
  href: api/Tensor.ITensor.Storage.html#Tensor_ITensor_Storage_unit_
  commentId: P:Tensor.ITensor.Storage
  fullName: 'abstract property Tensor.ITensor.Storage: Tensor.Backend.ITensorStorage'
  nameWithType: 'abstract property ITensor.Storage: ITensorStorage'
- uid: Tensor.ITensor.Storage*
  name: Storage
  href: api/Tensor.ITensor.Storage.html
  commentId: Overload:Tensor.ITensor.Storage*
  fullName: Tensor.ITensor.Storage
  nameWithType: ITensor.Storage
- uid: Tensor.ITensor.Transfer(Tensor.Backend.ITensorDevice)
  name: 'abstract member Transfer: ITensorDevice -> ITensor'
  href: api/Tensor.ITensor.Transfer.html#Tensor_ITensor_Transfer_Tensor_Backend_ITensorDevice_
  commentId: M:Tensor.ITensor.Transfer(Tensor.Backend.ITensorDevice)
  fullName: 'abstract member Tensor.ITensor.Transfer: Tensor.Backend.ITensorDevice -> Tensor.ITensor'
  nameWithType: 'abstract member ITensor.Transfer: ITensorDevice -> ITensor'
- uid: Tensor.ITensor.Transfer*
  name: Transfer
  href: api/Tensor.ITensor.Transfer.html
  commentId: Overload:Tensor.ITensor.Transfer*
  fullName: Tensor.ITensor.Transfer
  nameWithType: ITensor.Transfer
- uid: Tensor.ITensorModule
  name: ITensor (mod)
  href: api/Tensor.ITensorModule.html
  commentId: T:Tensor.ITensorModule
  fullName: Tensor.ITensorModule
  nameWithType: Tensor.ITensorModule
- uid: Tensor.ITensorModule.allIdx(Tensor.ITensor)
  name: 'val allIdx: ITensor -> seq<int64 list>'
  href: api/Tensor.ITensorModule.allIdx.html#Tensor_ITensorModule_allIdx_Tensor_ITensor_
  commentId: M:Tensor.allIdx(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.allIdx: Tensor.ITensor -> seq<int64 list>'
  nameWithType: 'val ITensor.allIdx: ITensor -> seq<int64 list>'
- uid: Tensor.ITensorModule.allIdx*
  name: allIdx
  href: api/Tensor.ITensorModule.allIdx.html
  commentId: Overload:Tensor.ITensorModule.allIdx*
  fullName: Tensor.ITensorModule.allIdx
  nameWithType: ITensor.allIdx
- uid: Tensor.ITensorModule.atLeast1D(Tensor.ITensor)
  name: 'val atLeast1D: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.atLeast1D.html#Tensor_ITensorModule_atLeast1D_Tensor_ITensor_
  commentId: M:Tensor.atLeast1D(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.atLeast1D: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.atLeast1D: ITensor -> ITensor'
- uid: Tensor.ITensorModule.atLeast1D*
  name: atLeast1D
  href: api/Tensor.ITensorModule.atLeast1D.html
  commentId: Overload:Tensor.ITensorModule.atLeast1D*
  fullName: Tensor.ITensorModule.atLeast1D
  nameWithType: ITensor.atLeast1D
- uid: Tensor.ITensorModule.atLeast2D(Tensor.ITensor)
  name: 'val atLeast2D: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.atLeast2D.html#Tensor_ITensorModule_atLeast2D_Tensor_ITensor_
  commentId: M:Tensor.atLeast2D(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.atLeast2D: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.atLeast2D: ITensor -> ITensor'
- uid: Tensor.ITensorModule.atLeast2D*
  name: atLeast2D
  href: api/Tensor.ITensorModule.atLeast2D.html
  commentId: Overload:Tensor.ITensorModule.atLeast2D*
  fullName: Tensor.ITensorModule.atLeast2D
  nameWithType: ITensor.atLeast2D
- uid: Tensor.ITensorModule.atLeast3D(Tensor.ITensor)
  name: 'val atLeast3D: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.atLeast3D.html#Tensor_ITensorModule_atLeast3D_Tensor_ITensor_
  commentId: M:Tensor.atLeast3D(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.atLeast3D: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.atLeast3D: ITensor -> ITensor'
- uid: Tensor.ITensorModule.atLeast3D*
  name: atLeast3D
  href: api/Tensor.ITensorModule.atLeast3D.html
  commentId: Overload:Tensor.ITensorModule.atLeast3D*
  fullName: Tensor.ITensorModule.atLeast3D
  nameWithType: ITensor.atLeast3D
- uid: Tensor.ITensorModule.atLeastND(int -> Tensor.ITensor)
  name: 'val atLeastND: int -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.atLeastND.html#Tensor_ITensorModule_atLeastND_int____Tensor_ITensor_
  commentId: M:Tensor.atLeastND(System.Int32,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.atLeastND: int -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.atLeastND: int -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.atLeastND*
  name: atLeastND
  href: api/Tensor.ITensorModule.atLeastND.html
  commentId: Overload:Tensor.ITensorModule.atLeastND*
  fullName: Tensor.ITensorModule.atLeastND
  nameWithType: ITensor.atLeastND
- uid: Tensor.ITensorModule.broadcastDim(int -> int64 -> Tensor.ITensor)
  name: 'val broadcastDim: int -> int64 -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.broadcastDim.html#Tensor_ITensorModule_broadcastDim_int____int64____Tensor_ITensor_
  commentId: M:Tensor.broadcastDim(System.Int32,System.Int64,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.broadcastDim: int -> int64 -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.broadcastDim: int -> int64 -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.broadcastDim*
  name: broadcastDim
  href: api/Tensor.ITensorModule.broadcastDim.html
  commentId: Overload:Tensor.ITensorModule.broadcastDim*
  fullName: Tensor.ITensorModule.broadcastDim
  nameWithType: ITensor.broadcastDim
- uid: Tensor.ITensorModule.broadcastTo(int64 list -> Tensor.ITensor)
  name: 'val broadcastTo: int64 list -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.broadcastTo.html#Tensor_ITensorModule_broadcastTo_int64_list____Tensor_ITensor_
  commentId: M:Tensor.broadcastTo(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.broadcastTo: int64 list -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.broadcastTo: int64 list -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.broadcastTo*
  name: broadcastTo
  href: api/Tensor.ITensorModule.broadcastTo.html
  commentId: Overload:Tensor.ITensorModule.broadcastTo*
  fullName: Tensor.ITensorModule.broadcastTo
  nameWithType: ITensor.broadcastTo
- uid: Tensor.ITensorModule.broadcastToSame(Tensor.ITensor list)
  name: 'val broadcastToSame: ITensor list -> ITensor list'
  href: api/Tensor.ITensorModule.broadcastToSame.html#Tensor_ITensorModule_broadcastToSame_Tensor_ITensor_list_
  commentId: M:Tensor.broadcastToSame(Microsoft.FSharp.Collections.FSharpList{Tensor.ITensor})
  fullName: 'val Tensor.ITensorModule.broadcastToSame: Tensor.ITensor list -> Tensor.ITensor list'
  nameWithType: 'val ITensor.broadcastToSame: ITensor list -> ITensor list'
- uid: Tensor.ITensorModule.broadcastToSame*
  name: broadcastToSame
  href: api/Tensor.ITensorModule.broadcastToSame.html
  commentId: Overload:Tensor.ITensorModule.broadcastToSame*
  fullName: Tensor.ITensorModule.broadcastToSame
  nameWithType: ITensor.broadcastToSame
- uid: Tensor.ITensorModule.broadcastToSameInDims(seq<int> * Tensor.ITensor list)
  name: 'val broadcastToSameInDims: seq<int> * ITensor list -> ITensor list'
  href: api/Tensor.ITensorModule.broadcastToSameInDims.html#Tensor_ITensorModule_broadcastToSameInDims_seq_int____Tensor_ITensor_list_
  commentId: M:Tensor.broadcastToSameInDims(System.Collections.Generic.IEnumerable{System.Int32},Microsoft.FSharp.Collections.FSharpList{Tensor.ITensor})
  fullName: 'val Tensor.ITensorModule.broadcastToSameInDims: seq<int> * Tensor.ITensor list -> Tensor.ITensor list'
  nameWithType: 'val ITensor.broadcastToSameInDims: seq<int> * ITensor list -> ITensor list'
- uid: Tensor.ITensorModule.broadcastToSameInDims*
  name: broadcastToSameInDims
  href: api/Tensor.ITensorModule.broadcastToSameInDims.html
  commentId: Overload:Tensor.ITensorModule.broadcastToSameInDims*
  fullName: Tensor.ITensorModule.broadcastToSameInDims
  nameWithType: ITensor.broadcastToSameInDims
- uid: Tensor.ITensorModule.copy(Tensor.ITensor)
  name: 'val copy: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.copy.html#Tensor_ITensorModule_copy_Tensor_ITensor_
  commentId: M:Tensor.copy(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.copy: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.copy: ITensor -> ITensor'
- uid: Tensor.ITensorModule.copy*
  name: copy
  href: api/Tensor.ITensorModule.copy.html
  commentId: Overload:Tensor.ITensorModule.copy*
  fullName: Tensor.ITensorModule.copy
  nameWithType: ITensor.copy
- uid: Tensor.ITensorModule.cutLeft(Tensor.ITensor)
  name: 'val cutLeft: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.cutLeft.html#Tensor_ITensorModule_cutLeft_Tensor_ITensor_
  commentId: M:Tensor.cutLeft(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.cutLeft: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.cutLeft: ITensor -> ITensor'
- uid: Tensor.ITensorModule.cutLeft*
  name: cutLeft
  href: api/Tensor.ITensorModule.cutLeft.html
  commentId: Overload:Tensor.ITensorModule.cutLeft*
  fullName: Tensor.ITensorModule.cutLeft
  nameWithType: ITensor.cutLeft
- uid: Tensor.ITensorModule.cutRight(Tensor.ITensor)
  name: 'val cutRight: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.cutRight.html#Tensor_ITensorModule_cutRight_Tensor_ITensor_
  commentId: M:Tensor.cutRight(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.cutRight: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.cutRight: ITensor -> ITensor'
- uid: Tensor.ITensorModule.cutRight*
  name: cutRight
  href: api/Tensor.ITensorModule.cutRight.html
  commentId: Overload:Tensor.ITensorModule.cutRight*
  fullName: Tensor.ITensorModule.cutRight
  nameWithType: ITensor.cutRight
- uid: Tensor.ITensorModule.dataType(Tensor.ITensor)
  name: 'val dataType: ITensor -> Type'
  href: api/Tensor.ITensorModule.dataType.html#Tensor_ITensorModule_dataType_Tensor_ITensor_
  commentId: M:Tensor.dataType(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.dataType: Tensor.ITensor -> System.Type'
  nameWithType: 'val ITensor.dataType: ITensor -> Type'
- uid: Tensor.ITensorModule.dataType*
  name: dataType
  href: api/Tensor.ITensorModule.dataType.html
  commentId: Overload:Tensor.ITensorModule.dataType*
  fullName: Tensor.ITensorModule.dataType
  nameWithType: ITensor.dataType
- uid: Tensor.ITensorModule.dev(Tensor.ITensor)
  name: 'val dev: ITensor -> ITensorDevice'
  href: api/Tensor.ITensorModule.dev.html#Tensor_ITensorModule_dev_Tensor_ITensor_
  commentId: M:Tensor.dev(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.dev: Tensor.ITensor -> Tensor.Backend.ITensorDevice'
  nameWithType: 'val ITensor.dev: ITensor -> ITensorDevice'
- uid: Tensor.ITensorModule.dev*
  name: dev
  href: api/Tensor.ITensorModule.dev.html
  commentId: Overload:Tensor.ITensorModule.dev*
  fullName: Tensor.ITensorModule.dev
  nameWithType: ITensor.dev
- uid: Tensor.ITensorModule.flatten(Tensor.ITensor)
  name: 'val flatten: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.flatten.html#Tensor_ITensorModule_flatten_Tensor_ITensor_
  commentId: M:Tensor.flatten(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.flatten: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.flatten: ITensor -> ITensor'
- uid: Tensor.ITensorModule.flatten*
  name: flatten
  href: api/Tensor.ITensorModule.flatten.html
  commentId: Overload:Tensor.ITensorModule.flatten*
  fullName: Tensor.ITensorModule.flatten
  nameWithType: ITensor.flatten
- uid: Tensor.ITensorModule.insertAxis(int -> Tensor.ITensor)
  name: 'val insertAxis: int -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.insertAxis.html#Tensor_ITensorModule_insertAxis_int____Tensor_ITensor_
  commentId: M:Tensor.insertAxis(System.Int32,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.insertAxis: int -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.insertAxis: int -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.insertAxis*
  name: insertAxis
  href: api/Tensor.ITensorModule.insertAxis.html
  commentId: Overload:Tensor.ITensorModule.insertAxis*
  fullName: Tensor.ITensorModule.insertAxis
  nameWithType: ITensor.insertAxis
- uid: Tensor.ITensorModule.isBroadcasted(Tensor.ITensor)
  name: 'val isBroadcasted: ITensor -> bool'
  href: api/Tensor.ITensorModule.isBroadcasted.html#Tensor_ITensorModule_isBroadcasted_Tensor_ITensor_
  commentId: M:Tensor.isBroadcasted(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.isBroadcasted: Tensor.ITensor -> bool'
  nameWithType: 'val ITensor.isBroadcasted: ITensor -> bool'
- uid: Tensor.ITensorModule.isBroadcasted*
  name: isBroadcasted
  href: api/Tensor.ITensorModule.isBroadcasted.html
  commentId: Overload:Tensor.ITensorModule.isBroadcasted*
  fullName: Tensor.ITensorModule.isBroadcasted
  nameWithType: ITensor.isBroadcasted
- uid: Tensor.ITensorModule.layout(Tensor.ITensor)
  name: 'val layout: ITensor -> TensorLayout'
  href: api/Tensor.ITensorModule.layout.html#Tensor_ITensorModule_layout_Tensor_ITensor_
  commentId: M:Tensor.layout(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.layout: Tensor.ITensor -> Tensor.Backend.TensorLayout'
  nameWithType: 'val ITensor.layout: ITensor -> TensorLayout'
- uid: Tensor.ITensorModule.layout*
  name: layout
  href: api/Tensor.ITensorModule.layout.html
  commentId: Overload:Tensor.ITensorModule.layout*
  fullName: Tensor.ITensorModule.layout
  nameWithType: ITensor.layout
- uid: Tensor.ITensorModule.nDims(Tensor.ITensor)
  name: 'val nDims: ITensor -> int'
  href: api/Tensor.ITensorModule.nDims.html#Tensor_ITensorModule_nDims_Tensor_ITensor_
  commentId: M:Tensor.nDims(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.nDims: Tensor.ITensor -> int'
  nameWithType: 'val ITensor.nDims: ITensor -> int'
- uid: Tensor.ITensorModule.nDims*
  name: nDims
  href: api/Tensor.ITensorModule.nDims.html
  commentId: Overload:Tensor.ITensorModule.nDims*
  fullName: Tensor.ITensorModule.nDims
  nameWithType: ITensor.nDims
- uid: Tensor.ITensorModule.nElems(Tensor.ITensor)
  name: 'val nElems: ITensor -> int64'
  href: api/Tensor.ITensorModule.nElems.html#Tensor_ITensorModule_nElems_Tensor_ITensor_
  commentId: M:Tensor.nElems(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.nElems: Tensor.ITensor -> int64'
  nameWithType: 'val ITensor.nElems: ITensor -> int64'
- uid: Tensor.ITensorModule.nElems*
  name: nElems
  href: api/Tensor.ITensorModule.nElems.html
  commentId: Overload:Tensor.ITensorModule.nElems*
  fullName: Tensor.ITensorModule.nElems
  nameWithType: ITensor.nElems
- uid: Tensor.ITensorModule.padLeft(Tensor.ITensor)
  name: 'val padLeft: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.padLeft.html#Tensor_ITensorModule_padLeft_Tensor_ITensor_
  commentId: M:Tensor.padLeft(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.padLeft: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.padLeft: ITensor -> ITensor'
- uid: Tensor.ITensorModule.padLeft*
  name: padLeft
  href: api/Tensor.ITensorModule.padLeft.html
  commentId: Overload:Tensor.ITensorModule.padLeft*
  fullName: Tensor.ITensorModule.padLeft
  nameWithType: ITensor.padLeft
- uid: Tensor.ITensorModule.padRight(Tensor.ITensor)
  name: 'val padRight: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.padRight.html#Tensor_ITensorModule_padRight_Tensor_ITensor_
  commentId: M:Tensor.padRight(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.padRight: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.padRight: ITensor -> ITensor'
- uid: Tensor.ITensorModule.padRight*
  name: padRight
  href: api/Tensor.ITensorModule.padRight.html
  commentId: Overload:Tensor.ITensorModule.padRight*
  fullName: Tensor.ITensorModule.padRight
  nameWithType: ITensor.padRight
- uid: Tensor.ITensorModule.padToSame(Tensor.ITensor list)
  name: 'val padToSame: ITensor list -> ITensor list'
  href: api/Tensor.ITensorModule.padToSame.html#Tensor_ITensorModule_padToSame_Tensor_ITensor_list_
  commentId: M:Tensor.padToSame(Microsoft.FSharp.Collections.FSharpList{Tensor.ITensor})
  fullName: 'val Tensor.ITensorModule.padToSame: Tensor.ITensor list -> Tensor.ITensor list'
  nameWithType: 'val ITensor.padToSame: ITensor list -> ITensor list'
- uid: Tensor.ITensorModule.padToSame*
  name: padToSame
  href: api/Tensor.ITensorModule.padToSame.html
  commentId: Overload:Tensor.ITensorModule.padToSame*
  fullName: Tensor.ITensorModule.padToSame
  nameWithType: ITensor.padToSame
- uid: Tensor.ITensorModule.permuteAxes(int list -> Tensor.ITensor)
  name: 'val permuteAxes: int list -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.permuteAxes.html#Tensor_ITensorModule_permuteAxes_int_list____Tensor_ITensor_
  commentId: M:Tensor.permuteAxes(Microsoft.FSharp.Collections.FSharpList{System.Int32},Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.permuteAxes: int list -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.permuteAxes: int list -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.permuteAxes*
  name: permuteAxes
  href: api/Tensor.ITensorModule.permuteAxes.html
  commentId: Overload:Tensor.ITensorModule.permuteAxes*
  fullName: Tensor.ITensorModule.permuteAxes
  nameWithType: ITensor.permuteAxes
- uid: Tensor.ITensorModule.range(Tensor.Rng list -> Tensor.ITensor)
  name: 'val range: Rng list -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.range.html#Tensor_ITensorModule_range_Tensor_Rng_list____Tensor_ITensor_
  commentId: M:Tensor.range(Microsoft.FSharp.Collections.FSharpList{Tensor.Rng},Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.range: Tensor.Rng list -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.range: Rng list -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.range*
  name: range
  href: api/Tensor.ITensorModule.range.html
  commentId: Overload:Tensor.ITensorModule.range*
  fullName: Tensor.ITensorModule.range
  nameWithType: ITensor.range
- uid: Tensor.ITensorModule.relayout(Tensor.Backend.TensorLayout -> Tensor.ITensor)
  name: 'val relayout: TensorLayout -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.relayout.html#Tensor_ITensorModule_relayout_Tensor_Backend_TensorLayout____Tensor_ITensor_
  commentId: M:Tensor.relayout(Tensor.Backend.TensorLayout,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.relayout: Tensor.Backend.TensorLayout -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.relayout: TensorLayout -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.relayout*
  name: relayout
  href: api/Tensor.ITensorModule.relayout.html
  commentId: Overload:Tensor.ITensorModule.relayout*
  fullName: Tensor.ITensorModule.relayout
  nameWithType: ITensor.relayout
- uid: Tensor.ITensorModule.reshape(int64 list -> Tensor.ITensor)
  name: 'val reshape: int64 list -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.reshape.html#Tensor_ITensorModule_reshape_int64_list____Tensor_ITensor_
  commentId: M:Tensor.reshape(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.reshape: int64 list -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.reshape: int64 list -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.reshape*
  name: reshape
  href: api/Tensor.ITensorModule.reshape.html
  commentId: Overload:Tensor.ITensorModule.reshape*
  fullName: Tensor.ITensorModule.reshape
  nameWithType: ITensor.reshape
- uid: Tensor.ITensorModule.reshapeView(int64 list -> Tensor.ITensor)
  name: 'val reshapeView: int64 list -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.reshapeView.html#Tensor_ITensorModule_reshapeView_int64_list____Tensor_ITensor_
  commentId: M:Tensor.reshapeView(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.reshapeView: int64 list -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.reshapeView: int64 list -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.reshapeView*
  name: reshapeView
  href: api/Tensor.ITensorModule.reshapeView.html
  commentId: Overload:Tensor.ITensorModule.reshapeView*
  fullName: Tensor.ITensorModule.reshapeView
  nameWithType: ITensor.reshapeView
- uid: Tensor.ITensorModule.reverseAxis(int -> Tensor.ITensor)
  name: 'val reverseAxis: int -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.reverseAxis.html#Tensor_ITensorModule_reverseAxis_int____Tensor_ITensor_
  commentId: M:Tensor.reverseAxis(System.Int32,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.reverseAxis: int -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.reverseAxis: int -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.reverseAxis*
  name: reverseAxis
  href: api/Tensor.ITensorModule.reverseAxis.html
  commentId: Overload:Tensor.ITensorModule.reverseAxis*
  fullName: Tensor.ITensorModule.reverseAxis
  nameWithType: ITensor.reverseAxis
- uid: Tensor.ITensorModule.shape(Tensor.ITensor)
  name: 'val shape: ITensor -> int64 list'
  href: api/Tensor.ITensorModule.shape.html#Tensor_ITensorModule_shape_Tensor_ITensor_
  commentId: M:Tensor.shape(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.shape: Tensor.ITensor -> int64 list'
  nameWithType: 'val ITensor.shape: ITensor -> int64 list'
- uid: Tensor.ITensorModule.shape*
  name: shape
  href: api/Tensor.ITensorModule.shape.html
  commentId: Overload:Tensor.ITensorModule.shape*
  fullName: Tensor.ITensorModule.shape
  nameWithType: ITensor.shape
- uid: Tensor.ITensorModule.swapDim(int -> int -> Tensor.ITensor)
  name: 'val swapDim: int -> int -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.swapDim.html#Tensor_ITensorModule_swapDim_int____int____Tensor_ITensor_
  commentId: M:Tensor.swapDim(System.Int32,System.Int32,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.swapDim: int -> int -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.swapDim: int -> int -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.swapDim*
  name: swapDim
  href: api/Tensor.ITensorModule.swapDim.html
  commentId: Overload:Tensor.ITensorModule.swapDim*
  fullName: Tensor.ITensorModule.swapDim
  nameWithType: ITensor.swapDim
- uid: Tensor.ITensorModule.transfer(Tensor.Backend.ITensorDevice -> Tensor.ITensor)
  name: 'val transfer: ITensorDevice -> ITensor -> ITensor'
  href: api/Tensor.ITensorModule.transfer.html#Tensor_ITensorModule_transfer_Tensor_Backend_ITensorDevice____Tensor_ITensor_
  commentId: M:Tensor.transfer(Tensor.Backend.ITensorDevice,Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.transfer: Tensor.Backend.ITensorDevice -> Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.transfer: ITensorDevice -> ITensor -> ITensor'
- uid: Tensor.ITensorModule.transfer*
  name: transfer
  href: api/Tensor.ITensorModule.transfer.html
  commentId: Overload:Tensor.ITensorModule.transfer*
  fullName: Tensor.ITensorModule.transfer
  nameWithType: ITensor.transfer
- uid: Tensor.ITensorModule.transpose(Tensor.ITensor)
  name: 'val transpose: ITensor -> ITensor'
  href: api/Tensor.ITensorModule.transpose.html#Tensor_ITensorModule_transpose_Tensor_ITensor_
  commentId: M:Tensor.transpose(Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.transpose: Tensor.ITensor -> Tensor.ITensor'
  nameWithType: 'val ITensor.transpose: ITensor -> ITensor'
- uid: Tensor.ITensorModule.transpose*
  name: transpose
  href: api/Tensor.ITensorModule.transpose.html
  commentId: Overload:Tensor.ITensorModule.transpose*
  fullName: Tensor.ITensorModule.transpose
  nameWithType: ITensor.transpose
- uid: Tensor.ITensorModule.tryReshapeView(int64 list -> Tensor.ITensor)
  name: 'val tryReshapeView: int64 list -> ITensor -> ITensor option'
  href: api/Tensor.ITensorModule.tryReshapeView.html#Tensor_ITensorModule_tryReshapeView_int64_list____Tensor_ITensor_
  commentId: M:Tensor.tryReshapeView(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.ITensor)
  fullName: 'val Tensor.ITensorModule.tryReshapeView: int64 list -> Tensor.ITensor -> Tensor.ITensor option'
  nameWithType: 'val ITensor.tryReshapeView: int64 list -> ITensor -> ITensor option'
- uid: Tensor.ITensorModule.tryReshapeView*
  name: tryReshapeView
  href: api/Tensor.ITensorModule.tryReshapeView.html
  commentId: Overload:Tensor.ITensorModule.tryReshapeView*
  fullName: Tensor.ITensorModule.tryReshapeView
  nameWithType: ITensor.tryReshapeView
- uid: Tensor.MatrixPart
  name: MatrixPart (union)
  href: api/Tensor.MatrixPart.html
  commentId: T:Tensor.MatrixPart
  fullName: Tensor.MatrixPart
  nameWithType: Tensor.MatrixPart
- uid: Tensor.MatrixPart.Lower
  name: Lower
  href: api/Tensor.MatrixPart.Lower.html
  commentId: T:Tensor.MatrixPart.Lower
  fullName: Tensor.MatrixPart.Lower
  nameWithType: MatrixPart.Lower
- uid: Tensor.MatrixPart.Upper
  name: Upper
  href: api/Tensor.MatrixPart.Upper.html
  commentId: T:Tensor.MatrixPart.Upper
  fullName: Tensor.MatrixPart.Upper
  nameWithType: MatrixPart.Upper
- uid: Tensor.Operators
  name: Operators (mod)
  href: api/Tensor.Operators.html
  commentId: T:Tensor.Operators
  fullName: Tensor.Operators
  nameWithType: Tensor.Operators
- uid: Tensor.Operators.Sgn('T)
  name: "val sgn: 'T -> 'T"
  href: api/Tensor.Operators.Sgn.html#Tensor_Operators_Sgn__T_
  commentId: M:Tensor.Sgn``1(``0)
  fullName: "val Tensor.Operators.sgn: 'T -> 'T"
  nameWithType: "val Operators.sgn: 'T -> 'T"
- uid: Tensor.Operators.Sgn*
  name: sgn
  href: api/Tensor.Operators.Sgn.html
  commentId: Overload:Tensor.Operators.Sgn*
  fullName: Tensor.Operators.sgn
  nameWithType: Operators.sgn
- uid: Tensor.Rng
  name: Rng (union)
  href: api/Tensor.Rng.html
  commentId: T:Tensor.Rng
  fullName: Tensor.Rng
  nameWithType: Tensor.Rng
- uid: Tensor.Rng.All(unit)
  name: 'static property All: Rng'
  href: api/Tensor.Rng.All.html#Tensor_Rng_All_unit_
  commentId: P:Tensor.Rng.All
  fullName: 'static property Tensor.Rng.All: Tensor.Rng'
  nameWithType: 'static property Rng.All: Rng'
- uid: Tensor.Rng.All*
  name: All
  href: api/Tensor.Rng.All.html
  commentId: Overload:Tensor.Rng.All*
  fullName: Tensor.Rng.All
  nameWithType: Rng.All
- uid: Tensor.Rng.AllFill
  name: AllFill
  href: api/Tensor.Rng.AllFill.html
  commentId: T:Tensor.Rng.AllFill
  fullName: Tensor.Rng.AllFill
  nameWithType: Rng.AllFill
- uid: Tensor.Rng.Elem
  name: Elem of int64
  href: api/Tensor.Rng.Elem.html
  commentId: T:Tensor.Rng.Elem
  fullName: Tensor.Rng.Elem of int64
  nameWithType: Rng.Elem of int64
- uid: Tensor.Rng.NewAxis
  name: NewAxis
  href: api/Tensor.Rng.NewAxis.html
  commentId: T:Tensor.Rng.NewAxis
  fullName: Tensor.Rng.NewAxis
  nameWithType: Rng.NewAxis
- uid: Tensor.Rng.Pretty(unit)
  name: 'property Pretty: string'
  href: api/Tensor.Rng.Pretty.html#Tensor_Rng_Pretty_unit_
  commentId: P:Tensor.Rng.Pretty
  fullName: 'property Tensor.Rng.Pretty: string'
  nameWithType: 'property Rng.Pretty: string'
- uid: Tensor.Rng.Pretty*
  name: Pretty
  href: api/Tensor.Rng.Pretty.html
  commentId: Overload:Tensor.Rng.Pretty*
  fullName: Tensor.Rng.Pretty
  nameWithType: Rng.Pretty
- uid: Tensor.Rng.Rng
  name: 'Rng of first: int64 option * last: int64 option'
  href: api/Tensor.Rng.Rng.html
  commentId: T:Tensor.Rng.Rng
  fullName: 'Tensor.Rng.Rng of first: int64 option * last: int64 option'
  nameWithType: 'Rng.Rng of first: int64 option * last: int64 option'
- uid: Tensor.SingularMatrixException
  name: SingularMatrixException
  href: api/Tensor.SingularMatrixException.html
  commentId: T:Tensor.SingularMatrixException
  fullName: Tensor.SingularMatrixException
  nameWithType: Tensor.SingularMatrixException
- uid: Tensor.SingularMatrixException.Message(unit)
  name: 'override property Message: string'
  href: api/Tensor.SingularMatrixException.Message.html#Tensor_SingularMatrixException_Message_unit_
  commentId: P:Tensor.SingularMatrixException.Message
  fullName: 'override property Tensor.SingularMatrixException.Message: string'
  nameWithType: 'override property SingularMatrixException.Message: string'
- uid: Tensor.SingularMatrixException.Message*
  name: Message
  href: api/Tensor.SingularMatrixException.Message.html
  commentId: Overload:Tensor.SingularMatrixException.Message*
  fullName: Tensor.SingularMatrixException.Message
  nameWithType: SingularMatrixException.Message
- uid: Tensor.SingularMatrixException.msg
  name: 'val msg: string'
  href: api/Tensor.SingularMatrixException.msg.html
  commentId: P:Tensor.SingularMatrixException.msg
  fullName: 'val Tensor.SingularMatrixException.msg: string'
  nameWithType: 'val SingularMatrixException.msg: string'
- uid: Tensor.Tensor`1
  name: Tensor<'T>
  href: api/Tensor.Tensor-1.html
  commentId: T:Tensor.Tensor`1
  fullName: Tensor.Tensor`1
  nameWithType: Tensor.Tensor`1
- uid: Tensor.Tensor`1.#ctor(int64 list * Tensor.Backend.ITensorDevice * Tensor.TensorOrder option)
  name: "new: int64 list * ITensorDevice * TensorOrder option -> Tensor<'T>"
  href: api/Tensor.Tensor-1.-ctor.html#Tensor_Tensor_1__ctor_int64_list___Tensor_Backend_ITensorDevice___Tensor_TensorOrder_option_
  commentId: M:Tensor.Tensor`1.#ctor(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Backend.ITensorDevice,Microsoft.FSharp.Core.FSharpOption{Tensor.TensorOrder})
  fullName: "new: int64 list * Tensor.Backend.ITensorDevice * Tensor.TensorOrder option -> Tensor.Tensor<'T>"
  nameWithType: "new: int64 list * ITensorDevice * TensorOrder option -> Tensor<'T>"
- uid: Tensor.Tensor`1.#ctor(Tensor.Backend.TensorLayout * Tensor.Backend.ITensorStorage<'T>)
  name: "new: TensorLayout * ITensorStorage<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.-ctor.html#Tensor_Tensor_1__ctor_Tensor_Backend_TensorLayout___Tensor_Backend_ITensorStorage__T__
  commentId: M:Tensor.Tensor`1.#ctor(Tensor.Backend.TensorLayout,Tensor.Backend.ITensorStorage{`0})
  fullName: "new: Tensor.Backend.TensorLayout * Tensor.Backend.ITensorStorage<'T> -> Tensor.Tensor<'T>"
  nameWithType: "new: TensorLayout * ITensorStorage<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.#ctor*
  name: ( .ctor )
  href: api/Tensor.Tensor-1.-ctor.html
  commentId: Overload:Tensor.Tensor`1.#ctor*
  fullName: Tensor.Tensor
  nameWithType: Tensor.( .ctor )
- uid: Tensor.Tensor`1.Abs(Tensor.Tensor<'T>)
  name: "static member Abs: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Abs.html#Tensor_Tensor_1_Abs_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Abs(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Abs: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Abs: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Abs*
  name: Abs
  href: api/Tensor.Tensor-1.Abs.html
  commentId: Overload:Tensor.Tensor`1.Abs*
  fullName: Tensor.Tensor.Abs
  nameWithType: Tensor.Abs
- uid: Tensor.Tensor`1.Acos(Tensor.Tensor<'T>)
  name: "static member Acos: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Acos.html#Tensor_Tensor_1_Acos_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Acos(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Acos: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Acos: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Acos*
  name: Acos
  href: api/Tensor.Tensor-1.Acos.html
  commentId: Overload:Tensor.Tensor`1.Acos*
  fullName: Tensor.Tensor.Acos
  nameWithType: Tensor.Acos
- uid: Tensor.Tensor`1.all(Tensor.Tensor<bool>)
  name: 'static member all: Tensor<bool> -> bool'
  href: api/Tensor.Tensor-1.all.html#Tensor_Tensor_1_all_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.all(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.all: Tensor.Tensor<bool> -> bool'
  nameWithType: 'static member Tensor.all: Tensor<bool> -> bool'
- uid: Tensor.Tensor`1.all*
  name: all
  href: api/Tensor.Tensor-1.all.html
  commentId: Overload:Tensor.Tensor`1.all*
  fullName: Tensor.Tensor.all
  nameWithType: Tensor.all
- uid: Tensor.Tensor`1.allAxis(int -> Tensor.Tensor<bool>)
  name: 'static member allAxis: int -> Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.allAxis.html#Tensor_Tensor_1_allAxis_int____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.allAxis(System.Int32,Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.allAxis: int -> Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.allAxis: int -> Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.allAxis*
  name: allAxis
  href: api/Tensor.Tensor-1.allAxis.html
  commentId: Overload:Tensor.Tensor`1.allAxis*
  fullName: Tensor.Tensor.allAxis
  nameWithType: Tensor.allAxis
- uid: Tensor.Tensor`1.allElems(Tensor.Tensor<'T>)
  name: "static member allElems: Tensor<'T> -> seq<'T>"
  href: api/Tensor.Tensor-1.allElems.html#Tensor_Tensor_1_allElems_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.allElems(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.allElems: Tensor.Tensor<'T> -> seq<'T>"
  nameWithType: "static member Tensor.allElems: Tensor<'T> -> seq<'T>"
- uid: Tensor.Tensor`1.allElems*
  name: allElems
  href: api/Tensor.Tensor-1.allElems.html
  commentId: Overload:Tensor.Tensor`1.allElems*
  fullName: Tensor.Tensor.allElems
  nameWithType: Tensor.allElems
- uid: Tensor.Tensor`1.allFinite(Tensor.Tensor<'T>)
  name: "static member allFinite: Tensor<'T> -> bool"
  href: api/Tensor.Tensor-1.allFinite.html#Tensor_Tensor_1_allFinite_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.allFinite(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.allFinite: Tensor.Tensor<'T> -> bool"
  nameWithType: "static member Tensor.allFinite: Tensor<'T> -> bool"
- uid: Tensor.Tensor`1.allFinite*
  name: allFinite
  href: api/Tensor.Tensor-1.allFinite.html
  commentId: Overload:Tensor.Tensor`1.allFinite*
  fullName: Tensor.Tensor.allFinite
  nameWithType: Tensor.allFinite
- uid: Tensor.Tensor`1.allIdx(Tensor.Tensor<'T>)
  name: "static member allIdx: Tensor<'T> -> seq<int64 list>"
  href: api/Tensor.Tensor-1.allIdx.html#Tensor_Tensor_1_allIdx_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.allIdx(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.allIdx: Tensor.Tensor<'T> -> seq<int64 list>"
  nameWithType: "static member Tensor.allIdx: Tensor<'T> -> seq<int64 list>"
- uid: Tensor.Tensor`1.allIdx*
  name: allIdx
  href: api/Tensor.Tensor-1.allIdx.html
  commentId: Overload:Tensor.Tensor`1.allIdx*
  fullName: Tensor.Tensor.allIdx
  nameWithType: Tensor.allIdx
- uid: Tensor.Tensor`1.allTensor(Tensor.Tensor<bool>)
  name: 'static member allTensor: Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.allTensor.html#Tensor_Tensor_1_allTensor_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.allTensor(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.allTensor: Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.allTensor: Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.allTensor*
  name: allTensor
  href: api/Tensor.Tensor-1.allTensor.html
  commentId: Overload:Tensor.Tensor`1.allTensor*
  fullName: Tensor.Tensor.allTensor
  nameWithType: Tensor.allTensor
- uid: Tensor.Tensor`1.almostEqual(Tensor.Tensor<'T> * Tensor.Tensor<'T> * 'T option * 'T option)
  name: "static member almostEqual: Tensor<'T> * Tensor<'T> * 'T option * 'T option -> bool"
  href: api/Tensor.Tensor-1.almostEqual.html#Tensor_Tensor_1_almostEqual_Tensor_Tensor__T____Tensor_Tensor__T_____T_option____T_option_
  commentId: M:Tensor.Tensor`1.almostEqual(Tensor.Tensor{`0},Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{`0},Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "static member Tensor.Tensor.almostEqual: Tensor.Tensor<'T> * Tensor.Tensor<'T> * 'T option * 'T option -> bool"
  nameWithType: "static member Tensor.almostEqual: Tensor<'T> * Tensor<'T> * 'T option * 'T option -> bool"
- uid: Tensor.Tensor`1.almostEqual*
  name: almostEqual
  href: api/Tensor.Tensor-1.almostEqual.html
  commentId: Overload:Tensor.Tensor`1.almostEqual*
  fullName: Tensor.Tensor.almostEqual
  nameWithType: Tensor.almostEqual
- uid: Tensor.Tensor`1.any(Tensor.Tensor<bool>)
  name: 'static member any: Tensor<bool> -> bool'
  href: api/Tensor.Tensor-1.any.html#Tensor_Tensor_1_any_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.any(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.any: Tensor.Tensor<bool> -> bool'
  nameWithType: 'static member Tensor.any: Tensor<bool> -> bool'
- uid: Tensor.Tensor`1.any*
  name: any
  href: api/Tensor.Tensor-1.any.html
  commentId: Overload:Tensor.Tensor`1.any*
  fullName: Tensor.Tensor.any
  nameWithType: Tensor.any
- uid: Tensor.Tensor`1.anyAxis(int -> Tensor.Tensor<bool>)
  name: 'static member anyAxis: int -> Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.anyAxis.html#Tensor_Tensor_1_anyAxis_int____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.anyAxis(System.Int32,Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.anyAxis: int -> Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.anyAxis: int -> Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.anyAxis*
  name: anyAxis
  href: api/Tensor.Tensor-1.anyAxis.html
  commentId: Overload:Tensor.Tensor`1.anyAxis*
  fullName: Tensor.Tensor.anyAxis
  nameWithType: Tensor.anyAxis
- uid: Tensor.Tensor`1.anyTensor(Tensor.Tensor<bool>)
  name: 'static member anyTensor: Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.anyTensor.html#Tensor_Tensor_1_anyTensor_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.anyTensor(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.anyTensor: Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.anyTensor: Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.anyTensor*
  name: anyTensor
  href: api/Tensor.Tensor-1.anyTensor.html
  commentId: Overload:Tensor.Tensor`1.anyTensor*
  fullName: Tensor.Tensor.anyTensor
  nameWithType: Tensor.anyTensor
- uid: Tensor.Tensor`1.arange(Tensor.Backend.ITensorDevice -> 'T -> 'T -> 'T)
  name: "static member arange: ITensorDevice -> 'T -> 'T -> 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.arange.html#Tensor_Tensor_1_arange_Tensor_Backend_ITensorDevice_____T_____T_____T_
  commentId: M:Tensor.Tensor`1.arange(Tensor.Backend.ITensorDevice,`0,`0,`0)
  fullName: "static member Tensor.Tensor.arange: Tensor.Backend.ITensorDevice -> 'T -> 'T -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.arange: ITensorDevice -> 'T -> 'T -> 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.arange*
  name: arange
  href: api/Tensor.Tensor-1.arange.html
  commentId: Overload:Tensor.Tensor`1.arange*
  fullName: Tensor.Tensor.arange
  nameWithType: Tensor.arange
- uid: Tensor.Tensor`1.argMax(Tensor.Tensor<'T>)
  name: "static member argMax: Tensor<'T> -> int64 list"
  href: api/Tensor.Tensor-1.argMax.html#Tensor_Tensor_1_argMax_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.argMax(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.argMax: Tensor.Tensor<'T> -> int64 list"
  nameWithType: "static member Tensor.argMax: Tensor<'T> -> int64 list"
- uid: Tensor.Tensor`1.argMax*
  name: argMax
  href: api/Tensor.Tensor-1.argMax.html
  commentId: Overload:Tensor.Tensor`1.argMax*
  fullName: Tensor.Tensor.argMax
  nameWithType: Tensor.argMax
- uid: Tensor.Tensor`1.argMaxAxis(int -> Tensor.Tensor<'T>)
  name: "static member argMaxAxis: int -> Tensor<'T> -> Tensor<int64>"
  href: api/Tensor.Tensor-1.argMaxAxis.html#Tensor_Tensor_1_argMaxAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.argMaxAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.argMaxAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<int64>"
  nameWithType: "static member Tensor.argMaxAxis: int -> Tensor<'T> -> Tensor<int64>"
- uid: Tensor.Tensor`1.argMaxAxis*
  name: argMaxAxis
  href: api/Tensor.Tensor-1.argMaxAxis.html
  commentId: Overload:Tensor.Tensor`1.argMaxAxis*
  fullName: Tensor.Tensor.argMaxAxis
  nameWithType: Tensor.argMaxAxis
- uid: Tensor.Tensor`1.argMin(Tensor.Tensor<'T>)
  name: "static member argMin: Tensor<'T> -> int64 list"
  href: api/Tensor.Tensor-1.argMin.html#Tensor_Tensor_1_argMin_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.argMin(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.argMin: Tensor.Tensor<'T> -> int64 list"
  nameWithType: "static member Tensor.argMin: Tensor<'T> -> int64 list"
- uid: Tensor.Tensor`1.argMin*
  name: argMin
  href: api/Tensor.Tensor-1.argMin.html
  commentId: Overload:Tensor.Tensor`1.argMin*
  fullName: Tensor.Tensor.argMin
  nameWithType: Tensor.argMin
- uid: Tensor.Tensor`1.argMinAxis(int -> Tensor.Tensor<'T>)
  name: "static member argMinAxis: int -> Tensor<'T> -> Tensor<int64>"
  href: api/Tensor.Tensor-1.argMinAxis.html#Tensor_Tensor_1_argMinAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.argMinAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.argMinAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<int64>"
  nameWithType: "static member Tensor.argMinAxis: int -> Tensor<'T> -> Tensor<int64>"
- uid: Tensor.Tensor`1.argMinAxis*
  name: argMinAxis
  href: api/Tensor.Tensor-1.argMinAxis.html
  commentId: Overload:Tensor.Tensor`1.argMinAxis*
  fullName: Tensor.Tensor.argMinAxis
  nameWithType: Tensor.argMinAxis
- uid: Tensor.Tensor`1.Asin(Tensor.Tensor<'T>)
  name: "static member Asin: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Asin.html#Tensor_Tensor_1_Asin_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Asin(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Asin: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Asin: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Asin*
  name: Asin
  href: api/Tensor.Tensor-1.Asin.html
  commentId: Overload:Tensor.Tensor`1.Asin*
  fullName: Tensor.Tensor.Asin
  nameWithType: Tensor.Asin
- uid: Tensor.Tensor`1.Atan(Tensor.Tensor<'T>)
  name: "static member Atan: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Atan.html#Tensor_Tensor_1_Atan_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Atan(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Atan: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Atan: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Atan*
  name: Atan
  href: api/Tensor.Tensor-1.Atan.html
  commentId: Overload:Tensor.Tensor`1.Atan*
  fullName: Tensor.Tensor.Atan
  nameWithType: Tensor.Atan
- uid: Tensor.Tensor`1.atLeast1D(Tensor.Tensor<'T>)
  name: "static member atLeast1D: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.atLeast1D.html#Tensor_Tensor_1_atLeast1D_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.atLeast1D(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.atLeast1D: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.atLeast1D: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.atLeast1D*
  name: atLeast1D
  href: api/Tensor.Tensor-1.atLeast1D.html
  commentId: Overload:Tensor.Tensor`1.atLeast1D*
  fullName: Tensor.Tensor.atLeast1D
  nameWithType: Tensor.atLeast1D
- uid: Tensor.Tensor`1.atLeast2D(Tensor.Tensor<'T>)
  name: "static member atLeast2D: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.atLeast2D.html#Tensor_Tensor_1_atLeast2D_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.atLeast2D(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.atLeast2D: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.atLeast2D: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.atLeast2D*
  name: atLeast2D
  href: api/Tensor.Tensor-1.atLeast2D.html
  commentId: Overload:Tensor.Tensor`1.atLeast2D*
  fullName: Tensor.Tensor.atLeast2D
  nameWithType: Tensor.atLeast2D
- uid: Tensor.Tensor`1.atLeast3D(Tensor.Tensor<'T>)
  name: "static member atLeast3D: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.atLeast3D.html#Tensor_Tensor_1_atLeast3D_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.atLeast3D(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.atLeast3D: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.atLeast3D: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.atLeast3D*
  name: atLeast3D
  href: api/Tensor.Tensor-1.atLeast3D.html
  commentId: Overload:Tensor.Tensor`1.atLeast3D*
  fullName: Tensor.Tensor.atLeast3D
  nameWithType: Tensor.atLeast3D
- uid: Tensor.Tensor`1.atLeastND(int -> Tensor.Tensor<'T>)
  name: "static member atLeastND: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.atLeastND.html#Tensor_Tensor_1_atLeastND_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.atLeastND(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.atLeastND: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.atLeastND: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.atLeastND*
  name: atLeastND
  href: api/Tensor.Tensor-1.atLeastND.html
  commentId: Overload:Tensor.Tensor`1.atLeastND*
  fullName: Tensor.Tensor.atLeastND
  nameWithType: Tensor.atLeastND
- uid: Tensor.Tensor`1.broadcastDim(int -> int64 -> Tensor.Tensor<'T>)
  name: "static member broadcastDim: int -> int64 -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.broadcastDim.html#Tensor_Tensor_1_broadcastDim_int____int64____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.broadcastDim(System.Int32,System.Int64,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.broadcastDim: int -> int64 -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.broadcastDim: int -> int64 -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.broadcastDim*
  name: broadcastDim
  href: api/Tensor.Tensor-1.broadcastDim.html
  commentId: Overload:Tensor.Tensor`1.broadcastDim*
  fullName: Tensor.Tensor.broadcastDim
  nameWithType: Tensor.broadcastDim
- uid: Tensor.Tensor`1.broadcastTo(int64 list -> Tensor.Tensor<'T>)
  name: "static member broadcastTo: int64 list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.broadcastTo.html#Tensor_Tensor_1_broadcastTo_int64_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.broadcastTo(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.broadcastTo: int64 list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.broadcastTo: int64 list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.broadcastTo*
  name: broadcastTo
  href: api/Tensor.Tensor-1.broadcastTo.html
  commentId: Overload:Tensor.Tensor`1.broadcastTo*
  fullName: Tensor.Tensor.broadcastTo
  nameWithType: Tensor.broadcastTo
- uid: Tensor.Tensor`1.broadcastToSame(Tensor.Tensor<'T> list)
  name: "static member broadcastToSame: Tensor<'T> list -> Tensor<'T> list"
  href: api/Tensor.Tensor-1.broadcastToSame.html#Tensor_Tensor_1_broadcastToSame_Tensor_Tensor__T__list_
  commentId: M:Tensor.Tensor`1.broadcastToSame(Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{`0}})
  fullName: "static member Tensor.Tensor.broadcastToSame: Tensor.Tensor<'T> list -> Tensor.Tensor<'T> list"
  nameWithType: "static member Tensor.broadcastToSame: Tensor<'T> list -> Tensor<'T> list"
- uid: Tensor.Tensor`1.broadcastToSame(Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC>)
  name: "static member broadcastToSame: Tensor<'TA> * Tensor<'TB> * Tensor<'TC> -> Tensor<'TA> * Tensor<'TB> * Tensor<'TC>"
  href: api/Tensor.Tensor-1.broadcastToSame.html#Tensor_Tensor_1_broadcastToSame_Tensor_Tensor__TA____Tensor_Tensor__TB____Tensor_Tensor__TC__
  commentId: M:Tensor.Tensor`1.broadcastToSame``3(Tensor.Tensor{``0},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "static member Tensor.Tensor.broadcastToSame: Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC> -> Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC>"
  nameWithType: "static member Tensor.broadcastToSame: Tensor<'TA> * Tensor<'TB> * Tensor<'TC> -> Tensor<'TA> * Tensor<'TB> * Tensor<'TC>"
- uid: Tensor.Tensor`1.broadcastToSame(Tensor.Tensor<'TA> * Tensor.Tensor<'TB>)
  name: "static member broadcastToSame: Tensor<'TA> * Tensor<'TB> -> Tensor<'TA> * Tensor<'TB>"
  href: api/Tensor.Tensor-1.broadcastToSame.html#Tensor_Tensor_1_broadcastToSame_Tensor_Tensor__TA____Tensor_Tensor__TB__
  commentId: M:Tensor.Tensor`1.broadcastToSame``2(Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "static member Tensor.Tensor.broadcastToSame: Tensor.Tensor<'TA> * Tensor.Tensor<'TB> -> Tensor.Tensor<'TA> * Tensor.Tensor<'TB>"
  nameWithType: "static member Tensor.broadcastToSame: Tensor<'TA> * Tensor<'TB> -> Tensor<'TA> * Tensor<'TB>"
- uid: Tensor.Tensor`1.broadcastToSame*
  name: broadcastToSame
  href: api/Tensor.Tensor-1.broadcastToSame.html
  commentId: Overload:Tensor.Tensor`1.broadcastToSame*
  fullName: Tensor.Tensor.broadcastToSame
  nameWithType: Tensor.broadcastToSame
- uid: Tensor.Tensor`1.broadcastToSameInDims(seq<int> * Tensor.Tensor<'T> list)
  name: "static member broadcastToSameInDims: seq<int> * Tensor<'T> list -> Tensor<'T> list"
  href: api/Tensor.Tensor-1.broadcastToSameInDims.html#Tensor_Tensor_1_broadcastToSameInDims_seq_int____Tensor_Tensor__T__list_
  commentId: M:Tensor.Tensor`1.broadcastToSameInDims(System.Collections.Generic.IEnumerable{System.Int32},Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{`0}})
  fullName: "static member Tensor.Tensor.broadcastToSameInDims: seq<int> * Tensor.Tensor<'T> list -> Tensor.Tensor<'T> list"
  nameWithType: "static member Tensor.broadcastToSameInDims: seq<int> * Tensor<'T> list -> Tensor<'T> list"
- uid: Tensor.Tensor`1.broadcastToSameInDims(seq<int> * Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC>)
  name: "static member broadcastToSameInDims: seq<int> * Tensor<'TA> * Tensor<'TB> * Tensor<'TC> -> Tensor<'TA> * Tensor<'TB> * Tensor<'TC>"
  href: api/Tensor.Tensor-1.broadcastToSameInDims.html#Tensor_Tensor_1_broadcastToSameInDims_seq_int____Tensor_Tensor__TA____Tensor_Tensor__TB____Tensor_Tensor__TC__
  commentId: M:Tensor.Tensor`1.broadcastToSameInDims``3(System.Collections.Generic.IEnumerable{System.Int32},Tensor.Tensor{``0},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "static member Tensor.Tensor.broadcastToSameInDims: seq<int> * Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC> -> Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC>"
  nameWithType: "static member Tensor.broadcastToSameInDims: seq<int> * Tensor<'TA> * Tensor<'TB> * Tensor<'TC> -> Tensor<'TA> * Tensor<'TB> * Tensor<'TC>"
- uid: Tensor.Tensor`1.broadcastToSameInDims(seq<int> * Tensor.Tensor<'TA> * Tensor.Tensor<'TB>)
  name: "static member broadcastToSameInDims: seq<int> * Tensor<'TA> * Tensor<'TB> -> Tensor<'TA> * Tensor<'TB>"
  href: api/Tensor.Tensor-1.broadcastToSameInDims.html#Tensor_Tensor_1_broadcastToSameInDims_seq_int____Tensor_Tensor__TA____Tensor_Tensor__TB__
  commentId: M:Tensor.Tensor`1.broadcastToSameInDims``2(System.Collections.Generic.IEnumerable{System.Int32},Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "static member Tensor.Tensor.broadcastToSameInDims: seq<int> * Tensor.Tensor<'TA> * Tensor.Tensor<'TB> -> Tensor.Tensor<'TA> * Tensor.Tensor<'TB>"
  nameWithType: "static member Tensor.broadcastToSameInDims: seq<int> * Tensor<'TA> * Tensor<'TB> -> Tensor<'TA> * Tensor<'TB>"
- uid: Tensor.Tensor`1.broadcastToSameInDims*
  name: broadcastToSameInDims
  href: api/Tensor.Tensor-1.broadcastToSameInDims.html
  commentId: Overload:Tensor.Tensor`1.broadcastToSameInDims*
  fullName: Tensor.Tensor.broadcastToSameInDims
  nameWithType: Tensor.broadcastToSameInDims
- uid: Tensor.Tensor`1.Ceiling(Tensor.Tensor<'T>)
  name: "static member Ceiling: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Ceiling.html#Tensor_Tensor_1_Ceiling_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Ceiling(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Ceiling: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Ceiling: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Ceiling*
  name: Ceiling
  href: api/Tensor.Tensor-1.Ceiling.html
  commentId: Overload:Tensor.Tensor`1.Ceiling*
  fullName: Tensor.Tensor.Ceiling
  nameWithType: Tensor.Ceiling
- uid: Tensor.Tensor`1.CheckAxis(int)
  name: 'member CheckAxis: int -> unit'
  href: api/Tensor.Tensor-1.CheckAxis.html#Tensor_Tensor_1_CheckAxis_int_
  commentId: M:Tensor.Tensor`1.CheckAxis(System.Int32)
  fullName: 'member Tensor.Tensor.CheckAxis: int -> unit'
  nameWithType: 'member Tensor.CheckAxis: int -> unit'
- uid: Tensor.Tensor`1.CheckAxis*
  name: CheckAxis
  href: api/Tensor.Tensor-1.CheckAxis.html
  commentId: Overload:Tensor.Tensor`1.CheckAxis*
  fullName: Tensor.Tensor.CheckAxis
  nameWithType: Tensor.CheckAxis
- uid: Tensor.Tensor`1.concat(int -> seq<Tensor.Tensor<'T>>)
  name: "static member concat: int -> seq<Tensor<'T>> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.concat.html#Tensor_Tensor_1_concat_int____seq_Tensor_Tensor__T___
  commentId: M:Tensor.Tensor`1.concat(System.Int32,System.Collections.Generic.IEnumerable{Tensor.Tensor{`0}})
  fullName: "static member Tensor.Tensor.concat: int -> seq<Tensor.Tensor<'T>> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.concat: int -> seq<Tensor<'T>> -> Tensor<'T>"
- uid: Tensor.Tensor`1.concat*
  name: concat
  href: api/Tensor.Tensor-1.concat.html
  commentId: Overload:Tensor.Tensor`1.concat*
  fullName: Tensor.Tensor.concat
  nameWithType: Tensor.concat
- uid: Tensor.Tensor`1.convert(Tensor.Tensor<'C>)
  name: "static member convert: Tensor<'C> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.convert.html#Tensor_Tensor_1_convert_Tensor_Tensor__C__
  commentId: M:Tensor.Tensor`1.convert``1(Tensor.Tensor{``0})
  fullName: "static member Tensor.Tensor.convert: Tensor.Tensor<'C> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.convert: Tensor<'C> -> Tensor<'T>"
- uid: Tensor.Tensor`1.convert*
  name: convert
  href: api/Tensor.Tensor-1.convert.html
  commentId: Overload:Tensor.Tensor`1.convert*
  fullName: Tensor.Tensor.convert
  nameWithType: Tensor.convert
- uid: Tensor.Tensor`1.copy(Tensor.Tensor<'T> * Tensor.TensorOrder option)
  name: "static member copy: Tensor<'T> * TensorOrder option -> Tensor<'T>"
  href: api/Tensor.Tensor-1.copy.html#Tensor_Tensor_1_copy_Tensor_Tensor__T____Tensor_TensorOrder_option_
  commentId: M:Tensor.Tensor`1.copy(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{Tensor.TensorOrder})
  fullName: "static member Tensor.Tensor.copy: Tensor.Tensor<'T> * Tensor.TensorOrder option -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.copy: Tensor<'T> * TensorOrder option -> Tensor<'T>"
- uid: Tensor.Tensor`1.copy*
  name: copy
  href: api/Tensor.Tensor-1.copy.html
  commentId: Overload:Tensor.Tensor`1.copy*
  fullName: Tensor.Tensor.copy
  nameWithType: Tensor.copy
- uid: Tensor.Tensor`1.CopyFrom(Tensor.Tensor<'T>)
  name: "member CopyFrom: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.CopyFrom.html#Tensor_Tensor_1_CopyFrom_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.CopyFrom(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.CopyFrom: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.CopyFrom: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.CopyFrom*
  name: CopyFrom
  href: api/Tensor.Tensor-1.CopyFrom.html
  commentId: Overload:Tensor.Tensor`1.CopyFrom*
  fullName: Tensor.Tensor.CopyFrom
  nameWithType: Tensor.CopyFrom
- uid: Tensor.Tensor`1.Cos(Tensor.Tensor<'T>)
  name: "static member Cos: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Cos.html#Tensor_Tensor_1_Cos_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Cos(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Cos: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Cos: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Cos*
  name: Cos
  href: api/Tensor.Tensor-1.Cos.html
  commentId: Overload:Tensor.Tensor`1.Cos*
  fullName: Tensor.Tensor.Cos
  nameWithType: Tensor.Cos
- uid: Tensor.Tensor`1.Cosh(Tensor.Tensor<'T>)
  name: "static member Cosh: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Cosh.html#Tensor_Tensor_1_Cosh_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Cosh(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Cosh: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Cosh: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Cosh*
  name: Cosh
  href: api/Tensor.Tensor-1.Cosh.html
  commentId: Overload:Tensor.Tensor`1.Cosh*
  fullName: Tensor.Tensor.Cosh
  nameWithType: Tensor.Cosh
- uid: Tensor.Tensor`1.counting(Tensor.Backend.ITensorDevice -> int64)
  name: 'static member counting: ITensorDevice -> int64 -> Tensor<int64>'
  href: api/Tensor.Tensor-1.counting.html#Tensor_Tensor_1_counting_Tensor_Backend_ITensorDevice____int64_
  commentId: M:Tensor.Tensor`1.counting(Tensor.Backend.ITensorDevice,System.Int64)
  fullName: 'static member Tensor.Tensor.counting: Tensor.Backend.ITensorDevice -> int64 -> Tensor.Tensor<int64>'
  nameWithType: 'static member Tensor.counting: ITensorDevice -> int64 -> Tensor<int64>'
- uid: Tensor.Tensor`1.counting*
  name: counting
  href: api/Tensor.Tensor-1.counting.html
  commentId: Overload:Tensor.Tensor`1.counting*
  fullName: Tensor.Tensor.counting
  nameWithType: Tensor.counting
- uid: Tensor.Tensor`1.countTrue(Tensor.Tensor<bool>)
  name: 'static member countTrue: Tensor<bool> -> int64'
  href: api/Tensor.Tensor-1.countTrue.html#Tensor_Tensor_1_countTrue_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.countTrue(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.countTrue: Tensor.Tensor<bool> -> int64'
  nameWithType: 'static member Tensor.countTrue: Tensor<bool> -> int64'
- uid: Tensor.Tensor`1.countTrue*
  name: countTrue
  href: api/Tensor.Tensor-1.countTrue.html
  commentId: Overload:Tensor.Tensor`1.countTrue*
  fullName: Tensor.Tensor.countTrue
  nameWithType: Tensor.countTrue
- uid: Tensor.Tensor`1.countTrueAxis(int -> Tensor.Tensor<bool>)
  name: 'static member countTrueAxis: int -> Tensor<bool> -> Tensor<int64>'
  href: api/Tensor.Tensor-1.countTrueAxis.html#Tensor_Tensor_1_countTrueAxis_int____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.countTrueAxis(System.Int32,Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.countTrueAxis: int -> Tensor.Tensor<bool> -> Tensor.Tensor<int64>'
  nameWithType: 'static member Tensor.countTrueAxis: int -> Tensor<bool> -> Tensor<int64>'
- uid: Tensor.Tensor`1.countTrueAxis*
  name: countTrueAxis
  href: api/Tensor.Tensor-1.countTrueAxis.html
  commentId: Overload:Tensor.Tensor`1.countTrueAxis*
  fullName: Tensor.Tensor.countTrueAxis
  nameWithType: Tensor.countTrueAxis
- uid: Tensor.Tensor`1.countTrueTensor(Tensor.Tensor<bool>)
  name: 'static member countTrueTensor: Tensor<bool> -> Tensor<int64>'
  href: api/Tensor.Tensor-1.countTrueTensor.html#Tensor_Tensor_1_countTrueTensor_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.countTrueTensor(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.countTrueTensor: Tensor.Tensor<bool> -> Tensor.Tensor<int64>'
  nameWithType: 'static member Tensor.countTrueTensor: Tensor<bool> -> Tensor<int64>'
- uid: Tensor.Tensor`1.countTrueTensor*
  name: countTrueTensor
  href: api/Tensor.Tensor-1.countTrueTensor.html
  commentId: Overload:Tensor.Tensor`1.countTrueTensor*
  fullName: Tensor.Tensor.countTrueTensor
  nameWithType: Tensor.countTrueTensor
- uid: Tensor.Tensor`1.cutLeft(Tensor.Tensor<'T>)
  name: "static member cutLeft: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.cutLeft.html#Tensor_Tensor_1_cutLeft_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.cutLeft(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.cutLeft: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.cutLeft: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.cutLeft*
  name: cutLeft
  href: api/Tensor.Tensor-1.cutLeft.html
  commentId: Overload:Tensor.Tensor`1.cutLeft*
  fullName: Tensor.Tensor.cutLeft
  nameWithType: Tensor.cutLeft
- uid: Tensor.Tensor`1.cutRight(Tensor.Tensor<'T>)
  name: "static member cutRight: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.cutRight.html#Tensor_Tensor_1_cutRight_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.cutRight(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.cutRight: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.cutRight: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.cutRight*
  name: cutRight
  href: api/Tensor.Tensor-1.cutRight.html
  commentId: Overload:Tensor.Tensor`1.cutRight*
  fullName: Tensor.Tensor.cutRight
  nameWithType: Tensor.cutRight
- uid: Tensor.Tensor`1.dataType(Tensor.Tensor<'T>)
  name: "static member dataType: Tensor<'T> -> Type"
  href: api/Tensor.Tensor-1.dataType.html#Tensor_Tensor_1_dataType_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.dataType(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.dataType: Tensor.Tensor<'T> -> System.Type"
  nameWithType: "static member Tensor.dataType: Tensor<'T> -> Type"
- uid: Tensor.Tensor`1.DataType(unit)
  name: 'property DataType: Type'
  href: api/Tensor.Tensor-1.DataType.html#Tensor_Tensor_1_DataType_unit_
  commentId: P:Tensor.Tensor`1.DataType
  fullName: 'property Tensor.Tensor.DataType: System.Type'
  nameWithType: 'property Tensor.DataType: Type'
- uid: Tensor.Tensor`1.dataType*
  name: dataType
  href: api/Tensor.Tensor-1.dataType.html
  commentId: Overload:Tensor.Tensor`1.dataType*
  fullName: Tensor.Tensor.dataType
  nameWithType: Tensor.dataType
- uid: Tensor.Tensor`1.DataType*
  name: DataType
  href: api/Tensor.Tensor-1.DataType.html
  commentId: Overload:Tensor.Tensor`1.DataType*
  fullName: Tensor.Tensor.DataType
  nameWithType: Tensor.DataType
- uid: Tensor.Tensor`1.dev(Tensor.Tensor<'T>)
  name: "static member dev: Tensor<'T> -> ITensorDevice"
  href: api/Tensor.Tensor-1.dev.html#Tensor_Tensor_1_dev_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.dev(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.dev: Tensor.Tensor<'T> -> Tensor.Backend.ITensorDevice"
  nameWithType: "static member Tensor.dev: Tensor<'T> -> ITensorDevice"
- uid: Tensor.Tensor`1.Dev(unit)
  name: 'property Dev: ITensorDevice'
  href: api/Tensor.Tensor-1.Dev.html#Tensor_Tensor_1_Dev_unit_
  commentId: P:Tensor.Tensor`1.Dev
  fullName: 'property Tensor.Tensor.Dev: Tensor.Backend.ITensorDevice'
  nameWithType: 'property Tensor.Dev: ITensorDevice'
- uid: Tensor.Tensor`1.dev*
  name: dev
  href: api/Tensor.Tensor-1.dev.html
  commentId: Overload:Tensor.Tensor`1.dev*
  fullName: Tensor.Tensor.dev
  nameWithType: Tensor.dev
- uid: Tensor.Tensor`1.Dev*
  name: Dev
  href: api/Tensor.Tensor-1.Dev.html
  commentId: Overload:Tensor.Tensor`1.Dev*
  fullName: Tensor.Tensor.Dev
  nameWithType: Tensor.Dev
- uid: Tensor.Tensor`1.diag(Tensor.Tensor<'T>)
  name: "static member diag: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.diag.html#Tensor_Tensor_1_diag_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.diag(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.diag: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.diag: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.diag*
  name: diag
  href: api/Tensor.Tensor-1.diag.html
  commentId: Overload:Tensor.Tensor`1.diag*
  fullName: Tensor.Tensor.diag
  nameWithType: Tensor.diag
- uid: Tensor.Tensor`1.diagAxis(int -> int -> Tensor.Tensor<'T>)
  name: "static member diagAxis: int -> int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.diagAxis.html#Tensor_Tensor_1_diagAxis_int____int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.diagAxis(System.Int32,System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.diagAxis: int -> int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.diagAxis: int -> int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.diagAxis*
  name: diagAxis
  href: api/Tensor.Tensor-1.diagAxis.html
  commentId: Overload:Tensor.Tensor`1.diagAxis*
  fullName: Tensor.Tensor.diagAxis
  nameWithType: Tensor.diagAxis
- uid: Tensor.Tensor`1.diagMat(Tensor.Tensor<'T>)
  name: "static member diagMat: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.diagMat.html#Tensor_Tensor_1_diagMat_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.diagMat(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.diagMat: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.diagMat: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.diagMat*
  name: diagMat
  href: api/Tensor.Tensor-1.diagMat.html
  commentId: Overload:Tensor.Tensor`1.diagMat*
  fullName: Tensor.Tensor.diagMat
  nameWithType: Tensor.diagMat
- uid: Tensor.Tensor`1.diagMatAxis(int -> int -> Tensor.Tensor<'T>)
  name: "static member diagMatAxis: int -> int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.diagMatAxis.html#Tensor_Tensor_1_diagMatAxis_int____int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.diagMatAxis(System.Int32,System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.diagMatAxis: int -> int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.diagMatAxis: int -> int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.diagMatAxis*
  name: diagMatAxis
  href: api/Tensor.Tensor-1.diagMatAxis.html
  commentId: Overload:Tensor.Tensor`1.diagMatAxis*
  fullName: Tensor.Tensor.diagMatAxis
  nameWithType: Tensor.diagMatAxis
- uid: Tensor.Tensor`1.diff(Tensor.Tensor<'T>)
  name: "static member diff: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.diff.html#Tensor_Tensor_1_diff_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.diff(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.diff: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.diff: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.diff*
  name: diff
  href: api/Tensor.Tensor-1.diff.html
  commentId: Overload:Tensor.Tensor`1.diff*
  fullName: Tensor.Tensor.diff
  nameWithType: Tensor.diff
- uid: Tensor.Tensor`1.diffAxis(int -> Tensor.Tensor<'T>)
  name: "static member diffAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.diffAxis.html#Tensor_Tensor_1_diffAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.diffAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.diffAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.diffAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.diffAxis*
  name: diffAxis
  href: api/Tensor.Tensor-1.diffAxis.html
  commentId: Overload:Tensor.Tensor`1.diffAxis*
  fullName: Tensor.Tensor.diffAxis
  nameWithType: Tensor.diffAxis
- uid: Tensor.Tensor`1.dot(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "static member dot: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.dot.html#Tensor_Tensor_1_dot_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.dot(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.dot: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.dot: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.dot*
  name: dot
  href: api/Tensor.Tensor-1.dot.html
  commentId: Overload:Tensor.Tensor`1.dot*
  fullName: Tensor.Tensor.dot
  nameWithType: Tensor.dot
- uid: Tensor.Tensor`1.empty(Tensor.Backend.ITensorDevice -> int)
  name: "static member empty: ITensorDevice -> int -> Tensor<'T>"
  href: api/Tensor.Tensor-1.empty.html#Tensor_Tensor_1_empty_Tensor_Backend_ITensorDevice____int_
  commentId: M:Tensor.Tensor`1.empty(Tensor.Backend.ITensorDevice,System.Int32)
  fullName: "static member Tensor.Tensor.empty: Tensor.Backend.ITensorDevice -> int -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.empty: ITensorDevice -> int -> Tensor<'T>"
- uid: Tensor.Tensor`1.empty*
  name: empty
  href: api/Tensor.Tensor-1.empty.html
  commentId: Overload:Tensor.Tensor`1.empty*
  fullName: Tensor.Tensor.empty
  nameWithType: Tensor.empty
- uid: Tensor.Tensor`1.Equals(obj)
  name: 'override member Equals: obj -> bool'
  href: api/Tensor.Tensor-1.Equals.html#Tensor_Tensor_1_Equals_obj_
  commentId: M:Tensor.Tensor`1.Equals(System.Object)
  fullName: 'override member Tensor.Tensor.Equals: obj -> bool'
  nameWithType: 'override member Tensor.Equals: obj -> bool'
- uid: Tensor.Tensor`1.Equals*
  name: Equals
  href: api/Tensor.Tensor-1.Equals.html
  commentId: Overload:Tensor.Tensor`1.Equals*
  fullName: Tensor.Tensor.Equals
  nameWithType: Tensor.Equals
- uid: Tensor.Tensor`1.Exp(Tensor.Tensor<'T>)
  name: "static member Exp: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Exp.html#Tensor_Tensor_1_Exp_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Exp(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Exp: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Exp: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Exp*
  name: Exp
  href: api/Tensor.Tensor-1.Exp.html
  commentId: Overload:Tensor.Tensor`1.Exp*
  fullName: Tensor.Tensor.Exp
  nameWithType: Tensor.Exp
- uid: Tensor.Tensor`1.falses(Tensor.Backend.ITensorDevice -> int64 list)
  name: 'static member falses: ITensorDevice -> int64 list -> Tensor<bool>'
  href: api/Tensor.Tensor-1.falses.html#Tensor_Tensor_1_falses_Tensor_Backend_ITensorDevice____int64_list_
  commentId: M:Tensor.Tensor`1.falses(Tensor.Backend.ITensorDevice,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'static member Tensor.Tensor.falses: Tensor.Backend.ITensorDevice -> int64 list -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.falses: ITensorDevice -> int64 list -> Tensor<bool>'
- uid: Tensor.Tensor`1.falses*
  name: falses
  href: api/Tensor.Tensor-1.falses.html
  commentId: Overload:Tensor.Tensor`1.falses*
  fullName: Tensor.Tensor.falses
  nameWithType: Tensor.falses
- uid: Tensor.Tensor`1.FillAbs(Tensor.Tensor<'T>)
  name: "member FillAbs: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillAbs.html#Tensor_Tensor_1_FillAbs_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillAbs(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillAbs: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillAbs: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillAbs*
  name: FillAbs
  href: api/Tensor.Tensor-1.FillAbs.html
  commentId: Overload:Tensor.Tensor`1.FillAbs*
  fullName: Tensor.Tensor.FillAbs
  nameWithType: Tensor.FillAbs
- uid: Tensor.Tensor`1.FillAcos(Tensor.Tensor<'T>)
  name: "member FillAcos: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillAcos.html#Tensor_Tensor_1_FillAcos_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillAcos(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillAcos: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillAcos: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillAcos*
  name: FillAcos
  href: api/Tensor.Tensor-1.FillAcos.html
  commentId: Overload:Tensor.Tensor`1.FillAcos*
  fullName: Tensor.Tensor.FillAcos
  nameWithType: Tensor.FillAcos
- uid: Tensor.Tensor`1.FillAdd(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillAdd: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillAdd.html#Tensor_Tensor_1_FillAdd_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillAdd(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillAdd: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillAdd: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillAdd*
  name: FillAdd
  href: api/Tensor.Tensor-1.FillAdd.html
  commentId: Overload:Tensor.Tensor`1.FillAdd*
  fullName: Tensor.Tensor.FillAdd
  nameWithType: Tensor.FillAdd
- uid: Tensor.Tensor`1.FillAllAxis(int -> Tensor.Tensor<bool>)
  name: 'member FillAllAxis: int -> Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillAllAxis.html#Tensor_Tensor_1_FillAllAxis_int____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillAllAxis(System.Int32,Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillAllAxis: int -> Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillAllAxis: int -> Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillAllAxis*
  name: FillAllAxis
  href: api/Tensor.Tensor-1.FillAllAxis.html
  commentId: Overload:Tensor.Tensor`1.FillAllAxis*
  fullName: Tensor.Tensor.FillAllAxis
  nameWithType: Tensor.FillAllAxis
- uid: Tensor.Tensor`1.FillAnd(Tensor.Tensor<bool> -> Tensor.Tensor<bool>)
  name: 'member FillAnd: Tensor<bool> -> Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillAnd.html#Tensor_Tensor_1_FillAnd_Tensor_Tensor_bool_____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillAnd(Tensor.Tensor{System.Boolean},Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillAnd: Tensor.Tensor<bool> -> Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillAnd: Tensor<bool> -> Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillAnd*
  name: FillAnd
  href: api/Tensor.Tensor-1.FillAnd.html
  commentId: Overload:Tensor.Tensor`1.FillAnd*
  fullName: Tensor.Tensor.FillAnd
  nameWithType: Tensor.FillAnd
- uid: Tensor.Tensor`1.FillAnyAxis(int -> Tensor.Tensor<bool>)
  name: 'member FillAnyAxis: int -> Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillAnyAxis.html#Tensor_Tensor_1_FillAnyAxis_int____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillAnyAxis(System.Int32,Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillAnyAxis: int -> Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillAnyAxis: int -> Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillAnyAxis*
  name: FillAnyAxis
  href: api/Tensor.Tensor-1.FillAnyAxis.html
  commentId: Overload:Tensor.Tensor`1.FillAnyAxis*
  fullName: Tensor.Tensor.FillAnyAxis
  nameWithType: Tensor.FillAnyAxis
- uid: Tensor.Tensor`1.FillArgMaxAxis(int -> Tensor.Tensor<'R>)
  name: "member FillArgMaxAxis: int -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillArgMaxAxis.html#Tensor_Tensor_1_FillArgMaxAxis_int____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillArgMaxAxis``1(System.Int32,Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillArgMaxAxis: int -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillArgMaxAxis: int -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillArgMaxAxis*
  name: FillArgMaxAxis
  href: api/Tensor.Tensor-1.FillArgMaxAxis.html
  commentId: Overload:Tensor.Tensor`1.FillArgMaxAxis*
  fullName: Tensor.Tensor.FillArgMaxAxis
  nameWithType: Tensor.FillArgMaxAxis
- uid: Tensor.Tensor`1.FillArgMinAxis(int -> Tensor.Tensor<'R>)
  name: "member FillArgMinAxis: int -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillArgMinAxis.html#Tensor_Tensor_1_FillArgMinAxis_int____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillArgMinAxis``1(System.Int32,Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillArgMinAxis: int -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillArgMinAxis: int -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillArgMinAxis*
  name: FillArgMinAxis
  href: api/Tensor.Tensor-1.FillArgMinAxis.html
  commentId: Overload:Tensor.Tensor`1.FillArgMinAxis*
  fullName: Tensor.Tensor.FillArgMinAxis
  nameWithType: Tensor.FillArgMinAxis
- uid: Tensor.Tensor`1.FillAsin(Tensor.Tensor<'T>)
  name: "member FillAsin: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillAsin.html#Tensor_Tensor_1_FillAsin_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillAsin(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillAsin: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillAsin: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillAsin*
  name: FillAsin
  href: api/Tensor.Tensor-1.FillAsin.html
  commentId: Overload:Tensor.Tensor`1.FillAsin*
  fullName: Tensor.Tensor.FillAsin
  nameWithType: Tensor.FillAsin
- uid: Tensor.Tensor`1.FillAtan(Tensor.Tensor<'T>)
  name: "member FillAtan: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillAtan.html#Tensor_Tensor_1_FillAtan_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillAtan(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillAtan: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillAtan: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillAtan*
  name: FillAtan
  href: api/Tensor.Tensor-1.FillAtan.html
  commentId: Overload:Tensor.Tensor`1.FillAtan*
  fullName: Tensor.Tensor.FillAtan
  nameWithType: Tensor.FillAtan
- uid: Tensor.Tensor`1.FillCeiling(Tensor.Tensor<'T>)
  name: "member FillCeiling: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillCeiling.html#Tensor_Tensor_1_FillCeiling_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillCeiling(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillCeiling: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillCeiling: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillCeiling*
  name: FillCeiling
  href: api/Tensor.Tensor-1.FillCeiling.html
  commentId: Overload:Tensor.Tensor`1.FillCeiling*
  fullName: Tensor.Tensor.FillCeiling
  nameWithType: Tensor.FillCeiling
- uid: Tensor.Tensor`1.FillConst('T)
  name: "member FillConst: 'T -> unit"
  href: api/Tensor.Tensor-1.FillConst.html#Tensor_Tensor_1_FillConst__T_
  commentId: M:Tensor.Tensor`1.FillConst(`0)
  fullName: "member Tensor.Tensor.FillConst: 'T -> unit"
  nameWithType: "member Tensor.FillConst: 'T -> unit"
- uid: Tensor.Tensor`1.FillConst*
  name: FillConst
  href: api/Tensor.Tensor-1.FillConst.html
  commentId: Overload:Tensor.Tensor`1.FillConst*
  fullName: Tensor.Tensor.FillConst
  nameWithType: Tensor.FillConst
- uid: Tensor.Tensor`1.FillConvert(Tensor.Tensor<'C>)
  name: "member FillConvert: Tensor<'C> -> unit"
  href: api/Tensor.Tensor-1.FillConvert.html#Tensor_Tensor_1_FillConvert_Tensor_Tensor__C__
  commentId: M:Tensor.Tensor`1.FillConvert``1(Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillConvert: Tensor.Tensor<'C> -> unit"
  nameWithType: "member Tensor.FillConvert: Tensor<'C> -> unit"
- uid: Tensor.Tensor`1.FillConvert*
  name: FillConvert
  href: api/Tensor.Tensor-1.FillConvert.html
  commentId: Overload:Tensor.Tensor`1.FillConvert*
  fullName: Tensor.Tensor.FillConvert
  nameWithType: Tensor.FillConvert
- uid: Tensor.Tensor`1.FillCos(Tensor.Tensor<'T>)
  name: "member FillCos: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillCos.html#Tensor_Tensor_1_FillCos_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillCos(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillCos: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillCos: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillCos*
  name: FillCos
  href: api/Tensor.Tensor-1.FillCos.html
  commentId: Overload:Tensor.Tensor`1.FillCos*
  fullName: Tensor.Tensor.FillCos
  nameWithType: Tensor.FillCos
- uid: Tensor.Tensor`1.FillCosh(Tensor.Tensor<'T>)
  name: "member FillCosh: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillCosh.html#Tensor_Tensor_1_FillCosh_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillCosh(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillCosh: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillCosh: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillCosh*
  name: FillCosh
  href: api/Tensor.Tensor-1.FillCosh.html
  commentId: Overload:Tensor.Tensor`1.FillCosh*
  fullName: Tensor.Tensor.FillCosh
  nameWithType: Tensor.FillCosh
- uid: Tensor.Tensor`1.FillCountTrueAxis(int -> Tensor.Tensor<bool>)
  name: 'member FillCountTrueAxis: int -> Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillCountTrueAxis.html#Tensor_Tensor_1_FillCountTrueAxis_int____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillCountTrueAxis(System.Int32,Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillCountTrueAxis: int -> Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillCountTrueAxis: int -> Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillCountTrueAxis*
  name: FillCountTrueAxis
  href: api/Tensor.Tensor-1.FillCountTrueAxis.html
  commentId: Overload:Tensor.Tensor`1.FillCountTrueAxis*
  fullName: Tensor.Tensor.FillCountTrueAxis
  nameWithType: Tensor.FillCountTrueAxis
- uid: Tensor.Tensor`1.FillDivide(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillDivide: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillDivide.html#Tensor_Tensor_1_FillDivide_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillDivide(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillDivide: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillDivide: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillDivide*
  name: FillDivide
  href: api/Tensor.Tensor-1.FillDivide.html
  commentId: Overload:Tensor.Tensor`1.FillDivide*
  fullName: Tensor.Tensor.FillDivide
  nameWithType: Tensor.FillDivide
- uid: Tensor.Tensor`1.FillDot(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillDot: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillDot.html#Tensor_Tensor_1_FillDot_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillDot(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillDot: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillDot: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillDot*
  name: FillDot
  href: api/Tensor.Tensor-1.FillDot.html
  commentId: Overload:Tensor.Tensor`1.FillDot*
  fullName: Tensor.Tensor.FillDot
  nameWithType: Tensor.FillDot
- uid: Tensor.Tensor`1.filled(Tensor.Backend.ITensorDevice -> int64 list -> 'T)
  name: "static member filled: ITensorDevice -> int64 list -> 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.filled.html#Tensor_Tensor_1_filled_Tensor_Backend_ITensorDevice____int64_list_____T_
  commentId: M:Tensor.Tensor`1.filled(Tensor.Backend.ITensorDevice,Microsoft.FSharp.Collections.FSharpList{System.Int64},`0)
  fullName: "static member Tensor.Tensor.filled: Tensor.Backend.ITensorDevice -> int64 list -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.filled: ITensorDevice -> int64 list -> 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.filled*
  name: filled
  href: api/Tensor.Tensor-1.filled.html
  commentId: Overload:Tensor.Tensor`1.filled*
  fullName: Tensor.Tensor.filled
  nameWithType: Tensor.filled
- uid: Tensor.Tensor`1.FillEqual(Tensor.Tensor<'R> -> Tensor.Tensor<'R>)
  name: "member FillEqual: Tensor<'R> -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillEqual.html#Tensor_Tensor_1_FillEqual_Tensor_Tensor__R_____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillEqual``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillEqual: Tensor.Tensor<'R> -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillEqual: Tensor<'R> -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillEqual*
  name: FillEqual
  href: api/Tensor.Tensor-1.FillEqual.html
  commentId: Overload:Tensor.Tensor`1.FillEqual*
  fullName: Tensor.Tensor.FillEqual
  nameWithType: Tensor.FillEqual
- uid: Tensor.Tensor`1.FillExp(Tensor.Tensor<'T>)
  name: "member FillExp: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillExp.html#Tensor_Tensor_1_FillExp_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillExp(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillExp: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillExp: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillExp*
  name: FillExp
  href: api/Tensor.Tensor-1.FillExp.html
  commentId: Overload:Tensor.Tensor`1.FillExp*
  fullName: Tensor.Tensor.FillExp
  nameWithType: Tensor.FillExp
- uid: Tensor.Tensor`1.FillFindAxis('R -> int -> Tensor.Tensor<'R>)
  name: "member FillFindAxis: 'R -> int -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillFindAxis.html#Tensor_Tensor_1_FillFindAxis__R____int____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillFindAxis``1(``0,System.Int32,Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillFindAxis: 'R -> int -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillFindAxis: 'R -> int -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillFindAxis*
  name: FillFindAxis
  href: api/Tensor.Tensor-1.FillFindAxis.html
  commentId: Overload:Tensor.Tensor`1.FillFindAxis*
  fullName: Tensor.Tensor.FillFindAxis
  nameWithType: Tensor.FillFindAxis
- uid: Tensor.Tensor`1.FillFloor(Tensor.Tensor<'T>)
  name: "member FillFloor: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillFloor.html#Tensor_Tensor_1_FillFloor_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillFloor(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillFloor: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillFloor: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillFloor*
  name: FillFloor
  href: api/Tensor.Tensor-1.FillFloor.html
  commentId: Overload:Tensor.Tensor`1.FillFloor*
  fullName: Tensor.Tensor.FillFloor
  nameWithType: Tensor.FillFloor
- uid: Tensor.Tensor`1.FillFrom(Tensor.Tensor<'T>)
  name: "member FillFrom: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillFrom.html#Tensor_Tensor_1_FillFrom_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillFrom(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillFrom: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillFrom: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillFrom*
  name: FillFrom
  href: api/Tensor.Tensor-1.FillFrom.html
  commentId: Overload:Tensor.Tensor`1.FillFrom*
  fullName: Tensor.Tensor.FillFrom
  nameWithType: Tensor.FillFrom
- uid: Tensor.Tensor`1.FillGather(Tensor.Tensor<int64> option list -> Tensor.Tensor<'T>)
  name: "member FillGather: Tensor<int64> option list -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillGather.html#Tensor_Tensor_1_FillGather_Tensor_Tensor_int64__option_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillGather(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Tensor{System.Int64}}},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillGather: Tensor.Tensor<int64> option list -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillGather: Tensor<int64> option list -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillGather*
  name: FillGather
  href: api/Tensor.Tensor-1.FillGather.html
  commentId: Overload:Tensor.Tensor`1.FillGather*
  fullName: Tensor.Tensor.FillGather
  nameWithType: Tensor.FillGather
- uid: Tensor.Tensor`1.FillGreater(Tensor.Tensor<'R> -> Tensor.Tensor<'R>)
  name: "member FillGreater: Tensor<'R> -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillGreater.html#Tensor_Tensor_1_FillGreater_Tensor_Tensor__R_____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillGreater``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillGreater: Tensor.Tensor<'R> -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillGreater: Tensor<'R> -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillGreater*
  name: FillGreater
  href: api/Tensor.Tensor-1.FillGreater.html
  commentId: Overload:Tensor.Tensor`1.FillGreater*
  fullName: Tensor.Tensor.FillGreater
  nameWithType: Tensor.FillGreater
- uid: Tensor.Tensor`1.FillGreaterOrEqual(Tensor.Tensor<'R> -> Tensor.Tensor<'R>)
  name: "member FillGreaterOrEqual: Tensor<'R> -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillGreaterOrEqual.html#Tensor_Tensor_1_FillGreaterOrEqual_Tensor_Tensor__R_____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillGreaterOrEqual``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillGreaterOrEqual: Tensor.Tensor<'R> -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillGreaterOrEqual: Tensor<'R> -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillGreaterOrEqual*
  name: FillGreaterOrEqual
  href: api/Tensor.Tensor-1.FillGreaterOrEqual.html
  commentId: Overload:Tensor.Tensor`1.FillGreaterOrEqual*
  fullName: Tensor.Tensor.FillGreaterOrEqual
  nameWithType: Tensor.FillGreaterOrEqual
- uid: Tensor.Tensor`1.FillIfThenElse(Tensor.Tensor<bool> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillIfThenElse: Tensor<bool> -> Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillIfThenElse.html#Tensor_Tensor_1_FillIfThenElse_Tensor_Tensor_bool_____Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillIfThenElse(Tensor.Tensor{System.Boolean},Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillIfThenElse: Tensor.Tensor<bool> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillIfThenElse: Tensor<bool> -> Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillIfThenElse*
  name: FillIfThenElse
  href: api/Tensor.Tensor-1.FillIfThenElse.html
  commentId: Overload:Tensor.Tensor`1.FillIfThenElse*
  fullName: Tensor.Tensor.FillIfThenElse
  nameWithType: Tensor.FillIfThenElse
- uid: Tensor.Tensor`1.FillIncrementing('T * 'T)
  name: "member FillIncrementing: 'T * 'T -> unit"
  href: api/Tensor.Tensor-1.FillIncrementing.html#Tensor_Tensor_1_FillIncrementing__T____T_
  commentId: M:Tensor.Tensor`1.FillIncrementing(`0,`0)
  fullName: "member Tensor.Tensor.FillIncrementing: 'T * 'T -> unit"
  nameWithType: "member Tensor.FillIncrementing: 'T * 'T -> unit"
- uid: Tensor.Tensor`1.FillIncrementing*
  name: FillIncrementing
  href: api/Tensor.Tensor-1.FillIncrementing.html
  commentId: Overload:Tensor.Tensor`1.FillIncrementing*
  fullName: Tensor.Tensor.FillIncrementing
  nameWithType: Tensor.FillIncrementing
- uid: Tensor.Tensor`1.FillInvert(Tensor.Tensor<'T>)
  name: "member FillInvert: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillInvert.html#Tensor_Tensor_1_FillInvert_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillInvert(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillInvert: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillInvert: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillInvert*
  name: FillInvert
  href: api/Tensor.Tensor-1.FillInvert.html
  commentId: Overload:Tensor.Tensor`1.FillInvert*
  fullName: Tensor.Tensor.FillInvert
  nameWithType: Tensor.FillInvert
- uid: Tensor.Tensor`1.FillIsFinite(Tensor.Tensor<'R>)
  name: "member FillIsFinite: Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillIsFinite.html#Tensor_Tensor_1_FillIsFinite_Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillIsFinite``1(Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillIsFinite: Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillIsFinite: Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillIsFinite*
  name: FillIsFinite
  href: api/Tensor.Tensor-1.FillIsFinite.html
  commentId: Overload:Tensor.Tensor`1.FillIsFinite*
  fullName: Tensor.Tensor.FillIsFinite
  nameWithType: Tensor.FillIsFinite
- uid: Tensor.Tensor`1.FillLess(Tensor.Tensor<'R> -> Tensor.Tensor<'R>)
  name: "member FillLess: Tensor<'R> -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillLess.html#Tensor_Tensor_1_FillLess_Tensor_Tensor__R_____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillLess``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillLess: Tensor.Tensor<'R> -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillLess: Tensor<'R> -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillLess*
  name: FillLess
  href: api/Tensor.Tensor-1.FillLess.html
  commentId: Overload:Tensor.Tensor`1.FillLess*
  fullName: Tensor.Tensor.FillLess
  nameWithType: Tensor.FillLess
- uid: Tensor.Tensor`1.FillLessOrEqual(Tensor.Tensor<'R> -> Tensor.Tensor<'R>)
  name: "member FillLessOrEqual: Tensor<'R> -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillLessOrEqual.html#Tensor_Tensor_1_FillLessOrEqual_Tensor_Tensor__R_____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillLessOrEqual``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillLessOrEqual: Tensor.Tensor<'R> -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillLessOrEqual: Tensor<'R> -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillLessOrEqual*
  name: FillLessOrEqual
  href: api/Tensor.Tensor-1.FillLessOrEqual.html
  commentId: Overload:Tensor.Tensor`1.FillLessOrEqual*
  fullName: Tensor.Tensor.FillLessOrEqual
  nameWithType: Tensor.FillLessOrEqual
- uid: Tensor.Tensor`1.FillLog(Tensor.Tensor<'T>)
  name: "member FillLog: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillLog.html#Tensor_Tensor_1_FillLog_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillLog(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillLog: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillLog: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillLog*
  name: FillLog
  href: api/Tensor.Tensor-1.FillLog.html
  commentId: Overload:Tensor.Tensor`1.FillLog*
  fullName: Tensor.Tensor.FillLog
  nameWithType: Tensor.FillLog
- uid: Tensor.Tensor`1.FillLog10(Tensor.Tensor<'T>)
  name: "member FillLog10: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillLog10.html#Tensor_Tensor_1_FillLog10_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillLog10(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillLog10: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillLog10: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillLog10*
  name: FillLog10
  href: api/Tensor.Tensor-1.FillLog10.html
  commentId: Overload:Tensor.Tensor`1.FillLog10*
  fullName: Tensor.Tensor.FillLog10
  nameWithType: Tensor.FillLog10
- uid: Tensor.Tensor`1.FillMaxAxis(int -> Tensor.Tensor<'T>)
  name: "member FillMaxAxis: int -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillMaxAxis.html#Tensor_Tensor_1_FillMaxAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillMaxAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillMaxAxis: int -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillMaxAxis: int -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillMaxAxis*
  name: FillMaxAxis
  href: api/Tensor.Tensor-1.FillMaxAxis.html
  commentId: Overload:Tensor.Tensor`1.FillMaxAxis*
  fullName: Tensor.Tensor.FillMaxAxis
  nameWithType: Tensor.FillMaxAxis
- uid: Tensor.Tensor`1.FillMaxElemwise(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillMaxElemwise: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillMaxElemwise.html#Tensor_Tensor_1_FillMaxElemwise_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillMaxElemwise(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillMaxElemwise: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillMaxElemwise: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillMaxElemwise*
  name: FillMaxElemwise
  href: api/Tensor.Tensor-1.FillMaxElemwise.html
  commentId: Overload:Tensor.Tensor`1.FillMaxElemwise*
  fullName: Tensor.Tensor.FillMaxElemwise
  nameWithType: Tensor.FillMaxElemwise
- uid: Tensor.Tensor`1.FillMinAxis(int -> Tensor.Tensor<'T>)
  name: "member FillMinAxis: int -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillMinAxis.html#Tensor_Tensor_1_FillMinAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillMinAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillMinAxis: int -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillMinAxis: int -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillMinAxis*
  name: FillMinAxis
  href: api/Tensor.Tensor-1.FillMinAxis.html
  commentId: Overload:Tensor.Tensor`1.FillMinAxis*
  fullName: Tensor.Tensor.FillMinAxis
  nameWithType: Tensor.FillMinAxis
- uid: Tensor.Tensor`1.FillMinElemwise(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillMinElemwise: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillMinElemwise.html#Tensor_Tensor_1_FillMinElemwise_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillMinElemwise(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillMinElemwise: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillMinElemwise: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillMinElemwise*
  name: FillMinElemwise
  href: api/Tensor.Tensor-1.FillMinElemwise.html
  commentId: Overload:Tensor.Tensor`1.FillMinElemwise*
  fullName: Tensor.Tensor.FillMinElemwise
  nameWithType: Tensor.FillMinElemwise
- uid: Tensor.Tensor`1.FillModulo(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillModulo: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillModulo.html#Tensor_Tensor_1_FillModulo_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillModulo(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillModulo: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillModulo: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillModulo*
  name: FillModulo
  href: api/Tensor.Tensor-1.FillModulo.html
  commentId: Overload:Tensor.Tensor`1.FillModulo*
  fullName: Tensor.Tensor.FillModulo
  nameWithType: Tensor.FillModulo
- uid: Tensor.Tensor`1.FillMultiply(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillMultiply: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillMultiply.html#Tensor_Tensor_1_FillMultiply_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillMultiply(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillMultiply: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillMultiply: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillMultiply*
  name: FillMultiply
  href: api/Tensor.Tensor-1.FillMultiply.html
  commentId: Overload:Tensor.Tensor`1.FillMultiply*
  fullName: Tensor.Tensor.FillMultiply
  nameWithType: Tensor.FillMultiply
- uid: Tensor.Tensor`1.FillNegate(Tensor.Tensor<bool>)
  name: 'member FillNegate: Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillNegate.html#Tensor_Tensor_1_FillNegate_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillNegate(Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillNegate: Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillNegate: Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillNegate*
  name: FillNegate
  href: api/Tensor.Tensor-1.FillNegate.html
  commentId: Overload:Tensor.Tensor`1.FillNegate*
  fullName: Tensor.Tensor.FillNegate
  nameWithType: Tensor.FillNegate
- uid: Tensor.Tensor`1.FillNotEqual(Tensor.Tensor<'R> -> Tensor.Tensor<'R>)
  name: "member FillNotEqual: Tensor<'R> -> Tensor<'R> -> unit"
  href: api/Tensor.Tensor-1.FillNotEqual.html#Tensor_Tensor_1_FillNotEqual_Tensor_Tensor__R_____Tensor_Tensor__R__
  commentId: M:Tensor.Tensor`1.FillNotEqual``1(Tensor.Tensor{``0},Tensor.Tensor{``0})
  fullName: "member Tensor.Tensor.FillNotEqual: Tensor.Tensor<'R> -> Tensor.Tensor<'R> -> unit"
  nameWithType: "member Tensor.FillNotEqual: Tensor<'R> -> Tensor<'R> -> unit"
- uid: Tensor.Tensor`1.FillNotEqual*
  name: FillNotEqual
  href: api/Tensor.Tensor-1.FillNotEqual.html
  commentId: Overload:Tensor.Tensor`1.FillNotEqual*
  fullName: Tensor.Tensor.FillNotEqual
  nameWithType: Tensor.FillNotEqual
- uid: Tensor.Tensor`1.FillOr(Tensor.Tensor<bool> -> Tensor.Tensor<bool>)
  name: 'member FillOr: Tensor<bool> -> Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillOr.html#Tensor_Tensor_1_FillOr_Tensor_Tensor_bool_____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillOr(Tensor.Tensor{System.Boolean},Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillOr: Tensor.Tensor<bool> -> Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillOr: Tensor<bool> -> Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillOr*
  name: FillOr
  href: api/Tensor.Tensor-1.FillOr.html
  commentId: Overload:Tensor.Tensor`1.FillOr*
  fullName: Tensor.Tensor.FillOr
  nameWithType: Tensor.FillOr
- uid: Tensor.Tensor`1.FillPower(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillPower: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillPower.html#Tensor_Tensor_1_FillPower_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillPower(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillPower: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillPower: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillPower*
  name: FillPower
  href: api/Tensor.Tensor-1.FillPower.html
  commentId: Overload:Tensor.Tensor`1.FillPower*
  fullName: Tensor.Tensor.FillPower
  nameWithType: Tensor.FillPower
- uid: Tensor.Tensor`1.FillProductAxis(int -> Tensor.Tensor<'T>)
  name: "member FillProductAxis: int -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillProductAxis.html#Tensor_Tensor_1_FillProductAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillProductAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillProductAxis: int -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillProductAxis: int -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillProductAxis*
  name: FillProductAxis
  href: api/Tensor.Tensor-1.FillProductAxis.html
  commentId: Overload:Tensor.Tensor`1.FillProductAxis*
  fullName: Tensor.Tensor.FillProductAxis
  nameWithType: Tensor.FillProductAxis
- uid: Tensor.Tensor`1.FillPseudoInvert(Tensor.Tensor<'T> * 'T option)
  name: "member FillPseudoInvert: Tensor<'T> * 'T option -> unit"
  href: api/Tensor.Tensor-1.FillPseudoInvert.html#Tensor_Tensor_1_FillPseudoInvert_Tensor_Tensor__T_____T_option_
  commentId: M:Tensor.Tensor`1.FillPseudoInvert(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "member Tensor.Tensor.FillPseudoInvert: Tensor.Tensor<'T> * 'T option -> unit"
  nameWithType: "member Tensor.FillPseudoInvert: Tensor<'T> * 'T option -> unit"
- uid: Tensor.Tensor`1.FillPseudoInvert*
  name: FillPseudoInvert
  href: api/Tensor.Tensor-1.FillPseudoInvert.html
  commentId: Overload:Tensor.Tensor`1.FillPseudoInvert*
  fullName: Tensor.Tensor.FillPseudoInvert
  nameWithType: Tensor.FillPseudoInvert
- uid: Tensor.Tensor`1.FillRound(Tensor.Tensor<'T>)
  name: "member FillRound: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillRound.html#Tensor_Tensor_1_FillRound_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillRound(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillRound: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillRound: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillRound*
  name: FillRound
  href: api/Tensor.Tensor-1.FillRound.html
  commentId: Overload:Tensor.Tensor`1.FillRound*
  fullName: Tensor.Tensor.FillRound
  nameWithType: Tensor.FillRound
- uid: Tensor.Tensor`1.FillScatter(Tensor.Tensor<int64> option list -> Tensor.Tensor<'T>)
  name: "member FillScatter: Tensor<int64> option list -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillScatter.html#Tensor_Tensor_1_FillScatter_Tensor_Tensor_int64__option_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillScatter(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Tensor{System.Int64}}},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillScatter: Tensor.Tensor<int64> option list -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillScatter: Tensor<int64> option list -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillScatter*
  name: FillScatter
  href: api/Tensor.Tensor-1.FillScatter.html
  commentId: Overload:Tensor.Tensor`1.FillScatter*
  fullName: Tensor.Tensor.FillScatter
  nameWithType: Tensor.FillScatter
- uid: Tensor.Tensor`1.FillSgn(Tensor.Tensor<'T>)
  name: "member FillSgn: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSgn.html#Tensor_Tensor_1_FillSgn_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSgn(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillSgn: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillSgn: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSgn*
  name: FillSgn
  href: api/Tensor.Tensor-1.FillSgn.html
  commentId: Overload:Tensor.Tensor`1.FillSgn*
  fullName: Tensor.Tensor.FillSgn
  nameWithType: Tensor.FillSgn
- uid: Tensor.Tensor`1.FillSin(Tensor.Tensor<'T>)
  name: "member FillSin: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSin.html#Tensor_Tensor_1_FillSin_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSin(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillSin: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillSin: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSin*
  name: FillSin
  href: api/Tensor.Tensor-1.FillSin.html
  commentId: Overload:Tensor.Tensor`1.FillSin*
  fullName: Tensor.Tensor.FillSin
  nameWithType: Tensor.FillSin
- uid: Tensor.Tensor`1.FillSinh(Tensor.Tensor<'T>)
  name: "member FillSinh: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSinh.html#Tensor_Tensor_1_FillSinh_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSinh(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillSinh: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillSinh: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSinh*
  name: FillSinh
  href: api/Tensor.Tensor-1.FillSinh.html
  commentId: Overload:Tensor.Tensor`1.FillSinh*
  fullName: Tensor.Tensor.FillSinh
  nameWithType: Tensor.FillSinh
- uid: Tensor.Tensor`1.FillSqrt(Tensor.Tensor<'T>)
  name: "member FillSqrt: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSqrt.html#Tensor_Tensor_1_FillSqrt_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSqrt(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillSqrt: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillSqrt: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSqrt*
  name: FillSqrt
  href: api/Tensor.Tensor-1.FillSqrt.html
  commentId: Overload:Tensor.Tensor`1.FillSqrt*
  fullName: Tensor.Tensor.FillSqrt
  nameWithType: Tensor.FillSqrt
- uid: Tensor.Tensor`1.FillSubtract(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "member FillSubtract: Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSubtract.html#Tensor_Tensor_1_FillSubtract_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSubtract(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillSubtract: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillSubtract: Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSubtract*
  name: FillSubtract
  href: api/Tensor.Tensor-1.FillSubtract.html
  commentId: Overload:Tensor.Tensor`1.FillSubtract*
  fullName: Tensor.Tensor.FillSubtract
  nameWithType: Tensor.FillSubtract
- uid: Tensor.Tensor`1.FillSumAxis(int -> Tensor.Tensor<'T>)
  name: "member FillSumAxis: int -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSumAxis.html#Tensor_Tensor_1_FillSumAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSumAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillSumAxis: int -> Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillSumAxis: int -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSumAxis*
  name: FillSumAxis
  href: api/Tensor.Tensor-1.FillSumAxis.html
  commentId: Overload:Tensor.Tensor`1.FillSumAxis*
  fullName: Tensor.Tensor.FillSumAxis
  nameWithType: Tensor.FillSumAxis
- uid: Tensor.Tensor`1.FillSVD(Tensor.Tensor<'T> * Tensor.Tensor<'T> * Tensor.Tensor<'T> option)
  name: "member FillSVD: Tensor<'T> * Tensor<'T> * Tensor<'T> option -> unit"
  href: api/Tensor.Tensor-1.FillSVD.html#Tensor_Tensor_1_FillSVD_Tensor_Tensor__T____Tensor_Tensor__T____Tensor_Tensor__T__option_
  commentId: M:Tensor.Tensor`1.FillSVD(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{System.Tuple{Tensor.Tensor{`0},Tensor.Tensor{`0}}})
  fullName: "member Tensor.Tensor.FillSVD: Tensor.Tensor<'T> * Tensor.Tensor<'T> * Tensor.Tensor<'T> option -> unit"
  nameWithType: "member Tensor.FillSVD: Tensor<'T> * Tensor<'T> * Tensor<'T> option -> unit"
- uid: Tensor.Tensor`1.FillSVD*
  name: FillSVD
  href: api/Tensor.Tensor-1.FillSVD.html
  commentId: Overload:Tensor.Tensor`1.FillSVD*
  fullName: Tensor.Tensor.FillSVD
  nameWithType: Tensor.FillSVD
- uid: Tensor.Tensor`1.FillSymmetricEigenDecomposition(Tensor.MatrixPart -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "static member FillSymmetricEigenDecomposition: MatrixPart -> Tensor<'T> -> Tensor<'T> -> Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillSymmetricEigenDecomposition.html#Tensor_Tensor_1_FillSymmetricEigenDecomposition_Tensor_MatrixPart____Tensor_Tensor__T_____Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillSymmetricEigenDecomposition(Tensor.MatrixPart,Tensor.Tensor{`0},Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.FillSymmetricEigenDecomposition: Tensor.MatrixPart -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> unit"
  nameWithType: "static member Tensor.FillSymmetricEigenDecomposition: MatrixPart -> Tensor<'T> -> Tensor<'T> -> Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillSymmetricEigenDecomposition*
  name: FillSymmetricEigenDecomposition
  href: api/Tensor.Tensor-1.FillSymmetricEigenDecomposition.html
  commentId: Overload:Tensor.Tensor`1.FillSymmetricEigenDecomposition*
  fullName: Tensor.Tensor.FillSymmetricEigenDecomposition
  nameWithType: Tensor.FillSymmetricEigenDecomposition
- uid: Tensor.Tensor`1.FillTan(Tensor.Tensor<'T>)
  name: "member FillTan: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillTan.html#Tensor_Tensor_1_FillTan_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillTan(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillTan: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillTan: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillTan*
  name: FillTan
  href: api/Tensor.Tensor-1.FillTan.html
  commentId: Overload:Tensor.Tensor`1.FillTan*
  fullName: Tensor.Tensor.FillTan
  nameWithType: Tensor.FillTan
- uid: Tensor.Tensor`1.FillTanh(Tensor.Tensor<'T>)
  name: "member FillTanh: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillTanh.html#Tensor_Tensor_1_FillTanh_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillTanh(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillTanh: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillTanh: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillTanh*
  name: FillTanh
  href: api/Tensor.Tensor-1.FillTanh.html
  commentId: Overload:Tensor.Tensor`1.FillTanh*
  fullName: Tensor.Tensor.FillTanh
  nameWithType: Tensor.FillTanh
- uid: Tensor.Tensor`1.FillTruncate(Tensor.Tensor<'T>)
  name: "member FillTruncate: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillTruncate.html#Tensor_Tensor_1_FillTruncate_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillTruncate(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillTruncate: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillTruncate: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillTruncate*
  name: FillTruncate
  href: api/Tensor.Tensor-1.FillTruncate.html
  commentId: Overload:Tensor.Tensor`1.FillTruncate*
  fullName: Tensor.Tensor.FillTruncate
  nameWithType: Tensor.FillTruncate
- uid: Tensor.Tensor`1.FillUnaryMinus(Tensor.Tensor<'T>)
  name: "member FillUnaryMinus: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillUnaryMinus.html#Tensor_Tensor_1_FillUnaryMinus_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillUnaryMinus(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillUnaryMinus: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillUnaryMinus: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillUnaryMinus*
  name: FillUnaryMinus
  href: api/Tensor.Tensor-1.FillUnaryMinus.html
  commentId: Overload:Tensor.Tensor`1.FillUnaryMinus*
  fullName: Tensor.Tensor.FillUnaryMinus
  nameWithType: Tensor.FillUnaryMinus
- uid: Tensor.Tensor`1.FillUnaryPlus(Tensor.Tensor<'T>)
  name: "member FillUnaryPlus: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.FillUnaryPlus.html#Tensor_Tensor_1_FillUnaryPlus_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.FillUnaryPlus(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.FillUnaryPlus: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.FillUnaryPlus: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.FillUnaryPlus*
  name: FillUnaryPlus
  href: api/Tensor.Tensor-1.FillUnaryPlus.html
  commentId: Overload:Tensor.Tensor`1.FillUnaryPlus*
  fullName: Tensor.Tensor.FillUnaryPlus
  nameWithType: Tensor.FillUnaryPlus
- uid: Tensor.Tensor`1.FillXor(Tensor.Tensor<bool> -> Tensor.Tensor<bool>)
  name: 'member FillXor: Tensor<bool> -> Tensor<bool> -> unit'
  href: api/Tensor.Tensor-1.FillXor.html#Tensor_Tensor_1_FillXor_Tensor_Tensor_bool_____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.FillXor(Tensor.Tensor{System.Boolean},Tensor.Tensor{System.Boolean})
  fullName: 'member Tensor.Tensor.FillXor: Tensor.Tensor<bool> -> Tensor.Tensor<bool> -> unit'
  nameWithType: 'member Tensor.FillXor: Tensor<bool> -> Tensor<bool> -> unit'
- uid: Tensor.Tensor`1.FillXor*
  name: FillXor
  href: api/Tensor.Tensor-1.FillXor.html
  commentId: Overload:Tensor.Tensor`1.FillXor*
  fullName: Tensor.Tensor.FillXor
  nameWithType: Tensor.FillXor
- uid: Tensor.Tensor`1.find('T -> Tensor.Tensor<'T>)
  name: "static member find: 'T -> Tensor<'T> -> int64 list"
  href: api/Tensor.Tensor-1.find.html#Tensor_Tensor_1_find__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.find(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.find: 'T -> Tensor.Tensor<'T> -> int64 list"
  nameWithType: "static member Tensor.find: 'T -> Tensor<'T> -> int64 list"
- uid: Tensor.Tensor`1.find*
  name: find
  href: api/Tensor.Tensor-1.find.html
  commentId: Overload:Tensor.Tensor`1.find*
  fullName: Tensor.Tensor.find
  nameWithType: Tensor.find
- uid: Tensor.Tensor`1.findAxis('T -> int -> Tensor.Tensor<'T>)
  name: "static member findAxis: 'T -> int -> Tensor<'T> -> Tensor<int64>"
  href: api/Tensor.Tensor-1.findAxis.html#Tensor_Tensor_1_findAxis__T____int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.findAxis(`0,System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.findAxis: 'T -> int -> Tensor.Tensor<'T> -> Tensor.Tensor<int64>"
  nameWithType: "static member Tensor.findAxis: 'T -> int -> Tensor<'T> -> Tensor<int64>"
- uid: Tensor.Tensor`1.findAxis*
  name: findAxis
  href: api/Tensor.Tensor-1.findAxis.html
  commentId: Overload:Tensor.Tensor`1.findAxis*
  fullName: Tensor.Tensor.findAxis
  nameWithType: Tensor.findAxis
- uid: Tensor.Tensor`1.flatten(Tensor.Tensor<'T>)
  name: "static member flatten: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.flatten.html#Tensor_Tensor_1_flatten_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.flatten(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.flatten: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.flatten: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.flatten*
  name: flatten
  href: api/Tensor.Tensor-1.flatten.html
  commentId: Overload:Tensor.Tensor`1.flatten*
  fullName: Tensor.Tensor.flatten
  nameWithType: Tensor.flatten
- uid: Tensor.Tensor`1.Floor(Tensor.Tensor<'T>)
  name: "static member Floor: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Floor.html#Tensor_Tensor_1_Floor_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Floor(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Floor: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Floor: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Floor*
  name: Floor
  href: api/Tensor.Tensor-1.Floor.html
  commentId: Overload:Tensor.Tensor`1.Floor*
  fullName: Tensor.Tensor.Floor
  nameWithType: Tensor.Floor
- uid: Tensor.Tensor`1.Full(unit)
  name: 'property Full: string'
  href: api/Tensor.Tensor-1.Full.html#Tensor_Tensor_1_Full_unit_
  commentId: P:Tensor.Tensor`1.Full
  fullName: 'property Tensor.Tensor.Full: string'
  nameWithType: 'property Tensor.Full: string'
- uid: Tensor.Tensor`1.Full*
  name: Full
  href: api/Tensor.Tensor-1.Full.html
  commentId: Overload:Tensor.Tensor`1.Full*
  fullName: Tensor.Tensor.Full
  nameWithType: Tensor.Full
- uid: Tensor.Tensor`1.gather(Tensor.Tensor<int64> option list -> Tensor.Tensor<'T>)
  name: "static member gather: Tensor<int64> option list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.gather.html#Tensor_Tensor_1_gather_Tensor_Tensor_int64__option_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.gather(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Tensor{System.Int64}}},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.gather: Tensor.Tensor<int64> option list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.gather: Tensor<int64> option list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.gather*
  name: gather
  href: api/Tensor.Tensor-1.gather.html
  commentId: Overload:Tensor.Tensor`1.gather*
  fullName: Tensor.Tensor.gather
  nameWithType: Tensor.gather
- uid: Tensor.Tensor`1.get(Tensor.Tensor<'T> -> int64 list)
  name: "static member get: Tensor<'T> -> int64 list -> 'T"
  href: api/Tensor.Tensor-1.get.html#Tensor_Tensor_1_get_Tensor_Tensor__T_____int64_list_
  commentId: M:Tensor.Tensor`1.get(Tensor.Tensor{`0},Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "static member Tensor.Tensor.get: Tensor.Tensor<'T> -> int64 list -> 'T"
  nameWithType: "static member Tensor.get: Tensor<'T> -> int64 list -> 'T"
- uid: Tensor.Tensor`1.get*
  name: get
  href: api/Tensor.Tensor-1.get.html
  commentId: Overload:Tensor.Tensor`1.get*
  fullName: Tensor.Tensor.get
  nameWithType: Tensor.get
- uid: Tensor.Tensor`1.GetHashCode(unit)
  name: 'override member GetHashCode: unit -> int'
  href: api/Tensor.Tensor-1.GetHashCode.html#Tensor_Tensor_1_GetHashCode_unit_
  commentId: M:Tensor.Tensor`1.GetHashCode
  fullName: 'override member Tensor.Tensor.GetHashCode: unit -> int'
  nameWithType: 'override member Tensor.GetHashCode: unit -> int'
- uid: Tensor.Tensor`1.GetHashCode*
  name: GetHashCode
  href: api/Tensor.Tensor-1.GetHashCode.html
  commentId: Overload:Tensor.Tensor`1.GetHashCode*
  fullName: Tensor.Tensor.GetHashCode
  nameWithType: Tensor.GetHashCode
- uid: Tensor.Tensor`1.identity(Tensor.Backend.ITensorDevice -> int64)
  name: "static member identity: ITensorDevice -> int64 -> Tensor<'T>"
  href: api/Tensor.Tensor-1.identity.html#Tensor_Tensor_1_identity_Tensor_Backend_ITensorDevice____int64_
  commentId: M:Tensor.Tensor`1.identity(Tensor.Backend.ITensorDevice,System.Int64)
  fullName: "static member Tensor.Tensor.identity: Tensor.Backend.ITensorDevice -> int64 -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.identity: ITensorDevice -> int64 -> Tensor<'T>"
- uid: Tensor.Tensor`1.identity*
  name: identity
  href: api/Tensor.Tensor-1.identity.html
  commentId: Overload:Tensor.Tensor`1.identity*
  fullName: Tensor.Tensor.identity
  nameWithType: Tensor.identity
- uid: Tensor.Tensor`1.ifThenElse(Tensor.Tensor<bool> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "static member ifThenElse: Tensor<bool> -> Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.ifThenElse.html#Tensor_Tensor_1_ifThenElse_Tensor_Tensor_bool_____Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.ifThenElse(Tensor.Tensor{System.Boolean},Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.ifThenElse: Tensor.Tensor<bool> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.ifThenElse: Tensor<bool> -> Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.ifThenElse*
  name: ifThenElse
  href: api/Tensor.Tensor-1.ifThenElse.html
  commentId: Overload:Tensor.Tensor`1.ifThenElse*
  fullName: Tensor.Tensor.ifThenElse
  nameWithType: Tensor.ifThenElse
- uid: Tensor.Tensor`1.insertAxis(int -> Tensor.Tensor<'T>)
  name: "static member insertAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.insertAxis.html#Tensor_Tensor_1_insertAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.insertAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.insertAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.insertAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.insertAxis*
  name: insertAxis
  href: api/Tensor.Tensor-1.insertAxis.html
  commentId: Overload:Tensor.Tensor`1.insertAxis*
  fullName: Tensor.Tensor.insertAxis
  nameWithType: Tensor.insertAxis
- uid: Tensor.Tensor`1.invert(Tensor.Tensor<'T>)
  name: "static member invert: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.invert.html#Tensor_Tensor_1_invert_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.invert(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.invert: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.invert: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.invert*
  name: invert
  href: api/Tensor.Tensor-1.invert.html
  commentId: Overload:Tensor.Tensor`1.invert*
  fullName: Tensor.Tensor.invert
  nameWithType: Tensor.invert
- uid: Tensor.Tensor`1.isBroadcasted(Tensor.Tensor<'T>)
  name: "static member isBroadcasted: Tensor<'T> -> bool"
  href: api/Tensor.Tensor-1.isBroadcasted.html#Tensor_Tensor_1_isBroadcasted_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.isBroadcasted(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.isBroadcasted: Tensor.Tensor<'T> -> bool"
  nameWithType: "static member Tensor.isBroadcasted: Tensor<'T> -> bool"
- uid: Tensor.Tensor`1.isBroadcasted*
  name: isBroadcasted
  href: api/Tensor.Tensor-1.isBroadcasted.html
  commentId: Overload:Tensor.Tensor`1.isBroadcasted*
  fullName: Tensor.Tensor.isBroadcasted
  nameWithType: Tensor.isBroadcasted
- uid: Tensor.Tensor`1.isClose(Tensor.Tensor<'T> * Tensor.Tensor<'T> * 'T option * 'T option)
  name: "static member isClose: Tensor<'T> * Tensor<'T> * 'T option * 'T option -> Tensor<bool>"
  href: api/Tensor.Tensor-1.isClose.html#Tensor_Tensor_1_isClose_Tensor_Tensor__T____Tensor_Tensor__T_____T_option____T_option_
  commentId: M:Tensor.Tensor`1.isClose(Tensor.Tensor{`0},Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{`0},Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "static member Tensor.Tensor.isClose: Tensor.Tensor<'T> * Tensor.Tensor<'T> * 'T option * 'T option -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.isClose: Tensor<'T> * Tensor<'T> * 'T option * 'T option -> Tensor<bool>"
- uid: Tensor.Tensor`1.isClose*
  name: isClose
  href: api/Tensor.Tensor-1.isClose.html
  commentId: Overload:Tensor.Tensor`1.isClose*
  fullName: Tensor.Tensor.isClose
  nameWithType: Tensor.isClose
- uid: Tensor.Tensor`1.isFinite(Tensor.Tensor<'T>)
  name: "static member isFinite: Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.isFinite.html#Tensor_Tensor_1_isFinite_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.isFinite(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.isFinite: Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.isFinite: Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.isFinite*
  name: isFinite
  href: api/Tensor.Tensor-1.isFinite.html
  commentId: Overload:Tensor.Tensor`1.isFinite*
  fullName: Tensor.Tensor.isFinite
  nameWithType: Tensor.isFinite
- uid: Tensor.Tensor`1.Item(int64 [])
  name: "property Item: int64 [] -> 'T"
  href: api/Tensor.Tensor-1.Item.html#Tensor_Tensor_1_Item_int64____
  commentId: P:Tensor.Tensor`1.Item(System.Int64[])
  fullName: "property Tensor.Tensor.Item: int64 [] -> 'T"
  nameWithType: "property Tensor.Item: int64 [] -> 'T"
- uid: Tensor.Tensor`1.Item(int64 list)
  name: "property Item: int64 list -> 'T"
  href: api/Tensor.Tensor-1.Item.html#Tensor_Tensor_1_Item_int64_list_
  commentId: P:Tensor.Tensor`1.Item(Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "property Tensor.Tensor.Item: int64 list -> 'T"
  nameWithType: "property Tensor.Item: int64 list -> 'T"
- uid: Tensor.Tensor`1.Item(int64)
  name: "property Item: int64 -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Item.html#Tensor_Tensor_1_Item_int64_
  commentId: P:Tensor.Tensor`1.Item(System.Int64)
  fullName: "property Tensor.Tensor.Item: int64 -> Tensor.Tensor<'T>"
  nameWithType: "property Tensor.Item: int64 -> Tensor<'T>"
- uid: Tensor.Tensor`1.Item(Tensor.Rng list)
  name: "property Item: Rng list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Item.html#Tensor_Tensor_1_Item_Tensor_Rng_list_
  commentId: P:Tensor.Tensor`1.Item(Microsoft.FSharp.Collections.FSharpList{Tensor.Rng})
  fullName: "property Tensor.Tensor.Item: Tensor.Rng list -> Tensor.Tensor<'T>"
  nameWithType: "property Tensor.Item: Rng list -> Tensor<'T>"
- uid: Tensor.Tensor`1.Item*
  name: Item
  href: api/Tensor.Tensor-1.Item.html
  commentId: Overload:Tensor.Tensor`1.Item*
  fullName: Tensor.Tensor.Item
  nameWithType: Tensor.Item
- uid: Tensor.Tensor`1.layout(Tensor.Tensor<'T>)
  name: "static member layout: Tensor<'T> -> TensorLayout"
  href: api/Tensor.Tensor-1.layout.html#Tensor_Tensor_1_layout_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.layout(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.layout: Tensor.Tensor<'T> -> Tensor.Backend.TensorLayout"
  nameWithType: "static member Tensor.layout: Tensor<'T> -> TensorLayout"
- uid: Tensor.Tensor`1.Layout(unit)
  name: 'property Layout: TensorLayout'
  href: api/Tensor.Tensor-1.Layout.html#Tensor_Tensor_1_Layout_unit_
  commentId: P:Tensor.Tensor`1.Layout
  fullName: 'property Tensor.Tensor.Layout: Tensor.Backend.TensorLayout'
  nameWithType: 'property Tensor.Layout: TensorLayout'
- uid: Tensor.Tensor`1.layout*
  name: layout
  href: api/Tensor.Tensor-1.layout.html
  commentId: Overload:Tensor.Tensor`1.layout*
  fullName: Tensor.Tensor.layout
  nameWithType: Tensor.layout
- uid: Tensor.Tensor`1.Layout*
  name: Layout
  href: api/Tensor.Tensor-1.Layout.html
  commentId: Overload:Tensor.Tensor`1.Layout*
  fullName: Tensor.Tensor.Layout
  nameWithType: Tensor.Layout
- uid: Tensor.Tensor`1.linspace(Tensor.Backend.ITensorDevice -> 'T -> 'T -> int64)
  name: "static member linspace: ITensorDevice -> 'T -> 'T -> int64 -> Tensor<'T>"
  href: api/Tensor.Tensor-1.linspace.html#Tensor_Tensor_1_linspace_Tensor_Backend_ITensorDevice_____T_____T____int64_
  commentId: M:Tensor.Tensor`1.linspace(Tensor.Backend.ITensorDevice,`0,`0,System.Int64)
  fullName: "static member Tensor.Tensor.linspace: Tensor.Backend.ITensorDevice -> 'T -> 'T -> int64 -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.linspace: ITensorDevice -> 'T -> 'T -> int64 -> Tensor<'T>"
- uid: Tensor.Tensor`1.linspace*
  name: linspace
  href: api/Tensor.Tensor-1.linspace.html
  commentId: Overload:Tensor.Tensor`1.linspace*
  fullName: Tensor.Tensor.linspace
  nameWithType: Tensor.linspace
- uid: Tensor.Tensor`1.Log(Tensor.Tensor<'T>)
  name: "static member Log: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Log.html#Tensor_Tensor_1_Log_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Log(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Log: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Log: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Log*
  name: Log
  href: api/Tensor.Tensor-1.Log.html
  commentId: Overload:Tensor.Tensor`1.Log*
  fullName: Tensor.Tensor.Log
  nameWithType: Tensor.Log
- uid: Tensor.Tensor`1.Log10(Tensor.Tensor<'T>)
  name: "static member Log10: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Log10.html#Tensor_Tensor_1_Log10_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Log10(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Log10: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Log10: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Log10*
  name: Log10
  href: api/Tensor.Tensor-1.Log10.html
  commentId: Overload:Tensor.Tensor`1.Log10*
  fullName: Tensor.Tensor.Log10
  nameWithType: Tensor.Log10
- uid: Tensor.Tensor`1.M(Tensor.Tensor<bool> list)
  name: "property M: Tensor<bool> list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.M.html#Tensor_Tensor_1_M_Tensor_Tensor_bool__list_
  commentId: P:Tensor.Tensor`1.M(Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{System.Boolean}})
  fullName: "property Tensor.Tensor.M: Tensor.Tensor<bool> list -> Tensor.Tensor<'T>"
  nameWithType: "property Tensor.M: Tensor<bool> list -> Tensor<'T>"
- uid: Tensor.Tensor`1.M(Tensor.Tensor<bool>)
  name: "property M: Tensor<bool> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.M.html#Tensor_Tensor_1_M_Tensor_Tensor_bool__
  commentId: P:Tensor.Tensor`1.M(Tensor.Tensor{System.Boolean})
  fullName: "property Tensor.Tensor.M: Tensor.Tensor<bool> -> Tensor.Tensor<'T>"
  nameWithType: "property Tensor.M: Tensor<bool> -> Tensor<'T>"
- uid: Tensor.Tensor`1.M*
  name: M
  href: api/Tensor.Tensor-1.M.html
  commentId: Overload:Tensor.Tensor`1.M*
  fullName: Tensor.Tensor.M
  nameWithType: Tensor.M
- uid: Tensor.Tensor`1.max(Tensor.Tensor<'T>)
  name: "static member max: Tensor<'T> -> 'T"
  href: api/Tensor.Tensor-1.max.html#Tensor_Tensor_1_max_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.max(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.max: Tensor.Tensor<'T> -> 'T"
  nameWithType: "static member Tensor.max: Tensor<'T> -> 'T"
- uid: Tensor.Tensor`1.max*
  name: max
  href: api/Tensor.Tensor-1.max.html
  commentId: Overload:Tensor.Tensor`1.max*
  fullName: Tensor.Tensor.max
  nameWithType: Tensor.max
- uid: Tensor.Tensor`1.maxAxis(int -> Tensor.Tensor<'T>)
  name: "static member maxAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.maxAxis.html#Tensor_Tensor_1_maxAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.maxAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.maxAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.maxAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.maxAxis*
  name: maxAxis
  href: api/Tensor.Tensor-1.maxAxis.html
  commentId: Overload:Tensor.Tensor`1.maxAxis*
  fullName: Tensor.Tensor.maxAxis
  nameWithType: Tensor.maxAxis
- uid: Tensor.Tensor`1.maxElemwise(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "static member maxElemwise: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.maxElemwise.html#Tensor_Tensor_1_maxElemwise_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.maxElemwise(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.maxElemwise: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.maxElemwise: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.maxElemwise*
  name: maxElemwise
  href: api/Tensor.Tensor-1.maxElemwise.html
  commentId: Overload:Tensor.Tensor`1.maxElemwise*
  fullName: Tensor.Tensor.maxElemwise
  nameWithType: Tensor.maxElemwise
- uid: Tensor.Tensor`1.maxTensor(Tensor.Tensor<'T>)
  name: "static member maxTensor: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.maxTensor.html#Tensor_Tensor_1_maxTensor_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.maxTensor(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.maxTensor: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.maxTensor: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.maxTensor*
  name: maxTensor
  href: api/Tensor.Tensor-1.maxTensor.html
  commentId: Overload:Tensor.Tensor`1.maxTensor*
  fullName: Tensor.Tensor.maxTensor
  nameWithType: Tensor.maxTensor
- uid: Tensor.Tensor`1.mean(Tensor.Tensor<'T>)
  name: "static member mean: Tensor<'T> -> 'T"
  href: api/Tensor.Tensor-1.mean.html#Tensor_Tensor_1_mean_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.mean(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.mean: Tensor.Tensor<'T> -> 'T"
  nameWithType: "static member Tensor.mean: Tensor<'T> -> 'T"
- uid: Tensor.Tensor`1.mean*
  name: mean
  href: api/Tensor.Tensor-1.mean.html
  commentId: Overload:Tensor.Tensor`1.mean*
  fullName: Tensor.Tensor.mean
  nameWithType: Tensor.mean
- uid: Tensor.Tensor`1.meanAxis(int -> Tensor.Tensor<'T>)
  name: "static member meanAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.meanAxis.html#Tensor_Tensor_1_meanAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.meanAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.meanAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.meanAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.meanAxis*
  name: meanAxis
  href: api/Tensor.Tensor-1.meanAxis.html
  commentId: Overload:Tensor.Tensor`1.meanAxis*
  fullName: Tensor.Tensor.meanAxis
  nameWithType: Tensor.meanAxis
- uid: Tensor.Tensor`1.min(Tensor.Tensor<'T>)
  name: "static member min: Tensor<'T> -> 'T"
  href: api/Tensor.Tensor-1.min.html#Tensor_Tensor_1_min_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.min(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.min: Tensor.Tensor<'T> -> 'T"
  nameWithType: "static member Tensor.min: Tensor<'T> -> 'T"
- uid: Tensor.Tensor`1.min*
  name: min
  href: api/Tensor.Tensor-1.min.html
  commentId: Overload:Tensor.Tensor`1.min*
  fullName: Tensor.Tensor.min
  nameWithType: Tensor.min
- uid: Tensor.Tensor`1.minAxis(int -> Tensor.Tensor<'T>)
  name: "static member minAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.minAxis.html#Tensor_Tensor_1_minAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.minAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.minAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.minAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.minAxis*
  name: minAxis
  href: api/Tensor.Tensor-1.minAxis.html
  commentId: Overload:Tensor.Tensor`1.minAxis*
  fullName: Tensor.Tensor.minAxis
  nameWithType: Tensor.minAxis
- uid: Tensor.Tensor`1.minElemwise(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "static member minElemwise: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.minElemwise.html#Tensor_Tensor_1_minElemwise_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.minElemwise(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.minElemwise: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.minElemwise: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.minElemwise*
  name: minElemwise
  href: api/Tensor.Tensor-1.minElemwise.html
  commentId: Overload:Tensor.Tensor`1.minElemwise*
  fullName: Tensor.Tensor.minElemwise
  nameWithType: Tensor.minElemwise
- uid: Tensor.Tensor`1.minTensor(Tensor.Tensor<'T>)
  name: "static member minTensor: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.minTensor.html#Tensor_Tensor_1_minTensor_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.minTensor(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.minTensor: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.minTensor: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.minTensor*
  name: minTensor
  href: api/Tensor.Tensor-1.minTensor.html
  commentId: Overload:Tensor.Tensor`1.minTensor*
  fullName: Tensor.Tensor.minTensor
  nameWithType: Tensor.minTensor
- uid: Tensor.Tensor`1.nDims(Tensor.Tensor<'T>)
  name: "static member nDims: Tensor<'T> -> int"
  href: api/Tensor.Tensor-1.nDims.html#Tensor_Tensor_1_nDims_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.nDims(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.nDims: Tensor.Tensor<'T> -> int"
  nameWithType: "static member Tensor.nDims: Tensor<'T> -> int"
- uid: Tensor.Tensor`1.NDims(unit)
  name: 'property NDims: int'
  href: api/Tensor.Tensor-1.NDims.html#Tensor_Tensor_1_NDims_unit_
  commentId: P:Tensor.Tensor`1.NDims
  fullName: 'property Tensor.Tensor.NDims: int'
  nameWithType: 'property Tensor.NDims: int'
- uid: Tensor.Tensor`1.nDims*
  name: nDims
  href: api/Tensor.Tensor-1.nDims.html
  commentId: Overload:Tensor.Tensor`1.nDims*
  fullName: Tensor.Tensor.nDims
  nameWithType: Tensor.nDims
- uid: Tensor.Tensor`1.NDims*
  name: NDims
  href: api/Tensor.Tensor-1.NDims.html
  commentId: Overload:Tensor.Tensor`1.NDims*
  fullName: Tensor.Tensor.NDims
  nameWithType: Tensor.NDims
- uid: Tensor.Tensor`1.nElems(Tensor.Tensor<'T>)
  name: "static member nElems: Tensor<'T> -> int64"
  href: api/Tensor.Tensor-1.nElems.html#Tensor_Tensor_1_nElems_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.nElems(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.nElems: Tensor.Tensor<'T> -> int64"
  nameWithType: "static member Tensor.nElems: Tensor<'T> -> int64"
- uid: Tensor.Tensor`1.NElems(unit)
  name: 'property NElems: int64'
  href: api/Tensor.Tensor-1.NElems.html#Tensor_Tensor_1_NElems_unit_
  commentId: P:Tensor.Tensor`1.NElems
  fullName: 'property Tensor.Tensor.NElems: int64'
  nameWithType: 'property Tensor.NElems: int64'
- uid: Tensor.Tensor`1.nElems*
  name: nElems
  href: api/Tensor.Tensor-1.nElems.html
  commentId: Overload:Tensor.Tensor`1.nElems*
  fullName: Tensor.Tensor.nElems
  nameWithType: Tensor.nElems
- uid: Tensor.Tensor`1.NElems*
  name: NElems
  href: api/Tensor.Tensor-1.NElems.html
  commentId: Overload:Tensor.Tensor`1.NElems*
  fullName: Tensor.Tensor.NElems
  nameWithType: Tensor.NElems
- uid: Tensor.Tensor`1.NewOfType(int64 list * System.Type * Tensor.Backend.ITensorDevice * Tensor.TensorOrder option)
  name: 'static member NewOfType: int64 list * Type * ITensorDevice * TensorOrder option -> ITensor'
  href: api/Tensor.Tensor-1.NewOfType.html#Tensor_Tensor_1_NewOfType_int64_list___System_Type___Tensor_Backend_ITensorDevice___Tensor_TensorOrder_option_
  commentId: M:Tensor.Tensor`1.NewOfType(Microsoft.FSharp.Collections.FSharpList{System.Int64},System.Type,Tensor.Backend.ITensorDevice,Microsoft.FSharp.Core.FSharpOption{Tensor.TensorOrder})
  fullName: 'static member Tensor.Tensor.NewOfType: int64 list * System.Type * Tensor.Backend.ITensorDevice * Tensor.TensorOrder option -> Tensor.ITensor'
  nameWithType: 'static member Tensor.NewOfType: int64 list * Type * ITensorDevice * TensorOrder option -> ITensor'
- uid: Tensor.Tensor`1.NewOfType*
  name: NewOfType
  href: api/Tensor.Tensor-1.NewOfType.html
  commentId: Overload:Tensor.Tensor`1.NewOfType*
  fullName: Tensor.Tensor.NewOfType
  nameWithType: Tensor.NewOfType
- uid: Tensor.Tensor`1.norm(Tensor.Tensor<'T> * 'T option)
  name: "static member norm: Tensor<'T> * 'T option -> 'T"
  href: api/Tensor.Tensor-1.norm.html#Tensor_Tensor_1_norm_Tensor_Tensor__T_____T_option_
  commentId: M:Tensor.Tensor`1.norm(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "static member Tensor.Tensor.norm: Tensor.Tensor<'T> * 'T option -> 'T"
  nameWithType: "static member Tensor.norm: Tensor<'T> * 'T option -> 'T"
- uid: Tensor.Tensor`1.norm*
  name: norm
  href: api/Tensor.Tensor-1.norm.html
  commentId: Overload:Tensor.Tensor`1.norm*
  fullName: Tensor.Tensor.norm
  nameWithType: Tensor.norm
- uid: Tensor.Tensor`1.normAxis(int * Tensor.Tensor<'T> * 'T option)
  name: "static member normAxis: int * Tensor<'T> * 'T option -> Tensor<'T>"
  href: api/Tensor.Tensor-1.normAxis.html#Tensor_Tensor_1_normAxis_int___Tensor_Tensor__T_____T_option_
  commentId: M:Tensor.Tensor`1.normAxis(System.Int32,Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "static member Tensor.Tensor.normAxis: int * Tensor.Tensor<'T> * 'T option -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.normAxis: int * Tensor<'T> * 'T option -> Tensor<'T>"
- uid: Tensor.Tensor`1.normAxis*
  name: normAxis
  href: api/Tensor.Tensor-1.normAxis.html
  commentId: Overload:Tensor.Tensor`1.normAxis*
  fullName: Tensor.Tensor.normAxis
  nameWithType: Tensor.normAxis
- uid: Tensor.Tensor`1.ofBlocks(Tensor.BlockTensor<'T>)
  name: "static member ofBlocks: BlockTensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.ofBlocks.html#Tensor_Tensor_1_ofBlocks_Tensor_BlockTensor__T__
  commentId: M:Tensor.Tensor`1.ofBlocks(Tensor.BlockTensor{`0})
  fullName: "static member Tensor.Tensor.ofBlocks: Tensor.BlockTensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.ofBlocks: BlockTensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.ofBlocks(Tensor.Tensor<'T> list list list)
  name: "static member ofBlocks: Tensor<'T> list list list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.ofBlocks.html#Tensor_Tensor_1_ofBlocks_Tensor_Tensor__T__list_list_list_
  commentId: M:Tensor.Tensor`1.ofBlocks(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{`0}}}})
  fullName: "static member Tensor.Tensor.ofBlocks: Tensor.Tensor<'T> list list list -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.ofBlocks: Tensor<'T> list list list -> Tensor<'T>"
- uid: Tensor.Tensor`1.ofBlocks(Tensor.Tensor<'T> list list)
  name: "static member ofBlocks: Tensor<'T> list list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.ofBlocks.html#Tensor_Tensor_1_ofBlocks_Tensor_Tensor__T__list_list_
  commentId: M:Tensor.Tensor`1.ofBlocks(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{`0}}})
  fullName: "static member Tensor.Tensor.ofBlocks: Tensor.Tensor<'T> list list -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.ofBlocks: Tensor<'T> list list -> Tensor<'T>"
- uid: Tensor.Tensor`1.ofBlocks(Tensor.Tensor<'T> list)
  name: "static member ofBlocks: Tensor<'T> list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.ofBlocks.html#Tensor_Tensor_1_ofBlocks_Tensor_Tensor__T__list_
  commentId: M:Tensor.Tensor`1.ofBlocks(Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{`0}})
  fullName: "static member Tensor.Tensor.ofBlocks: Tensor.Tensor<'T> list -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.ofBlocks: Tensor<'T> list -> Tensor<'T>"
- uid: Tensor.Tensor`1.ofBlocks*
  name: ofBlocks
  href: api/Tensor.Tensor-1.ofBlocks.html
  commentId: Overload:Tensor.Tensor`1.ofBlocks*
  fullName: Tensor.Tensor.ofBlocks
  nameWithType: Tensor.ofBlocks
- uid: Tensor.Tensor`1.ones(Tensor.Backend.ITensorDevice -> int64 list)
  name: "static member ones: ITensorDevice -> int64 list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.ones.html#Tensor_Tensor_1_ones_Tensor_Backend_ITensorDevice____int64_list_
  commentId: M:Tensor.Tensor`1.ones(Tensor.Backend.ITensorDevice,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "static member Tensor.Tensor.ones: Tensor.Backend.ITensorDevice -> int64 list -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.ones: ITensorDevice -> int64 list -> Tensor<'T>"
- uid: Tensor.Tensor`1.ones*
  name: ones
  href: api/Tensor.Tensor-1.ones.html
  commentId: Overload:Tensor.Tensor`1.ones*
  fullName: Tensor.Tensor.ones
  nameWithType: Tensor.ones
- uid: Tensor.Tensor`1.onesLike(Tensor.Tensor<'T>)
  name: "static member onesLike: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.onesLike.html#Tensor_Tensor_1_onesLike_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.onesLike(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.onesLike: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.onesLike: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.onesLike*
  name: onesLike
  href: api/Tensor.Tensor-1.onesLike.html
  commentId: Overload:Tensor.Tensor`1.onesLike*
  fullName: Tensor.Tensor.onesLike
  nameWithType: Tensor.onesLike
- uid: Tensor.Tensor`1.op_Addition('T * Tensor.Tensor<'T>)
  name: "static member ( + ): 'T * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Addition.html#Tensor_Tensor_1_op_Addition__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Addition(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( + ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( + ): 'T * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Addition(Tensor.Tensor<'T> * 'T)
  name: "static member ( + ): Tensor<'T> * 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Addition.html#Tensor_Tensor_1_op_Addition_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_Addition(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( + ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( + ): Tensor<'T> * 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Addition(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( + ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Addition.html#Tensor_Tensor_1_op_Addition_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Addition(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( + ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( + ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Addition*
  name: ( + )
  href: api/Tensor.Tensor-1.op_Addition.html
  commentId: Overload:Tensor.Tensor`1.op_Addition*
  fullName: Tensor.Tensor.( + )
  nameWithType: Tensor.( + )
- uid: Tensor.Tensor`1.op_AmpAmpAmpAmp(bool * Tensor.Tensor<bool>)
  name: 'static member ( &&&& ): bool * Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_AmpAmpAmpAmp.html#Tensor_Tensor_1_op_AmpAmpAmpAmp_bool___Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_AmpAmpAmpAmp(System.Boolean,Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( &&&& ): bool * Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( &&&& ): bool * Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_AmpAmpAmpAmp(Tensor.Tensor<bool> * bool)
  name: 'static member ( &&&& ): Tensor<bool> * bool -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_AmpAmpAmpAmp.html#Tensor_Tensor_1_op_AmpAmpAmpAmp_Tensor_Tensor_bool____bool_
  commentId: M:Tensor.Tensor`1.op_AmpAmpAmpAmp(Tensor.Tensor{System.Boolean},System.Boolean)
  fullName: 'static member Tensor.Tensor.( &&&& ): Tensor.Tensor<bool> * bool -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( &&&& ): Tensor<bool> * bool -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_AmpAmpAmpAmp(Tensor.Tensor<bool> * Tensor.Tensor<bool>)
  name: 'static member ( &&&& ): Tensor<bool> * Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_AmpAmpAmpAmp.html#Tensor_Tensor_1_op_AmpAmpAmpAmp_Tensor_Tensor_bool____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_AmpAmpAmpAmp(Tensor.Tensor{System.Boolean},Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( &&&& ): Tensor.Tensor<bool> * Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( &&&& ): Tensor<bool> * Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_AmpAmpAmpAmp*
  name: ( &&&& )
  href: api/Tensor.Tensor-1.op_AmpAmpAmpAmp.html
  commentId: Overload:Tensor.Tensor`1.op_AmpAmpAmpAmp*
  fullName: Tensor.Tensor.( &&&& )
  nameWithType: Tensor.( &&&& )
- uid: Tensor.Tensor`1.op_BarBarBarBar(bool * Tensor.Tensor<bool>)
  name: 'static member ( |||| ): bool * Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_BarBarBarBar.html#Tensor_Tensor_1_op_BarBarBarBar_bool___Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_BarBarBarBar(System.Boolean,Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( |||| ): bool * Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( |||| ): bool * Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_BarBarBarBar(Tensor.Tensor<bool> * bool)
  name: 'static member ( |||| ): Tensor<bool> * bool -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_BarBarBarBar.html#Tensor_Tensor_1_op_BarBarBarBar_Tensor_Tensor_bool____bool_
  commentId: M:Tensor.Tensor`1.op_BarBarBarBar(Tensor.Tensor{System.Boolean},System.Boolean)
  fullName: 'static member Tensor.Tensor.( |||| ): Tensor.Tensor<bool> * bool -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( |||| ): Tensor<bool> * bool -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_BarBarBarBar(Tensor.Tensor<bool> * Tensor.Tensor<bool>)
  name: 'static member ( |||| ): Tensor<bool> * Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_BarBarBarBar.html#Tensor_Tensor_1_op_BarBarBarBar_Tensor_Tensor_bool____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_BarBarBarBar(Tensor.Tensor{System.Boolean},Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( |||| ): Tensor.Tensor<bool> * Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( |||| ): Tensor<bool> * Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_BarBarBarBar*
  name: ( |||| )
  href: api/Tensor.Tensor-1.op_BarBarBarBar.html
  commentId: Overload:Tensor.Tensor`1.op_BarBarBarBar*
  fullName: Tensor.Tensor.( |||| )
  nameWithType: Tensor.( |||| )
- uid: Tensor.Tensor`1.op_Division('T * Tensor.Tensor<'T>)
  name: "static member ( / ): 'T * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Division.html#Tensor_Tensor_1_op_Division__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Division(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( / ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( / ): 'T * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Division(Tensor.Tensor<'T> * 'T)
  name: "static member ( / ): Tensor<'T> * 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Division.html#Tensor_Tensor_1_op_Division_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_Division(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( / ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( / ): Tensor<'T> * 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Division(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( / ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Division.html#Tensor_Tensor_1_op_Division_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Division(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( / ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( / ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Division*
  name: ( / )
  href: api/Tensor.Tensor-1.op_Division.html
  commentId: Overload:Tensor.Tensor`1.op_Division*
  fullName: Tensor.Tensor.( / )
  nameWithType: Tensor.( / )
- uid: Tensor.Tensor`1.op_DotMultiply(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( .* ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_DotMultiply.html#Tensor_Tensor_1_op_DotMultiply_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_DotMultiply(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( .* ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( .* ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_DotMultiply*
  name: ( .* )
  href: api/Tensor.Tensor-1.op_DotMultiply.html
  commentId: Overload:Tensor.Tensor`1.op_DotMultiply*
  fullName: Tensor.Tensor.( .* )
  nameWithType: Tensor.( .* )
- uid: Tensor.Tensor`1.op_EqualsEqualsEqualsEquals('T * Tensor.Tensor<'T>)
  name: "static member ( ==== ): 'T * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_EqualsEqualsEqualsEquals.html#Tensor_Tensor_1_op_EqualsEqualsEqualsEquals__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_EqualsEqualsEqualsEquals(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( ==== ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( ==== ): 'T * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_EqualsEqualsEqualsEquals(Tensor.Tensor<'T> * 'T)
  name: "static member ( ==== ): Tensor<'T> * 'T -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_EqualsEqualsEqualsEquals.html#Tensor_Tensor_1_op_EqualsEqualsEqualsEquals_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_EqualsEqualsEqualsEquals(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( ==== ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( ==== ): Tensor<'T> * 'T -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_EqualsEqualsEqualsEquals(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( ==== ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_EqualsEqualsEqualsEquals.html#Tensor_Tensor_1_op_EqualsEqualsEqualsEquals_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_EqualsEqualsEqualsEquals(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( ==== ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( ==== ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_EqualsEqualsEqualsEquals*
  name: ( ==== )
  href: api/Tensor.Tensor-1.op_EqualsEqualsEqualsEquals.html
  commentId: Overload:Tensor.Tensor`1.op_EqualsEqualsEqualsEquals*
  fullName: Tensor.Tensor.( ==== )
  nameWithType: Tensor.( ==== )
- uid: Tensor.Tensor`1.op_GreaterGreaterEqualsEquals('T * Tensor.Tensor<'T>)
  name: "static member ( >>== ): 'T * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_GreaterGreaterEqualsEquals.html#Tensor_Tensor_1_op_GreaterGreaterEqualsEquals__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_GreaterGreaterEqualsEquals(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( >>== ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( >>== ): 'T * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_GreaterGreaterEqualsEquals(Tensor.Tensor<'T> * 'T)
  name: "static member ( >>== ): Tensor<'T> * 'T -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_GreaterGreaterEqualsEquals.html#Tensor_Tensor_1_op_GreaterGreaterEqualsEquals_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_GreaterGreaterEqualsEquals(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( >>== ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( >>== ): Tensor<'T> * 'T -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_GreaterGreaterEqualsEquals(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( >>== ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_GreaterGreaterEqualsEquals.html#Tensor_Tensor_1_op_GreaterGreaterEqualsEquals_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_GreaterGreaterEqualsEquals(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( >>== ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( >>== ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_GreaterGreaterEqualsEquals*
  name: ( >>== )
  href: api/Tensor.Tensor-1.op_GreaterGreaterEqualsEquals.html
  commentId: Overload:Tensor.Tensor`1.op_GreaterGreaterEqualsEquals*
  fullName: Tensor.Tensor.( >>== )
  nameWithType: Tensor.( >>== )
- uid: Tensor.Tensor`1.op_GreaterGreaterGreaterGreater('T * Tensor.Tensor<'T>)
  name: "static member ( >>>> ): 'T * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_GreaterGreaterGreaterGreater.html#Tensor_Tensor_1_op_GreaterGreaterGreaterGreater__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_GreaterGreaterGreaterGreater(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( >>>> ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( >>>> ): 'T * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_GreaterGreaterGreaterGreater(Tensor.Tensor<'T> * 'T)
  name: "static member ( >>>> ): Tensor<'T> * 'T -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_GreaterGreaterGreaterGreater.html#Tensor_Tensor_1_op_GreaterGreaterGreaterGreater_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_GreaterGreaterGreaterGreater(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( >>>> ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( >>>> ): Tensor<'T> * 'T -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_GreaterGreaterGreaterGreater(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( >>>> ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_GreaterGreaterGreaterGreater.html#Tensor_Tensor_1_op_GreaterGreaterGreaterGreater_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_GreaterGreaterGreaterGreater(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( >>>> ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( >>>> ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_GreaterGreaterGreaterGreater*
  name: ( >>>> )
  href: api/Tensor.Tensor-1.op_GreaterGreaterGreaterGreater.html
  commentId: Overload:Tensor.Tensor`1.op_GreaterGreaterGreaterGreater*
  fullName: Tensor.Tensor.( >>>> )
  nameWithType: Tensor.( >>>> )
- uid: Tensor.Tensor`1.op_HatHatHatHat(bool * Tensor.Tensor<bool>)
  name: 'static member ( ^^^^ ): bool * Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_HatHatHatHat.html#Tensor_Tensor_1_op_HatHatHatHat_bool___Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_HatHatHatHat(System.Boolean,Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( ^^^^ ): bool * Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( ^^^^ ): bool * Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_HatHatHatHat(Tensor.Tensor<bool> * bool)
  name: 'static member ( ^^^^ ): Tensor<bool> * bool -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_HatHatHatHat.html#Tensor_Tensor_1_op_HatHatHatHat_Tensor_Tensor_bool____bool_
  commentId: M:Tensor.Tensor`1.op_HatHatHatHat(Tensor.Tensor{System.Boolean},System.Boolean)
  fullName: 'static member Tensor.Tensor.( ^^^^ ): Tensor.Tensor<bool> * bool -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( ^^^^ ): Tensor<bool> * bool -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_HatHatHatHat(Tensor.Tensor<bool> * Tensor.Tensor<bool>)
  name: 'static member ( ^^^^ ): Tensor<bool> * Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_HatHatHatHat.html#Tensor_Tensor_1_op_HatHatHatHat_Tensor_Tensor_bool____Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_HatHatHatHat(Tensor.Tensor{System.Boolean},Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( ^^^^ ): Tensor.Tensor<bool> * Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( ^^^^ ): Tensor<bool> * Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_HatHatHatHat*
  name: ( ^^^^ )
  href: api/Tensor.Tensor-1.op_HatHatHatHat.html
  commentId: Overload:Tensor.Tensor`1.op_HatHatHatHat*
  fullName: Tensor.Tensor.( ^^^^ )
  nameWithType: Tensor.( ^^^^ )
- uid: Tensor.Tensor`1.op_LessLessEqualsEquals('T * Tensor.Tensor<'T>)
  name: "static member ( <<== ): 'T * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessEqualsEquals.html#Tensor_Tensor_1_op_LessLessEqualsEquals__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_LessLessEqualsEquals(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( <<== ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<== ): 'T * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessEqualsEquals(Tensor.Tensor<'T> * 'T)
  name: "static member ( <<== ): Tensor<'T> * 'T -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessEqualsEquals.html#Tensor_Tensor_1_op_LessLessEqualsEquals_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_LessLessEqualsEquals(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( <<== ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<== ): Tensor<'T> * 'T -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessEqualsEquals(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( <<== ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessEqualsEquals.html#Tensor_Tensor_1_op_LessLessEqualsEquals_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_LessLessEqualsEquals(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( <<== ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<== ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessEqualsEquals*
  name: ( <<== )
  href: api/Tensor.Tensor-1.op_LessLessEqualsEquals.html
  commentId: Overload:Tensor.Tensor`1.op_LessLessEqualsEquals*
  fullName: Tensor.Tensor.( <<== )
  nameWithType: Tensor.( <<== )
- uid: Tensor.Tensor`1.op_LessLessGreaterGreater('T * Tensor.Tensor<'T>)
  name: "static member ( <<>> ): 'T * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessGreaterGreater.html#Tensor_Tensor_1_op_LessLessGreaterGreater__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_LessLessGreaterGreater(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( <<>> ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<>> ): 'T * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessGreaterGreater(Tensor.Tensor<'T> * 'T)
  name: "static member ( <<>> ): Tensor<'T> * 'T -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessGreaterGreater.html#Tensor_Tensor_1_op_LessLessGreaterGreater_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_LessLessGreaterGreater(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( <<>> ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<>> ): Tensor<'T> * 'T -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessGreaterGreater(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( <<>> ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessGreaterGreater.html#Tensor_Tensor_1_op_LessLessGreaterGreater_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_LessLessGreaterGreater(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( <<>> ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<>> ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessGreaterGreater*
  name: ( <<>> )
  href: api/Tensor.Tensor-1.op_LessLessGreaterGreater.html
  commentId: Overload:Tensor.Tensor`1.op_LessLessGreaterGreater*
  fullName: Tensor.Tensor.( <<>> )
  nameWithType: Tensor.( <<>> )
- uid: Tensor.Tensor`1.op_LessLessLessLess('T * Tensor.Tensor<'T>)
  name: "static member ( <<<< ): 'T * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessLessLess.html#Tensor_Tensor_1_op_LessLessLessLess__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_LessLessLessLess(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( <<<< ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<<< ): 'T * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessLessLess(Tensor.Tensor<'T> * 'T)
  name: "static member ( <<<< ): Tensor<'T> * 'T -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessLessLess.html#Tensor_Tensor_1_op_LessLessLessLess_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_LessLessLessLess(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( <<<< ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<<< ): Tensor<'T> * 'T -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessLessLess(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( <<<< ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
  href: api/Tensor.Tensor-1.op_LessLessLessLess.html#Tensor_Tensor_1_op_LessLessLessLess_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_LessLessLessLess(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( <<<< ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<bool>"
  nameWithType: "static member Tensor.( <<<< ): Tensor<'T> * Tensor<'T> -> Tensor<bool>"
- uid: Tensor.Tensor`1.op_LessLessLessLess*
  name: ( <<<< )
  href: api/Tensor.Tensor-1.op_LessLessLessLess.html
  commentId: Overload:Tensor.Tensor`1.op_LessLessLessLess*
  fullName: Tensor.Tensor.( <<<< )
  nameWithType: Tensor.( <<<< )
- uid: Tensor.Tensor`1.op_Modulus('T * Tensor.Tensor<'T>)
  name: "static member ( % ): 'T * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Modulus.html#Tensor_Tensor_1_op_Modulus__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Modulus(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( % ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( % ): 'T * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Modulus(Tensor.Tensor<'T> * 'T)
  name: "static member ( % ): Tensor<'T> * 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Modulus.html#Tensor_Tensor_1_op_Modulus_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_Modulus(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( % ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( % ): Tensor<'T> * 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Modulus(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( % ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Modulus.html#Tensor_Tensor_1_op_Modulus_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Modulus(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( % ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( % ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Modulus*
  name: ( % )
  href: api/Tensor.Tensor-1.op_Modulus.html
  commentId: Overload:Tensor.Tensor`1.op_Modulus*
  fullName: Tensor.Tensor.( % )
  nameWithType: Tensor.( % )
- uid: Tensor.Tensor`1.op_Multiply('T * Tensor.Tensor<'T>)
  name: "static member ( * ): 'T * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Multiply.html#Tensor_Tensor_1_op_Multiply__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Multiply(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( * ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( * ): 'T * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Multiply(Tensor.Tensor<'T> * 'T)
  name: "static member ( * ): Tensor<'T> * 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Multiply.html#Tensor_Tensor_1_op_Multiply_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_Multiply(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( * ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( * ): Tensor<'T> * 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Multiply(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( * ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Multiply.html#Tensor_Tensor_1_op_Multiply_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Multiply(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( * ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( * ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Multiply*
  name: ( * )
  href: api/Tensor.Tensor-1.op_Multiply.html
  commentId: Overload:Tensor.Tensor`1.op_Multiply*
  fullName: Tensor.Tensor.( * )
  nameWithType: Tensor.( * )
- uid: Tensor.Tensor`1.op_Subtraction('T * Tensor.Tensor<'T>)
  name: "static member ( - ): 'T * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Subtraction.html#Tensor_Tensor_1_op_Subtraction__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Subtraction(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( - ): 'T * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( - ): 'T * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Subtraction(Tensor.Tensor<'T> * 'T)
  name: "static member ( - ): Tensor<'T> * 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Subtraction.html#Tensor_Tensor_1_op_Subtraction_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.op_Subtraction(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.( - ): Tensor.Tensor<'T> * 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( - ): Tensor<'T> * 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Subtraction(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member ( - ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_Subtraction.html#Tensor_Tensor_1_op_Subtraction_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_Subtraction(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( - ): Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( - ): Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_Subtraction*
  name: ( - )
  href: api/Tensor.Tensor-1.op_Subtraction.html
  commentId: Overload:Tensor.Tensor`1.op_Subtraction*
  fullName: Tensor.Tensor.( - )
  nameWithType: Tensor.( - )
- uid: Tensor.Tensor`1.op_TwiddleTwiddleTwiddleTwiddle(Tensor.Tensor<bool>)
  name: 'static member ( ~~~~ ): Tensor<bool> -> Tensor<bool>'
  href: api/Tensor.Tensor-1.op_TwiddleTwiddleTwiddleTwiddle.html#Tensor_Tensor_1_op_TwiddleTwiddleTwiddleTwiddle_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.op_TwiddleTwiddleTwiddleTwiddle(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.( ~~~~ ): Tensor.Tensor<bool> -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.( ~~~~ ): Tensor<bool> -> Tensor<bool>'
- uid: Tensor.Tensor`1.op_TwiddleTwiddleTwiddleTwiddle*
  name: ( ~~~~ )
  href: api/Tensor.Tensor-1.op_TwiddleTwiddleTwiddleTwiddle.html
  commentId: Overload:Tensor.Tensor`1.op_TwiddleTwiddleTwiddleTwiddle*
  fullName: Tensor.Tensor.( ~~~~ )
  nameWithType: Tensor.( ~~~~ )
- uid: Tensor.Tensor`1.op_UnaryNegation(Tensor.Tensor<'T>)
  name: "static member ( ~- ): Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_UnaryNegation.html#Tensor_Tensor_1_op_UnaryNegation_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_UnaryNegation(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( ~- ): Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( ~- ): Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_UnaryNegation*
  name: ( ~- )
  href: api/Tensor.Tensor-1.op_UnaryNegation.html
  commentId: Overload:Tensor.Tensor`1.op_UnaryNegation*
  fullName: Tensor.Tensor.( ~- )
  nameWithType: Tensor.( ~- )
- uid: Tensor.Tensor`1.op_UnaryPlus(Tensor.Tensor<'T>)
  name: "static member ( ~+ ): Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.op_UnaryPlus.html#Tensor_Tensor_1_op_UnaryPlus_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.op_UnaryPlus(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.( ~+ ): Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.( ~+ ): Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.op_UnaryPlus*
  name: ( ~+ )
  href: api/Tensor.Tensor-1.op_UnaryPlus.html
  commentId: Overload:Tensor.Tensor`1.op_UnaryPlus*
  fullName: Tensor.Tensor.( ~+ )
  nameWithType: Tensor.( ~+ )
- uid: Tensor.Tensor`1.padLeft(Tensor.Tensor<'T>)
  name: "static member padLeft: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.padLeft.html#Tensor_Tensor_1_padLeft_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.padLeft(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.padLeft: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.padLeft: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.padLeft*
  name: padLeft
  href: api/Tensor.Tensor-1.padLeft.html
  commentId: Overload:Tensor.Tensor`1.padLeft*
  fullName: Tensor.Tensor.padLeft
  nameWithType: Tensor.padLeft
- uid: Tensor.Tensor`1.padRight(Tensor.Tensor<'T>)
  name: "static member padRight: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.padRight.html#Tensor_Tensor_1_padRight_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.padRight(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.padRight: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.padRight: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.padRight*
  name: padRight
  href: api/Tensor.Tensor-1.padRight.html
  commentId: Overload:Tensor.Tensor`1.padRight*
  fullName: Tensor.Tensor.padRight
  nameWithType: Tensor.padRight
- uid: Tensor.Tensor`1.padToSame(Tensor.Tensor<'T> list)
  name: "static member padToSame: Tensor<'T> list -> Tensor<'T> list"
  href: api/Tensor.Tensor-1.padToSame.html#Tensor_Tensor_1_padToSame_Tensor_Tensor__T__list_
  commentId: M:Tensor.Tensor`1.padToSame(Microsoft.FSharp.Collections.FSharpList{Tensor.Tensor{`0}})
  fullName: "static member Tensor.Tensor.padToSame: Tensor.Tensor<'T> list -> Tensor.Tensor<'T> list"
  nameWithType: "static member Tensor.padToSame: Tensor<'T> list -> Tensor<'T> list"
- uid: Tensor.Tensor`1.padToSame(Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC>)
  name: "static member padToSame: Tensor<'TA> * Tensor<'TB> * Tensor<'TC> -> Tensor<'TA> * Tensor<'TB> * Tensor<'TC>"
  href: api/Tensor.Tensor-1.padToSame.html#Tensor_Tensor_1_padToSame_Tensor_Tensor__TA____Tensor_Tensor__TB____Tensor_Tensor__TC__
  commentId: M:Tensor.Tensor`1.padToSame``3(Tensor.Tensor{``0},Tensor.Tensor{``1},Tensor.Tensor{``2})
  fullName: "static member Tensor.Tensor.padToSame: Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC> -> Tensor.Tensor<'TA> * Tensor.Tensor<'TB> * Tensor.Tensor<'TC>"
  nameWithType: "static member Tensor.padToSame: Tensor<'TA> * Tensor<'TB> * Tensor<'TC> -> Tensor<'TA> * Tensor<'TB> * Tensor<'TC>"
- uid: Tensor.Tensor`1.padToSame(Tensor.Tensor<'TA> * Tensor.Tensor<'TB>)
  name: "static member padToSame: Tensor<'TA> * Tensor<'TB> -> Tensor<'TA> * Tensor<'TB>"
  href: api/Tensor.Tensor-1.padToSame.html#Tensor_Tensor_1_padToSame_Tensor_Tensor__TA____Tensor_Tensor__TB__
  commentId: M:Tensor.Tensor`1.padToSame``2(Tensor.Tensor{``0},Tensor.Tensor{``1})
  fullName: "static member Tensor.Tensor.padToSame: Tensor.Tensor<'TA> * Tensor.Tensor<'TB> -> Tensor.Tensor<'TA> * Tensor.Tensor<'TB>"
  nameWithType: "static member Tensor.padToSame: Tensor<'TA> * Tensor<'TB> -> Tensor<'TA> * Tensor<'TB>"
- uid: Tensor.Tensor`1.padToSame*
  name: padToSame
  href: api/Tensor.Tensor-1.padToSame.html
  commentId: Overload:Tensor.Tensor`1.padToSame*
  fullName: Tensor.Tensor.padToSame
  nameWithType: Tensor.padToSame
- uid: Tensor.Tensor`1.permuteAxes(int list -> Tensor.Tensor<'T>)
  name: "static member permuteAxes: int list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.permuteAxes.html#Tensor_Tensor_1_permuteAxes_int_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.permuteAxes(Microsoft.FSharp.Collections.FSharpList{System.Int32},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.permuteAxes: int list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.permuteAxes: int list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.permuteAxes*
  name: permuteAxes
  href: api/Tensor.Tensor-1.permuteAxes.html
  commentId: Overload:Tensor.Tensor`1.permuteAxes*
  fullName: Tensor.Tensor.permuteAxes
  nameWithType: Tensor.permuteAxes
- uid: Tensor.Tensor`1.Pow('T * Tensor.Tensor<'T>)
  name: "static member Pow: 'T * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Pow.html#Tensor_Tensor_1_Pow__T___Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Pow(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Pow: 'T * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Pow: 'T * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Pow(Tensor.Tensor<'T> * 'T)
  name: "static member Pow: Tensor<'T> * 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Pow.html#Tensor_Tensor_1_Pow_Tensor_Tensor__T_____T_
  commentId: M:Tensor.Tensor`1.Pow(Tensor.Tensor{`0},`0)
  fullName: "static member Tensor.Tensor.Pow: Tensor.Tensor<'T> * 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Pow: Tensor<'T> * 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.Pow(Tensor.Tensor<'T> * Tensor.Tensor<'T>)
  name: "static member Pow: Tensor<'T> * Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Pow.html#Tensor_Tensor_1_Pow_Tensor_Tensor__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Pow(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Pow: Tensor.Tensor<'T> * Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Pow: Tensor<'T> * Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Pow*
  name: Pow
  href: api/Tensor.Tensor-1.Pow.html
  commentId: Overload:Tensor.Tensor`1.Pow*
  fullName: Tensor.Tensor.Pow
  nameWithType: Tensor.Pow
- uid: Tensor.Tensor`1.Pretty(unit)
  name: 'property Pretty: string'
  href: api/Tensor.Tensor-1.Pretty.html#Tensor_Tensor_1_Pretty_unit_
  commentId: P:Tensor.Tensor`1.Pretty
  fullName: 'property Tensor.Tensor.Pretty: string'
  nameWithType: 'property Tensor.Pretty: string'
- uid: Tensor.Tensor`1.Pretty*
  name: Pretty
  href: api/Tensor.Tensor-1.Pretty.html
  commentId: Overload:Tensor.Tensor`1.Pretty*
  fullName: Tensor.Tensor.Pretty
  nameWithType: Tensor.Pretty
- uid: Tensor.Tensor`1.product(Tensor.Tensor<'T>)
  name: "static member product: Tensor<'T> -> 'T"
  href: api/Tensor.Tensor-1.product.html#Tensor_Tensor_1_product_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.product(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.product: Tensor.Tensor<'T> -> 'T"
  nameWithType: "static member Tensor.product: Tensor<'T> -> 'T"
- uid: Tensor.Tensor`1.product*
  name: product
  href: api/Tensor.Tensor-1.product.html
  commentId: Overload:Tensor.Tensor`1.product*
  fullName: Tensor.Tensor.product
  nameWithType: Tensor.product
- uid: Tensor.Tensor`1.productAxis(int -> Tensor.Tensor<'T>)
  name: "static member productAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.productAxis.html#Tensor_Tensor_1_productAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.productAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.productAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.productAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.productAxis*
  name: productAxis
  href: api/Tensor.Tensor-1.productAxis.html
  commentId: Overload:Tensor.Tensor`1.productAxis*
  fullName: Tensor.Tensor.productAxis
  nameWithType: Tensor.productAxis
- uid: Tensor.Tensor`1.productTensor(Tensor.Tensor<'T>)
  name: "static member productTensor: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.productTensor.html#Tensor_Tensor_1_productTensor_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.productTensor(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.productTensor: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.productTensor: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.productTensor*
  name: productTensor
  href: api/Tensor.Tensor-1.productTensor.html
  commentId: Overload:Tensor.Tensor`1.productTensor*
  fullName: Tensor.Tensor.productTensor
  nameWithType: Tensor.productTensor
- uid: Tensor.Tensor`1.pseudoInvert(Tensor.Tensor<'T> * 'T option)
  name: "static member pseudoInvert: Tensor<'T> * 'T option -> Tensor<'T>"
  href: api/Tensor.Tensor-1.pseudoInvert.html#Tensor_Tensor_1_pseudoInvert_Tensor_Tensor__T_____T_option_
  commentId: M:Tensor.Tensor`1.pseudoInvert(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{`0})
  fullName: "static member Tensor.Tensor.pseudoInvert: Tensor.Tensor<'T> * 'T option -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.pseudoInvert: Tensor<'T> * 'T option -> Tensor<'T>"
- uid: Tensor.Tensor`1.pseudoInvert*
  name: pseudoInvert
  href: api/Tensor.Tensor-1.pseudoInvert.html
  commentId: Overload:Tensor.Tensor`1.pseudoInvert*
  fullName: Tensor.Tensor.pseudoInvert
  nameWithType: Tensor.pseudoInvert
- uid: Tensor.Tensor`1.range(Tensor.Rng list -> Tensor.Tensor<'T>)
  name: "static member range: Rng list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.range.html#Tensor_Tensor_1_range_Tensor_Rng_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.range(Microsoft.FSharp.Collections.FSharpList{Tensor.Rng},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.range: Tensor.Rng list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.range: Rng list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.range*
  name: range
  href: api/Tensor.Tensor-1.range.html
  commentId: Overload:Tensor.Tensor`1.range*
  fullName: Tensor.Tensor.range
  nameWithType: Tensor.range
- uid: Tensor.Tensor`1.relayout(Tensor.Backend.TensorLayout -> Tensor.Tensor<'T>)
  name: "static member relayout: TensorLayout -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.relayout.html#Tensor_Tensor_1_relayout_Tensor_Backend_TensorLayout____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.relayout(Tensor.Backend.TensorLayout,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.relayout: Tensor.Backend.TensorLayout -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.relayout: TensorLayout -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.relayout*
  name: relayout
  href: api/Tensor.Tensor-1.relayout.html
  commentId: Overload:Tensor.Tensor`1.relayout*
  fullName: Tensor.Tensor.relayout
  nameWithType: Tensor.relayout
- uid: Tensor.Tensor`1.replicate(int -> int64 -> Tensor.Tensor<'T>)
  name: "static member replicate: int -> int64 -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.replicate.html#Tensor_Tensor_1_replicate_int____int64____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.replicate(System.Int32,System.Int64,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.replicate: int -> int64 -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.replicate: int -> int64 -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.replicate*
  name: replicate
  href: api/Tensor.Tensor-1.replicate.html
  commentId: Overload:Tensor.Tensor`1.replicate*
  fullName: Tensor.Tensor.replicate
  nameWithType: Tensor.replicate
- uid: Tensor.Tensor`1.reshape(int64 list -> Tensor.Tensor<'T>)
  name: "static member reshape: int64 list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.reshape.html#Tensor_Tensor_1_reshape_int64_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.reshape(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.reshape: int64 list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.reshape: int64 list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.reshape*
  name: reshape
  href: api/Tensor.Tensor-1.reshape.html
  commentId: Overload:Tensor.Tensor`1.reshape*
  fullName: Tensor.Tensor.reshape
  nameWithType: Tensor.reshape
- uid: Tensor.Tensor`1.reshapeView(int64 list -> Tensor.Tensor<'T>)
  name: "static member reshapeView: int64 list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.reshapeView.html#Tensor_Tensor_1_reshapeView_int64_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.reshapeView(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.reshapeView: int64 list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.reshapeView: int64 list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.reshapeView*
  name: reshapeView
  href: api/Tensor.Tensor-1.reshapeView.html
  commentId: Overload:Tensor.Tensor`1.reshapeView*
  fullName: Tensor.Tensor.reshapeView
  nameWithType: Tensor.reshapeView
- uid: Tensor.Tensor`1.reverseAxis(int -> Tensor.Tensor<'T>)
  name: "static member reverseAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.reverseAxis.html#Tensor_Tensor_1_reverseAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.reverseAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.reverseAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.reverseAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.reverseAxis*
  name: reverseAxis
  href: api/Tensor.Tensor-1.reverseAxis.html
  commentId: Overload:Tensor.Tensor`1.reverseAxis*
  fullName: Tensor.Tensor.reverseAxis
  nameWithType: Tensor.reverseAxis
- uid: Tensor.Tensor`1.Round(Tensor.Tensor<'T>)
  name: "static member Round: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Round.html#Tensor_Tensor_1_Round_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Round(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Round: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Round: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Round*
  name: Round
  href: api/Tensor.Tensor-1.Round.html
  commentId: Overload:Tensor.Tensor`1.Round*
  fullName: Tensor.Tensor.Round
  nameWithType: Tensor.Round
- uid: Tensor.Tensor`1.scalar(Tensor.Backend.ITensorDevice -> 'T)
  name: "static member scalar: ITensorDevice -> 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.scalar.html#Tensor_Tensor_1_scalar_Tensor_Backend_ITensorDevice_____T_
  commentId: M:Tensor.Tensor`1.scalar(Tensor.Backend.ITensorDevice,`0)
  fullName: "static member Tensor.Tensor.scalar: Tensor.Backend.ITensorDevice -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.scalar: ITensorDevice -> 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.scalar*
  name: scalar
  href: api/Tensor.Tensor-1.scalar.html
  commentId: Overload:Tensor.Tensor`1.scalar*
  fullName: Tensor.Tensor.scalar
  nameWithType: Tensor.scalar
- uid: Tensor.Tensor`1.scalarLike(Tensor.ITensor -> 'T)
  name: "static member scalarLike: ITensor -> 'T -> Tensor<'T>"
  href: api/Tensor.Tensor-1.scalarLike.html#Tensor_Tensor_1_scalarLike_Tensor_ITensor_____T_
  commentId: M:Tensor.Tensor`1.scalarLike(Tensor.ITensor,`0)
  fullName: "static member Tensor.Tensor.scalarLike: Tensor.ITensor -> 'T -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.scalarLike: ITensor -> 'T -> Tensor<'T>"
- uid: Tensor.Tensor`1.scalarLike*
  name: scalarLike
  href: api/Tensor.Tensor-1.scalarLike.html
  commentId: Overload:Tensor.Tensor`1.scalarLike*
  fullName: Tensor.Tensor.scalarLike
  nameWithType: Tensor.scalarLike
- uid: Tensor.Tensor`1.scatter(Tensor.Tensor<int64> option list -> int64 list -> Tensor.Tensor<'T>)
  name: "static member scatter: Tensor<int64> option list -> int64 list -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.scatter.html#Tensor_Tensor_1_scatter_Tensor_Tensor_int64__option_list____int64_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.scatter(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Core.FSharpOption{Tensor.Tensor{System.Int64}}},Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.scatter: Tensor.Tensor<int64> option list -> int64 list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.scatter: Tensor<int64> option list -> int64 list -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.scatter*
  name: scatter
  href: api/Tensor.Tensor-1.scatter.html
  commentId: Overload:Tensor.Tensor`1.scatter*
  fullName: Tensor.Tensor.scatter
  nameWithType: Tensor.scatter
- uid: Tensor.Tensor`1.set(Tensor.Tensor<'T> -> int64 list -> 'T)
  name: "static member set: Tensor<'T> -> int64 list -> 'T -> unit"
  href: api/Tensor.Tensor-1.set.html#Tensor_Tensor_1_set_Tensor_Tensor__T_____int64_list_____T_
  commentId: M:Tensor.Tensor`1.set(Tensor.Tensor{`0},Microsoft.FSharp.Collections.FSharpList{System.Int64},`0)
  fullName: "static member Tensor.Tensor.set: Tensor.Tensor<'T> -> int64 list -> 'T -> unit"
  nameWithType: "static member Tensor.set: Tensor<'T> -> int64 list -> 'T -> unit"
- uid: Tensor.Tensor`1.set*
  name: set
  href: api/Tensor.Tensor-1.set.html
  commentId: Overload:Tensor.Tensor`1.set*
  fullName: Tensor.Tensor.set
  nameWithType: Tensor.set
- uid: Tensor.Tensor`1.Sgn(Tensor.Tensor<'T>)
  name: "static member Sgn: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Sgn.html#Tensor_Tensor_1_Sgn_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Sgn(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Sgn: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Sgn: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Sgn*
  name: Sgn
  href: api/Tensor.Tensor-1.Sgn.html
  commentId: Overload:Tensor.Tensor`1.Sgn*
  fullName: Tensor.Tensor.Sgn
  nameWithType: Tensor.Sgn
- uid: Tensor.Tensor`1.shape(Tensor.Tensor<'T>)
  name: "static member shape: Tensor<'T> -> int64 list"
  href: api/Tensor.Tensor-1.shape.html#Tensor_Tensor_1_shape_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.shape(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.shape: Tensor.Tensor<'T> -> int64 list"
  nameWithType: "static member Tensor.shape: Tensor<'T> -> int64 list"
- uid: Tensor.Tensor`1.Shape(unit)
  name: 'property Shape: int64 list'
  href: api/Tensor.Tensor-1.Shape.html#Tensor_Tensor_1_Shape_unit_
  commentId: P:Tensor.Tensor`1.Shape
  fullName: 'property Tensor.Tensor.Shape: int64 list'
  nameWithType: 'property Tensor.Shape: int64 list'
- uid: Tensor.Tensor`1.shape*
  name: shape
  href: api/Tensor.Tensor-1.shape.html
  commentId: Overload:Tensor.Tensor`1.shape*
  fullName: Tensor.Tensor.shape
  nameWithType: Tensor.shape
- uid: Tensor.Tensor`1.Shape*
  name: Shape
  href: api/Tensor.Tensor-1.Shape.html
  commentId: Overload:Tensor.Tensor`1.Shape*
  fullName: Tensor.Tensor.Shape
  nameWithType: Tensor.Shape
- uid: Tensor.Tensor`1.Sin(Tensor.Tensor<'T>)
  name: "static member Sin: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Sin.html#Tensor_Tensor_1_Sin_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Sin(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Sin: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Sin: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Sin*
  name: Sin
  href: api/Tensor.Tensor-1.Sin.html
  commentId: Overload:Tensor.Tensor`1.Sin*
  fullName: Tensor.Tensor.Sin
  nameWithType: Tensor.Sin
- uid: Tensor.Tensor`1.Sinh(Tensor.Tensor<'T>)
  name: "static member Sinh: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Sinh.html#Tensor_Tensor_1_Sinh_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Sinh(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Sinh: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Sinh: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Sinh*
  name: Sinh
  href: api/Tensor.Tensor-1.Sinh.html
  commentId: Overload:Tensor.Tensor`1.Sinh*
  fullName: Tensor.Tensor.Sinh
  nameWithType: Tensor.Sinh
- uid: Tensor.Tensor`1.Sqrt(Tensor.Tensor<'T>)
  name: "static member Sqrt: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Sqrt.html#Tensor_Tensor_1_Sqrt_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Sqrt(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Sqrt: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Sqrt: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Sqrt*
  name: Sqrt
  href: api/Tensor.Tensor-1.Sqrt.html
  commentId: Overload:Tensor.Tensor`1.Sqrt*
  fullName: Tensor.Tensor.Sqrt
  nameWithType: Tensor.Sqrt
- uid: Tensor.Tensor`1.std(Tensor.Tensor<'T> * int64 option)
  name: "static member std: Tensor<'T> * int64 option -> 'T"
  href: api/Tensor.Tensor-1.std.html#Tensor_Tensor_1_std_Tensor_Tensor__T____int64_option_
  commentId: M:Tensor.Tensor`1.std(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{System.Int64})
  fullName: "static member Tensor.Tensor.std: Tensor.Tensor<'T> * int64 option -> 'T"
  nameWithType: "static member Tensor.std: Tensor<'T> * int64 option -> 'T"
- uid: Tensor.Tensor`1.std*
  name: std
  href: api/Tensor.Tensor-1.std.html
  commentId: Overload:Tensor.Tensor`1.std*
  fullName: Tensor.Tensor.std
  nameWithType: Tensor.std
- uid: Tensor.Tensor`1.stdAxis(int * Tensor.Tensor<'T> * int64 option)
  name: "static member stdAxis: int * Tensor<'T> * int64 option -> Tensor<'T>"
  href: api/Tensor.Tensor-1.stdAxis.html#Tensor_Tensor_1_stdAxis_int___Tensor_Tensor__T____int64_option_
  commentId: M:Tensor.Tensor`1.stdAxis(System.Int32,Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{System.Int64})
  fullName: "static member Tensor.Tensor.stdAxis: int * Tensor.Tensor<'T> * int64 option -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.stdAxis: int * Tensor<'T> * int64 option -> Tensor<'T>"
- uid: Tensor.Tensor`1.stdAxis*
  name: stdAxis
  href: api/Tensor.Tensor-1.stdAxis.html
  commentId: Overload:Tensor.Tensor`1.stdAxis*
  fullName: Tensor.Tensor.stdAxis
  nameWithType: Tensor.stdAxis
- uid: Tensor.Tensor`1.Storage(unit)
  name: "property Storage: ITensorStorage<'T>"
  href: api/Tensor.Tensor-1.Storage.html#Tensor_Tensor_1_Storage_unit_
  commentId: P:Tensor.Tensor`1.Storage
  fullName: "property Tensor.Tensor.Storage: Tensor.Backend.ITensorStorage<'T>"
  nameWithType: "property Tensor.Storage: ITensorStorage<'T>"
- uid: Tensor.Tensor`1.Storage*
  name: Storage
  href: api/Tensor.Tensor-1.Storage.html
  commentId: Overload:Tensor.Tensor`1.Storage*
  fullName: Tensor.Tensor.Storage
  nameWithType: Tensor.Storage
- uid: Tensor.Tensor`1.sum(Tensor.Tensor<'T>)
  name: "static member sum: Tensor<'T> -> 'T"
  href: api/Tensor.Tensor-1.sum.html#Tensor_Tensor_1_sum_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.sum(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.sum: Tensor.Tensor<'T> -> 'T"
  nameWithType: "static member Tensor.sum: Tensor<'T> -> 'T"
- uid: Tensor.Tensor`1.sum*
  name: sum
  href: api/Tensor.Tensor-1.sum.html
  commentId: Overload:Tensor.Tensor`1.sum*
  fullName: Tensor.Tensor.sum
  nameWithType: Tensor.sum
- uid: Tensor.Tensor`1.sumAxis(int -> Tensor.Tensor<'T>)
  name: "static member sumAxis: int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.sumAxis.html#Tensor_Tensor_1_sumAxis_int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.sumAxis(System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.sumAxis: int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.sumAxis: int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.sumAxis*
  name: sumAxis
  href: api/Tensor.Tensor-1.sumAxis.html
  commentId: Overload:Tensor.Tensor`1.sumAxis*
  fullName: Tensor.Tensor.sumAxis
  nameWithType: Tensor.sumAxis
- uid: Tensor.Tensor`1.sumTensor(Tensor.Tensor<'T>)
  name: "static member sumTensor: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.sumTensor.html#Tensor_Tensor_1_sumTensor_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.sumTensor(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.sumTensor: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.sumTensor: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.sumTensor*
  name: sumTensor
  href: api/Tensor.Tensor-1.sumTensor.html
  commentId: Overload:Tensor.Tensor`1.sumTensor*
  fullName: Tensor.Tensor.sumTensor
  nameWithType: Tensor.sumTensor
- uid: Tensor.Tensor`1.SVD(Tensor.Tensor<'T>)
  name: "static member SVD: Tensor<'T> -> Tensor<'T> * Tensor<'T> * Tensor<'T>"
  href: api/Tensor.Tensor-1.SVD.html#Tensor_Tensor_1_SVD_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.SVD(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.SVD: Tensor.Tensor<'T> -> Tensor.Tensor<'T> * Tensor.Tensor<'T> * Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.SVD: Tensor<'T> -> Tensor<'T> * Tensor<'T> * Tensor<'T>"
- uid: Tensor.Tensor`1.SVD*
  name: SVD
  href: api/Tensor.Tensor-1.SVD.html
  commentId: Overload:Tensor.Tensor`1.SVD*
  fullName: Tensor.Tensor.SVD
  nameWithType: Tensor.SVD
- uid: Tensor.Tensor`1.SVDWithoutUV(Tensor.Tensor<'T>)
  name: "static member SVDWithoutUV: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.SVDWithoutUV.html#Tensor_Tensor_1_SVDWithoutUV_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.SVDWithoutUV(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.SVDWithoutUV: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.SVDWithoutUV: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.SVDWithoutUV*
  name: SVDWithoutUV
  href: api/Tensor.Tensor-1.SVDWithoutUV.html
  commentId: Overload:Tensor.Tensor`1.SVDWithoutUV*
  fullName: Tensor.Tensor.SVDWithoutUV
  nameWithType: Tensor.SVDWithoutUV
- uid: Tensor.Tensor`1.swapDim(int -> int -> Tensor.Tensor<'T>)
  name: "static member swapDim: int -> int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.swapDim.html#Tensor_Tensor_1_swapDim_int____int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.swapDim(System.Int32,System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.swapDim: int -> int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.swapDim: int -> int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.swapDim*
  name: swapDim
  href: api/Tensor.Tensor-1.swapDim.html
  commentId: Overload:Tensor.Tensor`1.swapDim*
  fullName: Tensor.Tensor.swapDim
  nameWithType: Tensor.swapDim
- uid: Tensor.Tensor`1.symmetricEigenDecomposition(Tensor.MatrixPart -> Tensor.Tensor<'T>)
  name: "static member symmetricEigenDecomposition: MatrixPart -> Tensor<'T> -> Tensor<'T> * Tensor<'T>"
  href: api/Tensor.Tensor-1.symmetricEigenDecomposition.html#Tensor_Tensor_1_symmetricEigenDecomposition_Tensor_MatrixPart____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.symmetricEigenDecomposition(Tensor.MatrixPart,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.symmetricEigenDecomposition: Tensor.MatrixPart -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> * Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.symmetricEigenDecomposition: MatrixPart -> Tensor<'T> -> Tensor<'T> * Tensor<'T>"
- uid: Tensor.Tensor`1.symmetricEigenDecomposition*
  name: symmetricEigenDecomposition
  href: api/Tensor.Tensor-1.symmetricEigenDecomposition.html
  commentId: Overload:Tensor.Tensor`1.symmetricEigenDecomposition*
  fullName: Tensor.Tensor.symmetricEigenDecomposition
  nameWithType: Tensor.symmetricEigenDecomposition
- uid: Tensor.Tensor`1.T(unit)
  name: "property T: Tensor<'T>"
  href: api/Tensor.Tensor-1.T.html#Tensor_Tensor_1_T_unit_
  commentId: P:Tensor.Tensor`1.T
  fullName: "property Tensor.Tensor.T: Tensor.Tensor<'T>"
  nameWithType: "property Tensor.T: Tensor<'T>"
- uid: Tensor.Tensor`1.T*
  name: T
  href: api/Tensor.Tensor-1.T.html
  commentId: Overload:Tensor.Tensor`1.T*
  fullName: Tensor.Tensor.T
  nameWithType: Tensor.T
- uid: Tensor.Tensor`1.Tan(Tensor.Tensor<'T>)
  name: "static member Tan: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Tan.html#Tensor_Tensor_1_Tan_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Tan(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Tan: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Tan: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Tan*
  name: Tan
  href: api/Tensor.Tensor-1.Tan.html
  commentId: Overload:Tensor.Tensor`1.Tan*
  fullName: Tensor.Tensor.Tan
  nameWithType: Tensor.Tan
- uid: Tensor.Tensor`1.Tanh(Tensor.Tensor<'T>)
  name: "static member Tanh: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Tanh.html#Tensor_Tensor_1_Tanh_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Tanh(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Tanh: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Tanh: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Tanh*
  name: Tanh
  href: api/Tensor.Tensor-1.Tanh.html
  commentId: Overload:Tensor.Tensor`1.Tanh*
  fullName: Tensor.Tensor.Tanh
  nameWithType: Tensor.Tanh
- uid: Tensor.Tensor`1.tensorProduct(Tensor.Tensor<'T> -> Tensor.Tensor<'T>)
  name: "static member tensorProduct: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.tensorProduct.html#Tensor_Tensor_1_tensorProduct_Tensor_Tensor__T_____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.tensorProduct(Tensor.Tensor{`0},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.tensorProduct: Tensor.Tensor<'T> -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.tensorProduct: Tensor<'T> -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.tensorProduct*
  name: tensorProduct
  href: api/Tensor.Tensor-1.tensorProduct.html
  commentId: Overload:Tensor.Tensor`1.tensorProduct*
  fullName: Tensor.Tensor.tensorProduct
  nameWithType: Tensor.tensorProduct
- uid: Tensor.Tensor`1.ToString(int64)
  name: 'member ToString: int64 -> string'
  href: api/Tensor.Tensor-1.ToString.html#Tensor_Tensor_1_ToString_int64_
  commentId: M:Tensor.Tensor`1.ToString(System.Int64)
  fullName: 'member Tensor.Tensor.ToString: int64 -> string'
  nameWithType: 'member Tensor.ToString: int64 -> string'
- uid: Tensor.Tensor`1.ToString(unit)
  name: 'override member ToString: unit -> string'
  href: api/Tensor.Tensor-1.ToString.html#Tensor_Tensor_1_ToString_unit_
  commentId: M:Tensor.Tensor`1.ToString
  fullName: 'override member Tensor.Tensor.ToString: unit -> string'
  nameWithType: 'override member Tensor.ToString: unit -> string'
- uid: Tensor.Tensor`1.ToString*
  name: ToString
  href: api/Tensor.Tensor-1.ToString.html
  commentId: Overload:Tensor.Tensor`1.ToString*
  fullName: Tensor.Tensor.ToString
  nameWithType: Tensor.ToString
- uid: Tensor.Tensor`1.trace(Tensor.Tensor<'T>)
  name: "static member trace: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.trace.html#Tensor_Tensor_1_trace_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.trace(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.trace: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.trace: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.trace*
  name: trace
  href: api/Tensor.Tensor-1.trace.html
  commentId: Overload:Tensor.Tensor`1.trace*
  fullName: Tensor.Tensor.trace
  nameWithType: Tensor.trace
- uid: Tensor.Tensor`1.traceAxis(int -> int -> Tensor.Tensor<'T>)
  name: "static member traceAxis: int -> int -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.traceAxis.html#Tensor_Tensor_1_traceAxis_int____int____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.traceAxis(System.Int32,System.Int32,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.traceAxis: int -> int -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.traceAxis: int -> int -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.traceAxis*
  name: traceAxis
  href: api/Tensor.Tensor-1.traceAxis.html
  commentId: Overload:Tensor.Tensor`1.traceAxis*
  fullName: Tensor.Tensor.traceAxis
  nameWithType: Tensor.traceAxis
- uid: Tensor.Tensor`1.transfer(Tensor.Backend.ITensorDevice -> Tensor.Tensor<'T>)
  name: "static member transfer: ITensorDevice -> Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.transfer.html#Tensor_Tensor_1_transfer_Tensor_Backend_ITensorDevice____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.transfer(Tensor.Backend.ITensorDevice,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.transfer: Tensor.Backend.ITensorDevice -> Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.transfer: ITensorDevice -> Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.transfer*
  name: transfer
  href: api/Tensor.Tensor-1.transfer.html
  commentId: Overload:Tensor.Tensor`1.transfer*
  fullName: Tensor.Tensor.transfer
  nameWithType: Tensor.transfer
- uid: Tensor.Tensor`1.TransferFrom(Tensor.Tensor<'T>)
  name: "member TransferFrom: Tensor<'T> -> unit"
  href: api/Tensor.Tensor-1.TransferFrom.html#Tensor_Tensor_1_TransferFrom_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.TransferFrom(Tensor.Tensor{`0})
  fullName: "member Tensor.Tensor.TransferFrom: Tensor.Tensor<'T> -> unit"
  nameWithType: "member Tensor.TransferFrom: Tensor<'T> -> unit"
- uid: Tensor.Tensor`1.TransferFrom*
  name: TransferFrom
  href: api/Tensor.Tensor-1.TransferFrom.html
  commentId: Overload:Tensor.Tensor`1.TransferFrom*
  fullName: Tensor.Tensor.TransferFrom
  nameWithType: Tensor.TransferFrom
- uid: Tensor.Tensor`1.transpose(Tensor.Tensor<'T>)
  name: "static member transpose: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.transpose.html#Tensor_Tensor_1_transpose_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.transpose(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.transpose: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.transpose: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.transpose*
  name: transpose
  href: api/Tensor.Tensor-1.transpose.html
  commentId: Overload:Tensor.Tensor`1.transpose*
  fullName: Tensor.Tensor.transpose
  nameWithType: Tensor.transpose
- uid: Tensor.Tensor`1.trueIdx(Tensor.Tensor<bool>)
  name: 'static member trueIdx: Tensor<bool> -> Tensor<int64>'
  href: api/Tensor.Tensor-1.trueIdx.html#Tensor_Tensor_1_trueIdx_Tensor_Tensor_bool__
  commentId: M:Tensor.Tensor`1.trueIdx(Tensor.Tensor{System.Boolean})
  fullName: 'static member Tensor.Tensor.trueIdx: Tensor.Tensor<bool> -> Tensor.Tensor<int64>'
  nameWithType: 'static member Tensor.trueIdx: Tensor<bool> -> Tensor<int64>'
- uid: Tensor.Tensor`1.trueIdx*
  name: trueIdx
  href: api/Tensor.Tensor-1.trueIdx.html
  commentId: Overload:Tensor.Tensor`1.trueIdx*
  fullName: Tensor.Tensor.trueIdx
  nameWithType: Tensor.trueIdx
- uid: Tensor.Tensor`1.trues(Tensor.Backend.ITensorDevice -> int64 list)
  name: 'static member trues: ITensorDevice -> int64 list -> Tensor<bool>'
  href: api/Tensor.Tensor-1.trues.html#Tensor_Tensor_1_trues_Tensor_Backend_ITensorDevice____int64_list_
  commentId: M:Tensor.Tensor`1.trues(Tensor.Backend.ITensorDevice,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: 'static member Tensor.Tensor.trues: Tensor.Backend.ITensorDevice -> int64 list -> Tensor.Tensor<bool>'
  nameWithType: 'static member Tensor.trues: ITensorDevice -> int64 list -> Tensor<bool>'
- uid: Tensor.Tensor`1.trues*
  name: trues
  href: api/Tensor.Tensor-1.trues.html
  commentId: Overload:Tensor.Tensor`1.trues*
  fullName: Tensor.Tensor.trues
  nameWithType: Tensor.trues
- uid: Tensor.Tensor`1.Truncate(Tensor.Tensor<'T>)
  name: "static member Truncate: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.Truncate.html#Tensor_Tensor_1_Truncate_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.Truncate(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.Truncate: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.Truncate: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.Truncate*
  name: Truncate
  href: api/Tensor.Tensor-1.Truncate.html
  commentId: Overload:Tensor.Tensor`1.Truncate*
  fullName: Tensor.Tensor.Truncate
  nameWithType: Tensor.Truncate
- uid: Tensor.Tensor`1.tryFind('T -> Tensor.Tensor<'T>)
  name: "static member tryFind: 'T -> Tensor<'T> -> int64 list option"
  href: api/Tensor.Tensor-1.tryFind.html#Tensor_Tensor_1_tryFind__T____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.tryFind(`0,Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.tryFind: 'T -> Tensor.Tensor<'T> -> int64 list option"
  nameWithType: "static member Tensor.tryFind: 'T -> Tensor<'T> -> int64 list option"
- uid: Tensor.Tensor`1.tryFind*
  name: tryFind
  href: api/Tensor.Tensor-1.tryFind.html
  commentId: Overload:Tensor.Tensor`1.tryFind*
  fullName: Tensor.Tensor.tryFind
  nameWithType: Tensor.tryFind
- uid: Tensor.Tensor`1.tryReshapeView(int64 list -> Tensor.Tensor<'T>)
  name: "static member tryReshapeView: int64 list -> Tensor<'T> -> Tensor<'T> option"
  href: api/Tensor.Tensor-1.tryReshapeView.html#Tensor_Tensor_1_tryReshapeView_int64_list____Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.tryReshapeView(Microsoft.FSharp.Collections.FSharpList{System.Int64},Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.tryReshapeView: int64 list -> Tensor.Tensor<'T> -> Tensor.Tensor<'T> option"
  nameWithType: "static member Tensor.tryReshapeView: int64 list -> Tensor<'T> -> Tensor<'T> option"
- uid: Tensor.Tensor`1.tryReshapeView*
  name: tryReshapeView
  href: api/Tensor.Tensor-1.tryReshapeView.html
  commentId: Overload:Tensor.Tensor`1.tryReshapeView*
  fullName: Tensor.Tensor.tryReshapeView
  nameWithType: Tensor.tryReshapeView
- uid: Tensor.Tensor`1.value(Tensor.Tensor<'T>)
  name: "static member value: Tensor<'T> -> 'T"
  href: api/Tensor.Tensor-1.value.html#Tensor_Tensor_1_value_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.value(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.value: Tensor.Tensor<'T> -> 'T"
  nameWithType: "static member Tensor.value: Tensor<'T> -> 'T"
- uid: Tensor.Tensor`1.Value(unit)
  name: "property Value: 'T"
  href: api/Tensor.Tensor-1.Value.html#Tensor_Tensor_1_Value_unit_
  commentId: P:Tensor.Tensor`1.Value
  fullName: "property Tensor.Tensor.Value: 'T"
  nameWithType: "property Tensor.Value: 'T"
- uid: Tensor.Tensor`1.value*
  name: value
  href: api/Tensor.Tensor-1.value.html
  commentId: Overload:Tensor.Tensor`1.value*
  fullName: Tensor.Tensor.value
  nameWithType: Tensor.value
- uid: Tensor.Tensor`1.Value*
  name: Value
  href: api/Tensor.Tensor-1.Value.html
  commentId: Overload:Tensor.Tensor`1.Value*
  fullName: Tensor.Tensor.Value
  nameWithType: Tensor.Value
- uid: Tensor.Tensor`1.var(Tensor.Tensor<'T> * int64 option)
  name: "static member var: Tensor<'T> * int64 option -> 'T"
  href: api/Tensor.Tensor-1.var.html#Tensor_Tensor_1_var_Tensor_Tensor__T____int64_option_
  commentId: M:Tensor.Tensor`1.var(Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{System.Int64})
  fullName: "static member Tensor.Tensor.var: Tensor.Tensor<'T> * int64 option -> 'T"
  nameWithType: "static member Tensor.var: Tensor<'T> * int64 option -> 'T"
- uid: Tensor.Tensor`1.var*
  name: var
  href: api/Tensor.Tensor-1.var.html
  commentId: Overload:Tensor.Tensor`1.var*
  fullName: Tensor.Tensor.var
  nameWithType: Tensor.var
- uid: Tensor.Tensor`1.varAxis(int * Tensor.Tensor<'T> * int64 option)
  name: "static member varAxis: int * Tensor<'T> * int64 option -> Tensor<'T>"
  href: api/Tensor.Tensor-1.varAxis.html#Tensor_Tensor_1_varAxis_int___Tensor_Tensor__T____int64_option_
  commentId: M:Tensor.Tensor`1.varAxis(System.Int32,Tensor.Tensor{`0},Microsoft.FSharp.Core.FSharpOption{System.Int64})
  fullName: "static member Tensor.Tensor.varAxis: int * Tensor.Tensor<'T> * int64 option -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.varAxis: int * Tensor<'T> * int64 option -> Tensor<'T>"
- uid: Tensor.Tensor`1.varAxis*
  name: varAxis
  href: api/Tensor.Tensor-1.varAxis.html
  commentId: Overload:Tensor.Tensor`1.varAxis*
  fullName: Tensor.Tensor.varAxis
  nameWithType: Tensor.varAxis
- uid: Tensor.Tensor`1.zeros(Tensor.Backend.ITensorDevice -> int64 list)
  name: "static member zeros: ITensorDevice -> int64 list -> Tensor<'T>"
  href: api/Tensor.Tensor-1.zeros.html#Tensor_Tensor_1_zeros_Tensor_Backend_ITensorDevice____int64_list_
  commentId: M:Tensor.Tensor`1.zeros(Tensor.Backend.ITensorDevice,Microsoft.FSharp.Collections.FSharpList{System.Int64})
  fullName: "static member Tensor.Tensor.zeros: Tensor.Backend.ITensorDevice -> int64 list -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.zeros: ITensorDevice -> int64 list -> Tensor<'T>"
- uid: Tensor.Tensor`1.zeros*
  name: zeros
  href: api/Tensor.Tensor-1.zeros.html
  commentId: Overload:Tensor.Tensor`1.zeros*
  fullName: Tensor.Tensor.zeros
  nameWithType: Tensor.zeros
- uid: Tensor.Tensor`1.zerosLike(Tensor.Tensor<'T>)
  name: "static member zerosLike: Tensor<'T> -> Tensor<'T>"
  href: api/Tensor.Tensor-1.zerosLike.html#Tensor_Tensor_1_zerosLike_Tensor_Tensor__T__
  commentId: M:Tensor.Tensor`1.zerosLike(Tensor.Tensor{`0})
  fullName: "static member Tensor.Tensor.zerosLike: Tensor.Tensor<'T> -> Tensor.Tensor<'T>"
  nameWithType: "static member Tensor.zerosLike: Tensor<'T> -> Tensor<'T>"
- uid: Tensor.Tensor`1.zerosLike*
  name: zerosLike
  href: api/Tensor.Tensor-1.zerosLike.html
  commentId: Overload:Tensor.Tensor`1.zerosLike*
  fullName: Tensor.Tensor.zerosLike
  nameWithType: Tensor.zerosLike
- uid: Tensor.TensorOrder
  name: TensorOrder (union)
  href: api/Tensor.TensorOrder.html
  commentId: T:Tensor.TensorOrder
  fullName: Tensor.TensorOrder
  nameWithType: Tensor.TensorOrder
- uid: Tensor.TensorOrder.ColumnMajor
  name: ColumnMajor
  href: api/Tensor.TensorOrder.ColumnMajor.html
  commentId: T:Tensor.TensorOrder.ColumnMajor
  fullName: Tensor.TensorOrder.ColumnMajor
  nameWithType: TensorOrder.ColumnMajor
- uid: Tensor.TensorOrder.CustomOrder
  name: CustomOrder of int list
  href: api/Tensor.TensorOrder.CustomOrder.html
  commentId: T:Tensor.TensorOrder.CustomOrder
  fullName: Tensor.TensorOrder.CustomOrder of int list
  nameWithType: TensorOrder.CustomOrder of int list
- uid: Tensor.TensorOrder.RowMajor
  name: RowMajor
  href: api/Tensor.TensorOrder.RowMajor.html
  commentId: T:Tensor.TensorOrder.RowMajor
  fullName: Tensor.TensorOrder.RowMajor
  nameWithType: TensorOrder.RowMajor
- uid: Tensor.TensorVal
  name: TensorVal (mod)
  href: api/Tensor.TensorVal.html
  commentId: T:Tensor.TensorVal
  fullName: Tensor.TensorVal
  nameWithType: Tensor.TensorVal
- uid: Tensor.TensorVal.Fill()
  name: val Fill
  href: api/Tensor.TensorVal.Fill%28%29.html
  commentId: P:Tensor.Fill
  fullName: 'val Tensor.TensorVal.Fill: int64'
  nameWithType: 'val TensorVal.Fill: int64'
- uid: Tensor.TensorVal.NewAxis()
  name: val NewAxis
  href: api/Tensor.TensorVal.NewAxis%28%29.html
  commentId: P:Tensor.NewAxis
  fullName: 'val Tensor.TensorVal.NewAxis: int64'
  nameWithType: 'val TensorVal.NewAxis: int64'
- uid: Tensor.TensorVal.NoMask()
  name: val NoMask
  href: api/Tensor.TensorVal.NoMask%28%29.html
  commentId: P:Tensor.NoMask
  fullName: 'val Tensor.TensorVal.NoMask: Tensor.Tensor<bool>'
  nameWithType: 'val TensorVal.NoMask: Tensor<bool>'
- uid: Tensor.TensorVal.NotFound()
  name: val NotFound
  href: api/Tensor.TensorVal.NotFound%28%29.html
  commentId: P:Tensor.NotFound
  fullName: 'val Tensor.TensorVal.NotFound: int64'
  nameWithType: 'val TensorVal.NotFound: int64'
- uid: Tensor.TensorVal.Remainder()
  name: val Remainder
  href: api/Tensor.TensorVal.Remainder%28%29.html
  commentId: P:Tensor.Remainder
  fullName: 'val Tensor.TensorVal.Remainder: int64'
  nameWithType: 'val TensorVal.Remainder: int64'
